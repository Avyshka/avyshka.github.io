{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./data/css/style.css?7719","webpack:///./node_modules/fpsmeter/dist/fpsmeter.js","webpack:///./src/App.ts","webpack:///./src/config/GameConfigs.ts","webpack:///./src/content/Language.ts","webpack:///./src/cursor/events/CursorEvents.ts","webpack:///./src/cursor/views/Cursour.ts","webpack:///./src/data/constants.ts","webpack:///./src/data/events/GameProcessEvents.ts","webpack:///./src/data/models/GameDataModel.ts","webpack:///./src/data/models/GameProcessModel.ts","webpack:///./src/data/models/LoadingAssetsModel.ts","webpack:///./src/exports.ts","webpack:///./src/index.ts","webpack:///./src/login/events/LoginEvents.ts","webpack:///./src/login/views/Profile.ts","webpack:///./src/login/views/SignIn.ts","webpack:///./src/login/views/SignUp.ts","webpack:///./src/login/views/SignUpInBase.ts","webpack:///./src/login/views/UserChoise.ts","webpack:///./src/map/events/MapEvents.ts","webpack:///./src/map/models/MapModel.ts","webpack:///./src/map/utils/LinefinderUtils.ts","webpack:///./src/map/utils/PathfinderUtils.ts","webpack:///./src/map/views/Choice.ts","webpack:///./src/map/views/CostPerMonster.ts","webpack:///./src/map/views/MapView.ts","webpack:///./src/map/views/MonsterNavigator.ts","webpack:///./src/map/views/Star.ts","webpack:///./src/menu/builders/MenuButtonsBuilder.ts","webpack:///./src/menu/constants.ts","webpack:///./src/menu/events/MenuEvents.ts","webpack:///./src/menu/managers/ResetMenuManager.ts","webpack:///./src/menu/views/ContainerWithButtons.ts","webpack:///./src/menu/views/MainMenu.ts","webpack:///./src/menu/views/OptionsMenu.ts","webpack:///./src/menu/views/ScoreMenu.ts","webpack:///./src/menu/views/SubMenu.ts","webpack:///./src/menu/views/TitleMenu.ts","webpack:///./src/monsters/constants.ts","webpack:///./src/monsters/views/Monster.ts","webpack:///./src/monsters/views/Spark.ts","webpack:///./src/panels/data/QuestsVO.ts","webpack:///./src/panels/events/SeasonsEvents.ts","webpack:///./src/panels/events/TutorialEvents.ts","webpack:///./src/panels/views/Nexter.ts","webpack:///./src/panels/views/Panel.ts","webpack:///./src/panels/views/PanelQuest.ts","webpack:///./src/panels/views/PanelRowButtons.ts","webpack:///./src/panels/views/PanelSeasons.ts","webpack:///./src/panels/views/PanelTutorialBottom.ts","webpack:///./src/panels/views/PanelTutorialTop.ts","webpack:///./src/panels/views/Quest.ts","webpack:///./src/panels/views/Tablo.ts","webpack:///./src/plugins/sounds/AmbientSoundPlugin.ts","webpack:///./src/popups/constants.ts","webpack:///./src/popups/events/PopupEvents.ts","webpack:///./src/popups/views/PopupBase.ts","webpack:///./src/popups/views/PopupInfo.ts","webpack:///./src/popups/views/PopupYesNo.ts","webpack:///./src/scenes/constants.ts","webpack:///./src/scenes/events/SceneEvents.ts","webpack:///./src/scenes/events/TutorialSceneEvents.ts","webpack:///./src/scenes/events/UISceneEvents.ts","webpack:///./src/scenes/managers/EnterFrameManager.ts","webpack:///./src/scenes/views/BackgroundScene.ts","webpack:///./src/scenes/views/BaseScene.ts","webpack:///./src/scenes/views/BootScene.ts","webpack:///./src/scenes/views/GameScene.ts","webpack:///./src/scenes/views/LoginScene.ts","webpack:///./src/scenes/views/MenuScene.ts","webpack:///./src/scenes/views/PopupsScene.ts","webpack:///./src/scenes/views/PreloaderScene .ts","webpack:///./src/scenes/views/SceneManager.ts","webpack:///./src/scenes/views/TutorialScene.ts","webpack:///./src/scenes/views/UIScene.ts","webpack:///./src/scenes/views/UniverseScene.ts","webpack:///./src/ui/components/Achievement.ts","webpack:///./src/ui/components/MoveH.ts","webpack:///./src/ui/components/ScrollMonster.ts","webpack:///./src/ui/views/BtnLarge.ts","webpack:///./src/ui/views/Button.ts","webpack:///./src/ui/views/ButtonProfile.ts","webpack:///./src/ui/views/SoundToggle.ts","webpack:///./src/ui/views/Toggle.ts","webpack:///./src/ui/views/URLButton.ts","webpack:///./src/utils/AMath.ts","webpack:///./src/utils/ButtonIconsUtils.ts","webpack:///./src/utils/ChangeVisibilityUtils.ts","webpack:///./src/utils/ColorIDsUtils.ts","webpack:///./src/utils/ComponentPool.ts","webpack:///./src/utils/FPSMeterApp.ts","webpack:///./src/utils/LocalStorageUtils.ts","webpack:///./src/utils/SeasonsUtils.ts","webpack:///./src/utils/ShakerUtils.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,uC;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC,EAAE;AACxE;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kCAAkC;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AA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","file":"js/game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","// extracted by mini-css-extract-plugin","/*!\n * FPSMeter 0.3.1 - 9th May 2013\n * https://github.com/Darsain/fpsmeter\n *\n * Licensed under the MIT license.\n * http://opensource.org/licenses/MIT\n */\n;(function (w, undefined) {\n\t'use strict';\n\n\t/**\n\t * Create a new element.\n\t *\n\t * @param  {String} name Element type name.\n\t *\n\t * @return {Element}\n\t */\n\tfunction newEl(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\t/**\n\t * Apply theme CSS properties to element.\n\t *\n\t * @param  {Element} element DOM element.\n\t * @param  {Object}  theme   Theme object.\n\t *\n\t * @return {Element}\n\t */\n\tfunction applyTheme(element, theme) {\n\t\tfor (var name in theme) {\n\t\t\ttry {\n\t\t\t\telement.style[name] = theme[name];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Return type of the value.\n\t *\n\t * @param  {Mixed} value\n\t *\n\t * @return {String}\n\t */\n\tfunction type(value) {\n\t\tif (value == null) {\n\t\t\treturn String(value);\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof value === 'function') {\n\t\t\treturn Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLowerCase() || 'object';\n\t\t}\n\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Check whether the value is in an array.\n\t *\n\t * @param  {Mixed} value\n\t * @param  {Array} array\n\t *\n\t * @return {Integer} Array index or -1 when not found.\n\t */\n\tfunction inArray(value, array) {\n\t\tif (type(array) !== 'array') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(value);\n\t\t}\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Poor man's deep object extend.\n\t *\n\t * Example:\n\t *   extend({}, defaults, options);\n\t *\n\t * @return {Void}\n\t */\n\tfunction extend() {\n\t\tvar args = arguments;\n\t\tfor (var key in args[1]) {\n\t\t\tif (args[1].hasOwnProperty(key)) {\n\t\t\t\tswitch (type(args[1][key])) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\targs[0][key] = extend({}, args[0][key], args[1][key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array':\n\t\t\t\t\t\targs[0][key] = args[1][key].slice(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\targs[0][key] = args[1][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn args.length > 2 ?\n\t\t\textend.apply(null, [args[0]].concat(Array.prototype.slice.call(args, 2))) :\n\t\t\targs[0];\n\t}\n\n\t/**\n\t * Convert HSL color to HEX string.\n\t *\n\t * @param  {Array} hsl Array with [hue, saturation, lightness].\n\t *\n\t * @return {Array} Array with [red, green, blue].\n\t */\n\tfunction hslToHex(h, s, l) {\n\t\tvar r, g, b;\n\t\tvar v, min, sv, sextant, fract, vsf;\n\n\t\tif (l <= 0.5) {\n\t\t\tv = l * (1 + s);\n\t\t} else {\n\t\t\tv = l + s - l * s;\n\t\t}\n\n\t\tif (v === 0) {\n\t\t\treturn '#000';\n\t\t} else {\n\t\t\tmin = 2 * l - v;\n\t\t\tsv = (v - min) / v;\n\t\t\th = 6 * h;\n\t\t\tsextant = Math.floor(h);\n\t\t\tfract = h - sextant;\n\t\t\tvsf = v * sv * fract;\n\t\t\tif (sextant === 0 || sextant === 6) {\n\t\t\t\tr = v;\n\t\t\t\tg = min + vsf;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 1) {\n\t\t\t\tr = v - vsf;\n\t\t\t\tg = v;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 2) {\n\t\t\t\tr = min;\n\t\t\t\tg = v;\n\t\t\t\tb = min + vsf;\n\t\t\t} else if (sextant === 3) {\n\t\t\t\tr = min;\n\t\t\t\tg = v - vsf;\n\t\t\t\tb = v;\n\t\t\t} else if (sextant === 4) {\n\t\t\t\tr = min + vsf;\n\t\t\t\tg = min;\n\t\t\t\tb = v;\n\t\t\t} else {\n\t\t\t\tr = v;\n\t\t\t\tg = min;\n\t\t\t\tb = v - vsf;\n\t\t\t}\n\t\t\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for hslToHex.\n\t */\n\tfunction componentToHex(c) {\n\t\tc = Math.round(c * 255).toString(16);\n\t\treturn c.length === 1 ? '0' + c : c;\n\t}\n\n\t/**\n\t * Manage element event listeners.\n\t *\n\t * @param  {Node}     element\n\t * @param  {Event}    eventName\n\t * @param  {Function} handler\n\t * @param  {Bool}     remove\n\t *\n\t * @return {Void}\n\t */\n\tfunction listener(element, eventName, handler, remove) {\n\t\tif (element.addEventListener) {\n\t\t\telement[remove ? 'removeEventListener' : 'addEventListener'](eventName, handler, false);\n\t\t} else if (element.attachEvent) {\n\t\t\telement[remove ? 'detachEvent' : 'attachEvent']('on' + eventName, handler);\n\t\t}\n\t}\n\n\t// Preferred timing funtion\n\tvar getTime;\n\t(function () {\n\t\tvar perf = w.performance;\n\t\tif (perf && (perf.now || perf.webkitNow)) {\n\t\t\tvar perfNow = perf.now ? 'now' : 'webkitNow';\n\t\t\tgetTime = perf[perfNow].bind(perf);\n\t\t} else {\n\t\t\tgetTime = function () {\n\t\t\t\treturn +new Date();\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Local WindowAnimationTiming interface polyfill\n\tvar cAF = w.cancelAnimationFrame || w.cancelRequestAnimationFrame;\n\tvar rAF = w.requestAnimationFrame;\n\t(function () {\n\t\tvar vendors = ['moz', 'webkit', 'o'];\n\t\tvar lastTime = 0;\n\n\t\t// For a more accurate WindowAnimationTiming interface implementation, ditch the native\n\t\t// requestAnimationFrame when cancelAnimationFrame is not present (older versions of Firefox)\n\t\tfor (var i = 0, l = vendors.length; i < l && !cAF; ++i) {\n\t\t\tcAF = w[vendors[i]+'CancelAnimationFrame'] || w[vendors[i]+'CancelRequestAnimationFrame'];\n\t\t\trAF = cAF && w[vendors[i]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif (!cAF) {\n\t\t\trAF = function (callback) {\n\t\t\t\tvar currTime = getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn w.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n\t\t\t};\n\n\t\t\tcAF = function (id) {\n\t\t\t\tclearTimeout(id);\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Property name for assigning element text content\n\tvar textProp = type(document.createElement('div').textContent) === 'string' ? 'textContent' : 'innerText';\n\n\t/**\n\t * FPSMeter class.\n\t *\n\t * @param {Element} anchor  Element to append the meter to. Default is document.body.\n\t * @param {Object}  options Object with options.\n\t */\n\tfunction FPSMeter(anchor, options) {\n\t\t// Optional arguments\n\t\tif (type(anchor) === 'object' && anchor.nodeType === undefined) {\n\t\t\toptions = anchor;\n\t\t\tanchor = document.body;\n\t\t}\n\t\tif (!anchor) {\n\t\t\tanchor = document.body;\n\t\t}\n\n\t\t// Private properties\n\t\tvar self = this;\n\t\tvar o = extend({}, FPSMeter.defaults, options || {});\n\n\t\tvar el = {};\n\t\tvar cols = [];\n\t\tvar theme, heatmaps;\n\t\tvar heatDepth = 100;\n\t\tvar heating = [];\n\n\t\tvar thisFrameTime = 0;\n\t\tvar frameTime = o.threshold;\n\t\tvar frameStart = 0;\n\t\tvar lastLoop = getTime() - frameTime;\n\t\tvar time;\n\n\t\tvar fpsHistory = [];\n\t\tvar durationHistory = [];\n\n\t\tvar frameID, renderID;\n\t\tvar showFps = o.show === 'fps';\n\t\tvar graphHeight, count, i, j;\n\n\t\t// Exposed properties\n\t\tself.options = o;\n\t\tself.fps = 0;\n\t\tself.duration = 0;\n\t\tself.isPaused = 0;\n\n\t\t/**\n\t\t * Tick start for measuring the actual rendering duration.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tickStart = function () {\n\t\t\tframeStart = getTime();\n\t\t};\n\n\t\t/**\n\t\t * FPS tick.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tick = function () {\n\t\t\ttime = getTime();\n\t\t\tthisFrameTime = time - lastLoop;\n\t\t\tframeTime += (thisFrameTime - frameTime) / o.smoothing;\n\t\t\tself.fps = 1000 / frameTime;\n\t\t\tself.duration = frameStart < lastLoop ? frameTime : time - frameStart;\n\t\t\tlastLoop = time;\n\t\t};\n\n\t\t/**\n\t\t * Pause display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.pause = function () {\n\t\t\tif (frameID) {\n\t\t\t\tself.isPaused = 1;\n\t\t\t\tclearTimeout(frameID);\n\t\t\t\tcAF(frameID);\n\t\t\t\tcAF(renderID);\n\t\t\t\tframeID = renderID = 0;\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Resume display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.resume = function () {\n\t\t\tif (!frameID) {\n\t\t\t\tself.isPaused = 0;\n\t\t\t\trequestRender();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Update options.\n\t\t *\n\t\t * @param {String} name  Option name.\n\t\t * @param {Mixed}  value New value.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.set = function (name, value) {\n\t\t\to[name] = value;\n\t\t\tshowFps = o.show === 'fps';\n\n\t\t\t// Rebuild or reposition elements when specific option has been updated\n\t\t\tif (inArray(name, rebuilders) !== -1) {\n\t\t\t\tcreateMeter();\n\t\t\t}\n\t\t\tif (inArray(name, repositioners) !== -1) {\n\t\t\t\tpositionMeter();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into rendering duration mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showDuration = function () {\n\t\t\tself.set('show', 'ms');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into FPS mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showFps = function () {\n\t\t\tself.set('show', 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Toggles between show: 'fps' and show: 'duration'.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.toggle = function () {\n\t\t\tself.set('show', showFps ? 'ms' : 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Hide the FPSMeter. Also pauses the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.hide = function () {\n\t\t\tself.pause();\n\t\t\tel.container.style.display = 'none';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Show the FPSMeter. Also resumes the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.show = function () {\n\t\t\tself.resume();\n\t\t\tel.container.style.display = 'block';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Check the current FPS and save it in history.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction historyTick() {\n\t\t\tfor (i = o.history; i--;) {\n\t\t\t\tfpsHistory[i] = i === 0 ? self.fps : fpsHistory[i-1];\n\t\t\t\tdurationHistory[i] = i === 0 ? self.duration : durationHistory[i-1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns heat hex color based on values passed.\n\t\t *\n\t\t * @param  {Integer} heatmap\n\t\t * @param  {Integer} value\n\t\t * @param  {Integer} min\n\t\t * @param  {Integer} max\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getHeat(heatmap, value, min, max) {\n\t\t\treturn heatmaps[0|heatmap][Math.round(Math.min((value - min) / (max - min) * heatDepth, heatDepth))];\n\t\t}\n\n\t\t/**\n\t\t * Update counter number and legend.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction updateCounter() {\n\t\t\t// Update legend only when changed\n\t\t\tif (el.legend.fps !== showFps) {\n\t\t\t\tel.legend.fps = showFps;\n\t\t\t\tel.legend[textProp] = showFps ? 'FPS' : 'ms';\n\t\t\t}\n\t\t\t// Update counter with a nicely formated & readable number\n\t\t\tcount = showFps ? self.fps : self.duration;\n\t\t\tel.count[textProp] = count > 999 ? '999+' : count.toFixed(count > 99 ? 0 : o.decimals);\n\t\t}\n\n\t\t/**\n\t\t * Render current FPS state.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction render() {\n\t\t\ttime = getTime();\n\t\t\t// If renderer stopped reporting, do a simulated drop to 0 fps\n\t\t\tif (lastLoop < time - o.threshold) {\n\t\t\t\tself.fps -= self.fps / Math.max(1, o.smoothing * 60 / o.interval);\n\t\t\t\tself.duration = 1000 / self.fps;\n\t\t\t}\n\n\t\t\thistoryTick();\n\t\t\tupdateCounter();\n\n\t\t\t// Apply heat to elements\n\t\t\tif (o.heat) {\n\t\t\t\tif (heating.length) {\n\t\t\t\t\tfor (i = heating.length; i--;) {\n\t\t\t\t\t\theating[i].el.style[theme[heating[i].name].heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.fps, 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.duration, o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.graph && theme.column.heatOn) {\n\t\t\t\t\tfor (i = cols.length; i--;) {\n\t\t\t\t\t\tcols[i].style[theme.column.heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, fpsHistory[i], 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, durationHistory[i], o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update graph columns height\n\t\t\tif (el.graph) {\n\t\t\t\tfor (j = 0; j < o.history; j++) {\n\t\t\t\t\tcols[j].style.height = (showFps ?\n\t\t\t\t\t\t(fpsHistory[j] ? Math.round(graphHeight / o.maxFps * Math.min(fpsHistory[j], o.maxFps)) : 0) :\n\t\t\t\t\t\t(durationHistory[j] ? Math.round(graphHeight / o.threshold * Math.min(durationHistory[j], o.threshold)) : 0)\n\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Request rendering loop.\n\t\t *\n\t\t * @return {Int} Animation frame index.\n\t\t */\n\t\tfunction requestRender() {\n\t\t\tif (o.interval < 20) {\n\t\t\t\tframeID = rAF(requestRender);\n\t\t\t\trender();\n\t\t\t} else {\n\t\t\t\tframeID = setTimeout(requestRender, o.interval);\n\t\t\t\trenderID = rAF(render);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Meter events handler.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction eventHandler(event) {\n\t\t\tevent = event || window.event;\n\t\t\tif (event.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tevent.returnValue = false;\n\t\t\t\tevent.cancelBubble = true;\n\t\t\t}\n\t\t\tself.toggle();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the current FPSMeter instance.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.destroy = function () {\n\t\t\t// Stop rendering\n\t\t\tself.pause();\n\t\t\t// Remove elements\n\t\t\tremoveMeter();\n\t\t\t// Stop listening\n\t\t\tself.tick = self.tickStart = function () {};\n\t\t};\n\n\t\t/**\n\t\t * Remove meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction removeMeter() {\n\t\t\t// Unbind listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler, 1);\n\t\t\t}\n\t\t\t// Detach element\n\t\t\tanchor.removeChild(el.container);\n\t\t}\n\n\t\t/**\n\t\t * Sets the theme, and generates heatmaps when needed.\n\t\t */\n\t\tfunction setTheme() {\n\t\t\ttheme = FPSMeter.theme[o.theme];\n\n\t\t\t// Generate heatmaps\n\t\t\theatmaps = theme.compiledHeatmaps || [];\n\t\t\tif (!heatmaps.length && theme.heatmaps.length) {\n\t\t\t\tfor (j = 0; j < theme.heatmaps.length; j++) {\n\t\t\t\t\theatmaps[j] = [];\n\t\t\t\t\tfor (i = 0; i <= heatDepth; i++) {\n\t\t\t\t\t\theatmaps[j][i] = hslToHex(0.33 / heatDepth * i, theme.heatmaps[j].saturation, theme.heatmaps[j].lightness);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.compiledHeatmaps = heatmaps;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates and attaches the meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction createMeter() {\n\t\t\t// Remove old meter if present\n\t\t\tif (el.container) {\n\t\t\t\tremoveMeter();\n\t\t\t}\n\n\t\t\t// Set theme\n\t\t\tsetTheme();\n\n\t\t\t// Create elements\n\t\t\tel.container = applyTheme(newEl('div'), theme.container);\n\t\t\tel.count = el.container.appendChild(applyTheme(newEl('div'), theme.count));\n\t\t\tel.legend = el.container.appendChild(applyTheme(newEl('div'), theme.legend));\n\t\t\tel.graph = o.graph ? el.container.appendChild(applyTheme(newEl('div'), theme.graph)) : 0;\n\n\t\t\t// Add elements to heating array\n\t\t\theating.length = 0;\n\t\t\tfor (var key in el) {\n\t\t\t\tif (el[key] && theme[key].heatOn) {\n\t\t\t\t\theating.push({\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tel: el[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Graph\n\t\t\tcols.length = 0;\n\t\t\tif (el.graph) {\n\t\t\t\t// Create graph\n\t\t\t\tel.graph.style.width = (o.history * theme.column.width + (o.history - 1) * theme.column.spacing) + 'px';\n\n\t\t\t\t// Add columns\n\t\t\t\tfor (i = 0; i < o.history; i++) {\n\t\t\t\t\tcols[i] = el.graph.appendChild(applyTheme(newEl('div'), theme.column));\n\t\t\t\t\tcols[i].style.position = 'absolute';\n\t\t\t\t\tcols[i].style.bottom = 0;\n\t\t\t\t\tcols[i].style.right = (i * theme.column.width + i * theme.column.spacing) + 'px';\n\t\t\t\t\tcols[i].style.width = theme.column.width + 'px';\n\t\t\t\t\tcols[i].style.height = '0px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the initial state\n\t\t\tpositionMeter();\n\t\t\tupdateCounter();\n\n\t\t\t// Append container to anchor\n\t\t\tanchor.appendChild(el.container);\n\n\t\t\t// Retrieve graph height after it was appended to DOM\n\t\t\tif (el.graph) {\n\t\t\t\tgraphHeight = el.graph.clientHeight;\n\t\t\t}\n\n\t\t\t// Add event listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tif (o.toggleOn === 'click') {\n\t\t\t\t\tel.container.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Positions the meter based on options.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction positionMeter() {\n\t\t\tapplyTheme(el.container, o);\n\t\t}\n\n\t\t/**\n\t\t * Construct.\n\t\t */\n\t\t(function () {\n\t\t\t// Create meter element\n\t\t\tcreateMeter();\n\t\t\t// Start rendering\n\t\t\trequestRender();\n\t\t}());\n\t}\n\n\t// Expose the extend function\n\tFPSMeter.extend = extend;\n\n\t// Expose the FPSMeter class\n\twindow.FPSMeter = FPSMeter;\n\n\t// Default options\n\tFPSMeter.defaults = {\n\t\tinterval:  100,     // Update interval in milliseconds.\n\t\tsmoothing: 10,      // Spike smoothing strength. 1 means no smoothing.\n\t\tshow:      'fps',   // Whether to show 'fps', or 'ms' = frame duration in milliseconds.\n\t\ttoggleOn:  'click', // Toggle between show 'fps' and 'ms' on this event.\n\t\tdecimals:  1,       // Number of decimals in FPS number. 1 = 59.9, 2 = 59.94, ...\n\t\tmaxFps:    60,      // Max expected FPS value.\n\t\tthreshold: 100,     // Minimal tick reporting interval in milliseconds.\n\n\t\t// Meter position\n\t\tposition: 'absolute', // Meter position.\n\t\tzIndex:   10,         // Meter Z index.\n\t\tleft:     '5px',      // Meter left offset.\n\t\ttop:      '5px',      // Meter top offset.\n\t\tright:    'auto',     // Meter right offset.\n\t\tbottom:   'auto',     // Meter bottom offset.\n\t\tmargin:   '0 0 0 0',  // Meter margin. Helps with centering the counter when left: 50%;\n\n\t\t// Theme\n\t\ttheme: 'dark', // Meter theme. Build in: 'dark', 'light', 'transparent', 'colorful'.\n\t\theat:  0,      // Allow themes to use coloring by FPS heat. 0 FPS = red, maxFps = green.\n\n\t\t// Graph\n\t\tgraph:   0, // Whether to show history graph.\n\t\thistory: 20 // How many history states to show in a graph.\n\t};\n\n\t// Option names that trigger FPSMeter rebuild or reposition when modified\n\tvar rebuilders = [\n\t\t'toggleOn',\n\t\t'theme',\n\t\t'heat',\n\t\t'graph',\n\t\t'history'\n\t];\n\tvar repositioners = [\n\t\t'position',\n\t\t'zIndex',\n\t\t'left',\n\t\t'top',\n\t\t'right',\n\t\t'bottom',\n\t\t'margin'\n\t];\n}(window));\n;(function (w, FPSMeter, undefined) {\n\t'use strict';\n\n\t// Themes object\n\tFPSMeter.theme = {};\n\n\t// Base theme with layout, no colors\n\tvar base = FPSMeter.theme.base = {\n\t\theatmaps: [],\n\t\tcontainer: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tpadding: '5px',\n\t\t\tminWidth: '95px',\n\t\t\theight: '30px',\n\t\t\tlineHeight: '30px',\n\t\t\ttextAlign: 'right',\n\t\t\ttextShadow: 'none'\n\t\t},\n\t\tcount: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '24px',\n\t\t\tfontFamily: 'Consolas, Andale Mono, monospace',\n\t\t\tzIndex: 2\n\t\t},\n\t\tlegend: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '12px',\n\t\t\tlineHeight: '32px',\n\t\t\tfontFamily: 'sans-serif',\n\t\t\ttextAlign: 'left',\n\t\t\tzIndex: 2\n\t\t},\n\t\tgraph: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'relative',\n\t\t\tboxSizing: 'padding-box',\n\t\t\tMozBoxSizing: 'padding-box',\n\t\t\theight: '100%',\n\t\t\tzIndex: 1\n\t\t},\n\t\tcolumn: {\n\t\t\t// Settings\n\t\t\twidth: 4,\n\t\t\tspacing: 1,\n\t\t\theatOn: null,\n\t\t\theatmap: null\n\t\t}\n\t};\n\n\t// Dark theme\n\tFPSMeter.theme.dark = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.8\n\t\t}],\n\t\tcontainer: {\n\t\t\tbackground: '#222',\n\t\t\tcolor: '#fff',\n\t\t\tborder: '1px solid #1a1a1a',\n\t\t\ttextShadow: '1px 1px 0 #222'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#3f3f3f'\n\t\t}\n\t});\n\n\t// Light theme\n\tFPSMeter.theme.light = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tcolor: '#666',\n\t\t\tbackground: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(255,255,255,.5), -1px -1px 0 rgba(255,255,255,.5)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#eaeaea'\n\t\t}\n\t});\n\n\t// Colorful theme\n\tFPSMeter.theme.colorful = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.6\n\t\t}],\n\t\tcontainer: {\n\t\t\theatOn: 'backgroundColor',\n\t\t\tbackground: '#888',\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.2)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#777',\n\t\t\tbackgroundColor: 'rgba(0,0,0,.2)'\n\t\t}\n\t});\n\n\t// Transparent theme\n\tFPSMeter.theme.transparent = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tpadding: 0,\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.5)'\n\t\t},\n\t\tcount: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '40px'\n\t\t},\n\t\tlegend: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '42px'\n\t\t},\n\t\tgraph: {\n\t\t\theight: '40px'\n\t\t},\n\t\tcolumn: {\n\t\t\twidth: 5,\n\t\t\tbackground: '#999',\n\t\t\theatOn: 'backgroundColor',\n\t\t\topacity: 0.5\n\t\t}\n\t});\n}(window, FPSMeter));","import { GameConfigs } from \"./config/GameConfigs\";\nimport { Language } from \"./content/Language\";\nimport { GameDataModel } from \"./data/models/GameDataModel\";\nimport { Game, Size } from \"./exports\";\nimport { AmbientSoundPlugin } from \"./plugins/sounds/AmbientSoundPlugin\";\nimport { ScenesConstants } from \"./scenes/constants\";\nimport { IScale } from \"./scenes/interfaces/IScale\";\nimport { BackgroundScene } from \"./scenes/views/BackgroundScene\";\nimport { BaseScene } from \"./scenes/views/BaseScene\";\nimport { BootScene } from \"./scenes/views/BootScene\";\nimport { GameScene } from \"./scenes/views/GameScene\";\nimport { LoginScene } from \"./scenes/views/LoginScene\";\nimport { MenuScene } from \"./scenes/views/MenuScene\";\nimport { PopupsScene } from \"./scenes/views/PopupsScene\";\nimport { PreloaderScene } from \"./scenes/views/PreloaderScene \";\nimport { SceneManager } from \"./scenes/views/SceneManager\";\nimport { TutorialScene } from \"./scenes/views/TutorialScene\";\nimport { UIScene } from \"./scenes/views/UIScene\";\nimport { FPSMeterApp } from \"./utils/FPSMeterApp\";\nimport { SeasonsUtils } from \"./utils/SeasonsUtils\";\nimport { UniverseScene } from \"./scenes/views/UniverseScene\";\nimport { EnterFrameManager } from \"./scenes/managers/EnterFrameManager\";\n\nexport class App extends Game {\n\n    public gameDataModel: GameDataModel = new GameDataModel();\n\n    private meter: FPSMeterApp;\n\n    constructor() {\n        super(GameConfigs);\n\n        this.loadData();\n        this.loadLanguage();\n        this.initPlugins();\n        this.initScenes();\n\n        this.incrementSeason();\n    }\n\n    private loadData(): void {\n        this.gameDataModel.readData();\n    }\n\n    private loadLanguage(): void {\n        switch (GameDataModel.language) {\n            case \"rus\":\n                Language.setRussian();\n                break;\n\n            default:\n                Language.setEnglish();\n                break;\n        }\n    }\n\n    private initPlugins(): void {\n        this.plugins.install(\"ambientSoundPlugin\", AmbientSoundPlugin, true);\n    }\n\n    private initScenes(): void {\n        this.scene.add(ScenesConstants.names.manager, SceneManager);\n        this.scene.add(ScenesConstants.names.boot, BootScene);\n        this.scene.add(ScenesConstants.names.background, BackgroundScene);\n        this.scene.add(ScenesConstants.names.preloader, PreloaderScene);\n        this.scene.add(ScenesConstants.names.login, LoginScene);\n        this.scene.add(ScenesConstants.names.menu, MenuScene);\n        this.scene.add(ScenesConstants.names.game, GameScene);\n        this.scene.add(ScenesConstants.names.tutorial, TutorialScene);\n        this.scene.add(ScenesConstants.names.universe, UniverseScene);\n        this.scene.add(ScenesConstants.names.ui, UIScene);\n        this.scene.add(ScenesConstants.names.popups, PopupsScene);\n    }\n\n    private incrementSeason(): void {\n        GameDataModel.seasonId = (GameDataModel.seasonId + 1) % SeasonsUtils.SEASONS_COUNT;\n        (new GameDataModel()).saveData();\n    }\n\n    protected start(): void {\n        super.start();\n\n        if (__DEV__) {\n            this.meter = new FPSMeterApp();\n        }\n        this.scale.on(\"resize\", this.onResizeGame, this);\n        this.scene.start(ScenesConstants.names.boot);\n    }\n\n    public step(time: number, delta: number): void {\n        super.step(time, delta);\n        EnterFrameManager.update(delta);\n        if (this.meter) {\n            this.meter.tick();\n        }\n    }\n\n    private onResizeGame(gameSize: Size): void {\n        const width: number = gameSize.width;\n        const height: number = gameSize.height;\n\n        const scaleX: number = width / +this.config.width;\n        const scaleY: number = height / +this.config.height;\n\n        const scale: IScale = {\n            scaleMin: Math.min(scaleX, scaleY),\n            scaleMax: Math.max(scaleX, scaleY)\n        };\n\n        this.scene.scenes.forEach((scene: BaseScene) => {\n            if (scene.resize && this.scene.isActive(scene.sys.config.toString())) {\n                scene.resize(width, height, scale);\n            }\n        });\n    }\n}\n","import { GameConfig } from \"../exports\";\n\nexport const GameConfigs: GameConfig = {\n    title: \"Phaser template AIVA GAMES\",\n    type: Phaser.AUTO,\n    parent: \"phaser-canvas\",\n    width: 630,\n    height: 1120,\n    scale: {\n        mode: Phaser.Scale.RESIZE,\n        autoCenter: Phaser.Scale.CENTER_BOTH,\n        width: 630,\n        height: 1120\n    },\n    dom: {\n        createContainer: true\n    },\n    disableContextMenu: true\n};\n","export class Language {\n\n    public static readonly MENU: string = \"btn_menu\";\n    public static readonly LABEL_BEST: string = \"_labelBest\";\n    public static readonly LABEL_NOW: string = \"_labelNow\";\n    public static readonly CONTINUE: string = \"btnContinue\";\n    public static readonly I_AM_CHAMPION: string = \"btnChampion\";\n    public static readonly I_AM_LOOSER: string = \"btnLooser\";\n    public static readonly CHAMPION: string = \"labelChampion\";\n    public static readonly NEW_GAME: string = \"btnNewGame\";\n    public static readonly ARE_YOU_SURE: string = \"btnAreYouSure\";\n    public static readonly TUTORIAL: string = \"btnTutorial\";\n    public static readonly SCORES: string = \"btnScores\";\n    public static readonly OPTIONS: string = \"btnOptions\";\n    public static readonly MUSIC: string = \"btnMusic\";\n    public static readonly SOUND: string = \"btnSound\";\n    public static readonly LANGUAGE: string = \"btnLanguage\";\n    public static readonly IS_DARK_ESCAPE: string = \"btnIsDarkEscape\";\n    public static readonly NOT_DARK_ESCAPE: string = \"btnNotDarkEscape\";\n    public static readonly CREDITS: string = \"btnCredits\";\n    public static readonly BACK: string = \"btnBack\";\n    public static readonly PREV: string = \"btnPrev\";\n    public static readonly NEXT: string = \"btnNext\";\n    public static readonly DONE: string = \"btnDone\";\n    public static readonly PLAY: string = \"btnPlay\";\n    public static readonly DEL: string = \"btnDel\";\n    public static readonly BONUS: string = \"labelBonus\";\n\n    public static readonly YES: string = \"yes\";\n    public static readonly NO: string = \"no\";\n    public static readonly NEXT_MONSTER: string = \"NEXT_MONSTER\";\n    public static readonly LOADING: string = \"LOADING\";\n    public static readonly CHALLENGE_LINES: string = \"CHALLENGE_LINES\";\n    public static readonly CHALLENGE_COUNTS: string = \"CHALLENGE_COUNTS\";\n\n    public static readonly TITLE_HELP1: string = \"labelTut1\";\n    public static readonly TITLE_HELP2: string = \"labelTut2\";\n    public static readonly TITLE_HELP3: string = \"labelTut3\";\n    public static readonly TITLE_HELP4: string = \"labelTut4\";\n    public static readonly TITLE_HELP5: string = \"labelTut5\";\n    public static readonly TITLE_HELP6: string = \"labelTut6\";\n    public static readonly TITLE_HELP7: string = \"labelTut7\";\n    public static readonly TITLE_HELP8: string = \"labelTut8\";\n    public static readonly TITLE_HELP9: string = \"labelTut9\";\n    public static readonly TITLE_HELP10: string = \"labelTut10\";\n    public static readonly TITLE_HELP11: string = \"labelTut11\";\n    public static readonly TITLE_HELP12: string = \"labelTut12\";\n    public static readonly TITLE_HELP13: string = \"labelTut13\";\n    public static readonly TITLE_HELP14: string = \"labelTut14\";\n\n    public static readonly HELP1: string = \"tfInfo1\";\n    public static readonly HELP2: string = \"tfInfo2\";\n    public static readonly HELP3: string = \"tfInfo3\";\n    public static readonly HELP4: string = \"tfInfo4\";\n    public static readonly HELP5: string = \"tfInfo5\";\n    public static readonly HELP6: string = \"tfInfo6\";\n    public static readonly HELP7: string = \"tfInfo7\";\n    public static readonly HELP8: string = \"tfInfo8\";\n    public static readonly HELP9: string = \"tfInfo9\";\n    public static readonly HELP10: string = \"tfInfo10\";\n    public static readonly HELP11: string = \"tfInfo11\";\n    public static readonly HELP12: string = \"tfInfo12\";\n    public static readonly HELP13: string = \"tfInfo13\";\n    public static readonly HELP14: string = \"tfInfo14\";\n\n    public static readonly TASK_HELP1: string = \"tfTask1\";\n    public static readonly TASK_HELP2: string = \"tfTask2\";\n    public static readonly TASK_HELP3: string = \"tfTask3\";\n    public static readonly TASK_HELP4: string = \"tfTask4\";\n    public static readonly TASK_HELP5: string = \"tfTask5\";\n    public static readonly TASK_HELP6: string = \"tfTask6\";\n    public static readonly TASK_HELP7: string = \"tfTask7\";\n    public static readonly TASK_HELP8: string = \"tfTask8\";\n    public static readonly TASK_HELP9: string = \"tfTask9\";\n    public static readonly TASK_HELP10: string = \"tfTask10\";\n    public static readonly TASK_HELP11: string = \"tfTask11\";\n    public static readonly TASK_HELP12: string = \"tfTask12\";\n    public static readonly TASK_HELP13: string = \"tfTask13\";\n    public static readonly TASK_HELP14: string = \"tfTask14\";\n\n    public static readonly PLAYER_NAME_PLACEHOLDER: string = \"PLAYER_NAME_PLACEHOLDER\";\n\n    public static current: string = \"none\";\n\n    private static labels: { [key: string]: string } = {};\n\n    // английский язык\n    public static setEnglish(): void {\n        Language.labels[Language.MENU] = \"menu\";\n        Language.labels[Language.LABEL_BEST] = \"record\";\n        Language.labels[Language.LABEL_NOW] = \"score\";\n        Language.labels[Language.CONTINUE] = \"continue\";\n        Language.labels[Language.I_AM_CHAMPION] = \"i’m the\\nchampion!\";\n        Language.labels[Language.I_AM_LOOSER] = \"i won’t\\ngive up!\";\n        Language.labels[Language.CHAMPION] = \"my name is\";\n        Language.labels[Language.NEW_GAME] = \"new game\";\n        Language.labels[Language.ARE_YOU_SURE] = \"are you sure?\";\n        Language.labels[Language.TUTORIAL] = \"game rules\";\n        Language.labels[Language.SCORES] = \"champions\";\n        Language.labels[Language.OPTIONS] = \"options\";\n        Language.labels[Language.MUSIC] = \"music\";\n        Language.labels[Language.SOUND] = \"sounds\";\n        Language.labels[Language.LANGUAGE] = \"language\";\n        Language.labels[Language.IS_DARK_ESCAPE] = \"democracy\";\n        Language.labels[Language.NOT_DARK_ESCAPE] = \"tyranny\";\n        Language.labels[Language.CREDITS] = \"creators\";\n        Language.labels[Language.BACK] = \"back\";\n        Language.labels[Language.PREV] = \"back to menu\";\n        Language.labels[Language.NEXT] = \"next\";\n        Language.labels[Language.DONE] = \"done\";\n        Language.labels[Language.PLAY] = \"play\";\n        Language.labels[Language.DEL] = \"delete profile\";\n        Language.labels[Language.BONUS] = \"bonus from monster\";\n        \n        Language.labels[Language.YES] = \"yes\";\n        Language.labels[Language.NO] = \"no\";\n        Language.labels[Language.NEXT_MONSTER] = \"NEXT\";\n        Language.labels[Language.LOADING] = \"LOADING...\";\n        Language.labels[Language.CHALLENGE_LINES] = \"Combine the line\";\n        Language.labels[Language.CHALLENGE_COUNTS] = \"Collect the monsters\";\n\n        Language.labels[Language.TITLE_HELP1] = \"playfield\";\n        Language.labels[Language.TITLE_HELP2] = \"how do the monsters appear?\";\n        Language.labels[Language.TITLE_HELP3] = \"how to play?\";\n        Language.labels[Language.TITLE_HELP4] = \"how to play?\";\n        Language.labels[Language.TITLE_HELP5] = \"how to play?\";\n        Language.labels[Language.TITLE_HELP6] = \"the end\";\n        Language.labels[Language.TITLE_HELP7] = \"victory\";\n        Language.labels[Language.TITLE_HELP8] = \"fluffy\";\n        Language.labels[Language.TITLE_HELP9] = \"piggy bank\";\n        Language.labels[Language.TITLE_HELP10] = \"mystic\";\n        Language.labels[Language.TITLE_HELP11] = \"buddy\";\n        Language.labels[Language.TITLE_HELP12] = \"chubby\";\n        Language.labels[Language.TITLE_HELP13] = \"shaman\";\n        Language.labels[Language.TITLE_HELP14] = \"elvis\";\n\n        Language.labels[Language.HELP1] = \"playfield is a square cell net, where monsters are placed. one monster occupies one cell.\";\n        Language.labels[Language.HELP2] = \"every monster’s move leads to new monster’s appearance on playfield.\";\n        Language.labels[Language.HELP3] = \"move monsters into free cell to build continuous horizontal, vertical or diagonal lines.\";\n        Language.labels[Language.HELP4] = \"when you collect needed quantity of monsters in a line they will disappear and bring you scores.\";\n        Language.labels[Language.HELP5] = \"if the monsters disappear in the line and bring you scores, no new monsters will appear on the playfield.\";\n        Language.labels[Language.HELP6] = \"you lose if there’s no empty cells on playfield or all cells are empty (there’s no monster’s on playfield).\";\n        Language.labels[Language.HELP7] = \"to win the game you should score as much points as you can. you can see all records in the champions menu.\";\n        Language.labels[Language.HELP8] = \"monsters can move vertically and horizontally. fluffies will disappear if you put 5 monsters in a row.\";\n        Language.labels[Language.HELP9] = \"monsters can move vertically and horizontally and score more. piggy banks will disappear if you put 5 monsters in a row.\";\n        Language.labels[Language.HELP10] = \"they can teleport to any free cell. mystics disappear when they stay 5 monsters in a row.\";\n        Language.labels[Language.HELP11] = \"monsters can move vertically and horizontally. they will disappear if you put 5 monsters in a row.\";\n        Language.labels[Language.HELP12] = \"monsters can move vertically and horizontally, but can move only to the nearer cell. they will disappear if you put 4 monsters in a row.\";\n        Language.labels[Language.HELP13] = \"monsters can move vertically and horizontally and can replace other monsters. they will disappear if you put 6 monsters in a row.\";\n        Language.labels[Language.HELP14] = \"monsters can move vertically and horizontally. they will disappear if you put 4 monsters in a row. also if you put other monsters between elvises, they disappear with 4 monsters in a row.\";\n\n        Language.labels[Language.TASK_HELP1] = \"\";\n        Language.labels[Language.TASK_HELP2] = \"try to move monsters\";\n        Language.labels[Language.TASK_HELP3] = \"move buddy to the indicated point\";\n        Language.labels[Language.TASK_HELP4] = \"\";\n        Language.labels[Language.TASK_HELP5] = \"\";\n        Language.labels[Language.TASK_HELP6] = \"\";\n        Language.labels[Language.TASK_HELP7] = \"\";\n        Language.labels[Language.TASK_HELP8] = \"move fluffy to the indicated point\";\n        Language.labels[Language.TASK_HELP9] = \"move piggy bank Bank to the indicated point\";\n        Language.labels[Language.TASK_HELP10] = \"teleport mystic to the indicated point\";\n        Language.labels[Language.TASK_HELP11] = \"move buddy to the indicated point\";\n        Language.labels[Language.TASK_HELP12] = \"move chubby to the indicated point\";\n        Language.labels[Language.TASK_HELP13] = \"choose shaman, then hold your finger on other monster until you see the lightning\";\n        Language.labels[Language.TASK_HELP14] = \"move elvis to the indicated point\";\n\n        Language.labels[Language.PLAYER_NAME_PLACEHOLDER] = \"Enter your name\";\n\n        Language.current = \"eng\";\n    }\n\n    // русский язык\n    public static setRussian(): void {\n        Language.labels[Language.MENU] = \"меню\";\n        Language.labels[Language.LABEL_BEST] = \"лучший результат\";\n        Language.labels[Language.LABEL_NOW] = \"текущий результат\";\n        Language.labels[Language.CONTINUE] = \"продолжить\";\n        Language.labels[Language.I_AM_CHAMPION] = \"я\\nчемпион!\";\n        Language.labels[Language.I_AM_LOOSER] = \"я не\\nсдамся!\";\n        Language.labels[Language.CHAMPION] = \"мое имя\";\n        Language.labels[Language.NEW_GAME] = \"новая игра\";\n        Language.labels[Language.ARE_YOU_SURE] = \"вы уверены?\";\n        Language.labels[Language.TUTORIAL] = \"как играть\";\n        Language.labels[Language.SCORES] = \"чемпионы\";\n        Language.labels[Language.OPTIONS] = \"настройки\";\n        Language.labels[Language.MUSIC] = \"музыка\";\n        Language.labels[Language.SOUND] = \"звуки\";\n        Language.labels[Language.LANGUAGE] = \"язык\";\n        Language.labels[Language.IS_DARK_ESCAPE] = \"демократия\";\n        Language.labels[Language.NOT_DARK_ESCAPE] = \"диктатура\";\n        Language.labels[Language.CREDITS] = \"авторы\";\n        Language.labels[Language.BACK] = \"назад\";\n        Language.labels[Language.PREV] = \"назад в меню\";\n        Language.labels[Language.NEXT] = \"вперед\";\n        Language.labels[Language.DONE] = \"готово\";\n        Language.labels[Language.PLAY] = \"играть\";\n        Language.labels[Language.DEL] = \"удалить профиль\";\n        Language.labels[Language.BONUS] = \"бонус от монстра\";\n        Language.labels[Language.YES] = \"да\";\n        Language.labels[Language.NO] = \"нет\";\n        Language.labels[Language.NEXT_MONSTER] = \"на очереди\";\n        Language.labels[Language.LOADING] = \"ЗАГРУЗКА...\";\n        Language.labels[Language.CHALLENGE_LINES] = \"СОБЕРИ ЛИНИЮ ИЗ:\";\n        Language.labels[Language.CHALLENGE_COUNTS] = \"СОБЕРИ ВСЕХ МОНСТРОВ:\";\n\n        Language.labels[Language.TITLE_HELP1] = \"игровое поле\";\n        Language.labels[Language.TITLE_HELP2] = \"как появляются монстры?\";\n        Language.labels[Language.TITLE_HELP3] = \"как играть?\";\n        Language.labels[Language.TITLE_HELP4] = \"как играть?\";\n        Language.labels[Language.TITLE_HELP5] = \"как играть?\";\n        Language.labels[Language.TITLE_HELP6] = \"конец игры\";\n        Language.labels[Language.TITLE_HELP7] = \"цель игры\";\n        Language.labels[Language.TITLE_HELP8] = \"пушок\";\n        Language.labels[Language.TITLE_HELP9] = \"копилка\";\n        Language.labels[Language.TITLE_HELP10] = \"мистик\";\n        Language.labels[Language.TITLE_HELP11] = \"дружок\";\n        Language.labels[Language.TITLE_HELP12] = \"пухлик\";\n        Language.labels[Language.TITLE_HELP13] = \"шаман\";\n        Language.labels[Language.TITLE_HELP14] = \"элвис\";\n\n        Language.labels[Language.HELP1] = \"игровое поле представляет собой квадратную сетку ячеек (9х9 клеток), в которых располагаются монстры.\";\n        Language.labels[Language.HELP2] = \"после перемещения любого монстра в ячейках появляются 3 новых монстра.\";\n        Language.labels[Language.HELP3] = \"выстраивай из одинаковых монстров непрерывные горизонтальные, вертикальные или диагональные линии.\";\n        Language.labels[Language.HELP4] = \"когда в линии будет достаточное количество монстров, они исчезнут. при этом игрок получит определенное количество очков.\";\n        Language.labels[Language.HELP5] = \"если монстры исчезают в линии, три новых монстра не появляются.\";\n        Language.labels[Language.HELP6] = \"игра заканчивается, когда все ячейки заполнены монстрами или когда все ячейки пустые.\";\n        Language.labels[Language.HELP7] = \"цель игры - набрать как можно больше очков. рекорды доступны в таблице чемпионов.\";\n        Language.labels[Language.HELP8] = \"перемещаются по вертикали и горизонтали. монстры исчезнут, когда в линии будет 5 пушков.\";\n        Language.labels[Language.HELP9] = \"перемещаются по вертикали и горизонтали и приносят больше очков. монстры исчезнут, когда в линии будет 5 копилок.\";\n        Language.labels[Language.HELP10] = \"монстры перемещаются телепортацией в любую свободную ячейку и исчезнут, когда в линии будет 5 мистиков.\";\n        Language.labels[Language.HELP11] = \"перемещаются по вертикали, горизонтали и диагонали. монстры исчезнут, когда в линии будет 5 дружков.\";\n        Language.labels[Language.HELP12] = \"перемещаются по вертикали, горизонтали и диагонали но только на одну ячейку. монстры исчезнут, когда в линии будет 4 пухлика.\";\n        Language.labels[Language.HELP13] = \"перемещаются по вертикали и горизонтали и могут занимать занятые ячейки. монстры исчезнут, когда в линии будет 6 шаманов.\";\n        Language.labels[Language.HELP14] = \"перемещаются по вертикали и горизонтали. если между двумя элвисами есть два других монстра, линия исчезнет. монстры также исчезнут, когда в линии будет 4 элвиса.\";\n\n        Language.labels[Language.TASK_HELP1] = \"\";\n        Language.labels[Language.TASK_HELP2] = \"попробуй попередвигать монстров\";\n        Language.labels[Language.TASK_HELP3] = \"заверши линию, отправив дружка в указанную точку\";\n        Language.labels[Language.TASK_HELP4] = \"\";\n        Language.labels[Language.TASK_HELP5] = \"\";\n        Language.labels[Language.TASK_HELP6] = \"\";\n        Language.labels[Language.TASK_HELP7] = \"\";\n        Language.labels[Language.TASK_HELP8] = \"передвинь пушка в указанную точку\";\n        Language.labels[Language.TASK_HELP9] = \"передвинь копилку в указанную точку\";\n        Language.labels[Language.TASK_HELP10] = \"телепортируй мистика в указанную точку\";\n        Language.labels[Language.TASK_HELP11] = \"передвинь дружка в указанную точку\";\n        Language.labels[Language.TASK_HELP12] = \"передвинь пухлика в указанную точку\";\n        Language.labels[Language.TASK_HELP13] = \"выбери шамана. затем нажми на монстра и держи пока не появится сигнал\";\n        Language.labels[Language.TASK_HELP14] = \"передвинь элвиса в указанную точку\";\n\n        Language.labels[Language.PLAYER_NAME_PLACEHOLDER] = \"Введите свое имя\";\n\n        Language.current = \"rus\";\n    }\n\n    // получить текст для объекта\n    public static getText(id: string): string {\n        return Language.labels[id] !== undefined ? Language.labels[id].toUpperCase() : (`запись ${id} не найдена`).toUpperCase();\n    }\n}","export const CursorEvents = {\n    RESET: \"CursorEvents.RESET\",\n    CHANGE_POSITION: \"CursorEvents.CHANGE_POSITION\"\n};","import { Container, Scene, Sprite, Point } from \"../../exports\";\nimport { IAnimatable } from \"../../scenes/interfaces/IAnimatable\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { AMath } from \"../../utils/AMath\";\nimport { EnterFrameManager } from \"../../scenes/managers/EnterFrameManager\";\nimport { CursorEvents } from \"../events/CursorEvents\";\n\nexport class Cursour extends Container implements IAnimatable {\n\n    private mapModel: MapModel;\n\n    private charge: Sprite;\n    private loaderMagic: Sprite;\n\n    private timerMagic: number;\n    private timerMagicTotal: number = 50;\n\n    constructor(scene: Scene) {\n        super(scene);\n\n        this.mapModel = new MapModel();\n\n        this.charge = this.scene.add.sprite(0, 0, \"monstersInit2\", \"sparkBall\");\n        this.charge.scaleX = this.charge.scaleY = 2.5;\n\n        this.loaderMagic = this.scene.add.sprite(0, 0, \"monstersInit3\", \"loaderMagic\");\n        this.loaderMagic.play(\"loaderMagic\");\n        this.loaderMagic.anims.pause();\n\n        this.add([\n            this.charge,\n            this.loaderMagic\n        ]);\n\n        this.charge.setVisible(false);\n        this.loaderMagic.setVisible(false);\n    }\n\n    public activate(): void {\n        this.scene.game.events.addListener(CursorEvents.RESET, this.onReset, this);\n        this.scene.game.events.addListener(CursorEvents.CHANGE_POSITION, this.onChangePosition, this);\n        EnterFrameManager.add(this);\n    }\n\n    public deactivate(): void {\n        EnterFrameManager.remove(this);\n        this.scene.game.events.removeListener(CursorEvents.RESET, this.onReset, this);\n        this.scene.game.events.removeListener(CursorEvents.CHANGE_POSITION, this.onChangePosition, this);\n    }\n\n    private onReset(): void {\n        this.timerMagic = this.timerMagicTotal;\n        if (this.loaderMagic.visible) {\n            this.loaderMagic.setVisible(false);\n        }\n    }\n\n    private onChangePosition(): void {\n        this.x = MapModel.toPix(this.mapModel.pointCursour.x);\n        this.y = MapModel.toPix(this.mapModel.pointCursour.y);\n    }\n\n    public onUpdate(deltaTime: number): void {\n        if (this.mapModel.isGreen && this.mapModel.isMagic && !this.mapModel.isKill) {\n            if (this.timerMagic > 0) {\n                this.timerMagic--;\n                this.loadMagic(this.timerMagic, this.timerMagicTotal);\n            }\n        }\n        this.resetMagicCharge();\n    }\n\n    private resetMagicCharge(): void {\n        if (this.mapModel.isMagic && !Point.Equals(this.mapModel.pointCursour, this.mapModel.pointMagic)) {\n            if (this.mapModel.isGreen) {\n                this.mapModel.isKill = false;\n                this.mapModel.isMagic = false;\n                this.onReset();\n            }\n        }\n    }\n\n    private loadMagic(time: number, timeTotal: number): void {\n        if (time > 0) {\n            if (!this.loaderMagic.visible) {\n                this.loaderMagic.setVisible(true);\n            }\n            this.loaderMagic.anims.setProgress(AMath.toPercent(time, timeTotal));\n        } else {\n            this.mapModel.isKill = true;\n            this.onReset();\n            this.charge.setVisible(true);\n            this.charge.play(\"sparkBall\");\n            this.charge.on(\"animationcomplete\", this.onComplete, this);\n        }\n    }\n\n    private onComplete(): void {\n        this.charge.off(\"animationcomplete\", this.onComplete, this);\n        this.charge.anims.stop();\n        this.charge.setVisible(false);\n    }\n}","export enum AssetTypes {\n    HTML,\n    FONT_BMP,\n    ATLAS_XML,\n    ATLAS_JSON,\n    AUDIO\n}","export const GameProcessEvents = {\n    CONTINUE_GAME: \"MenuEvents.CONTINUE_GAME\",\n    STAT_NEW_GAME: \"MenuEvents.STAT_NEW_GAME\",\n    START_TUTORIAL: \"MenuEvents.START_TUTORIAL\",\n    END_GAME: \"MenuEvents.END_GAME\",\n    SET_NEXT_MONSTERS: \"GameProcessEvents.SET_NEXT_MONSTERS\",\n    DELETE_LINES: \"GameProcessEvents.DELETE_LINES\",\n    END_TURN: \"GameProcessEvents.END_TURN\",\n    INIT_SCORE: \"GameProcessEvents.INIT_SCORE\",\n    UPDATE_SCORE: \"GameProcessEvents.UPDATE_SCORE\"\n};","import { IGameData } from \"../interfaces/IGameData\";\nimport { LocalStorageUtils } from \"../../utils/LocalStorageUtils\";\nimport { IPlayerData } from \"../interfaces/IPlayerData\";\nimport { IScore } from \"../interfaces/IScore\";\nimport { ScoreMenu } from \"../../menu/views/ScoreMenu\";\n\nexport class GameDataModel {\n\n    public static readonly COUNT_PLAYERS: number = 7;\n\n    private static instance: GameDataModel;\n\n    private static gameData: IGameData;\n\n    private static _playerId: number;\n\n    constructor() {\n        if (!GameDataModel.instance) {\n            GameDataModel.instance = this;\n        }\n        return GameDataModel.instance;\n    }\n\n    public readData(): void {\n        GameDataModel.gameData = LocalStorageUtils.readData() || this.createDefaultData();\n        console.log(GameDataModel.gameData);\n    }\n\n    public saveData(): void {\n        LocalStorageUtils.saveData(GameDataModel.gameData);\n    }\n\n    public deletePlayerData(playerId: number): void {\n        GameDataModel.allPlayersData[playerId] = this.getEmptyPlayerData();\n        this.saveData();\n    }\n\n    private createDefaultData(): IGameData {\n        return {\n            volumeSounds: 1,\n            volumeMusic: 1,\n            season: 0,\n            language: \"rus\",\n            playersData: this.getDefaultPlayersData(),\n            scores: this.getDefaultScoresData()\n        } as IGameData;\n    }\n\n    private getDefaultPlayersData(): IPlayerData[] {\n        const playersData: IPlayerData[] = [];\n\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            playersData[indexPlayer] = this.getEmptyPlayerData();\n        }\n        return playersData;\n    }\n\n    private getEmptyPlayerData(): IPlayerData {\n        return {\n            name: \"???\",\n            monster: \"\",\n            gameOver: true,\n            darksEscape: true,\n            mapColor: [],\n            score: 0,\n            nextMonsters: [],\n            isVisibilityCells: false,\n            quests: []\n        } as IPlayerData;\n    }\n\n    private getDefaultScoresData(): IScore[] {\n        const scores: IScore[] = [];\n\n        for (let indexPlayer: number = 0; indexPlayer < ScoreMenu.COUNT_POSITIONS; indexPlayer++) {\n            scores[indexPlayer] = this.getEmptyScoreData();\n        }\n        return scores;\n    }\n\n    private getEmptyScoreData(): IScore {\n        return {\n            playerName: \"???\",\n            score: \"---\",\n            monsterColor: \"p\"\n        } as IScore;\n    }\n\n    public static get volumeSounds(): number {\n        return GameDataModel.gameData.volumeSounds;\n    }\n    \n    public static set volumeSounds(value: number) {\n        GameDataModel.gameData.volumeSounds = value;\n    }\n    \n    public static get volumeMusic(): number {\n        return GameDataModel.gameData.volumeMusic;\n    }\n    \n    public static set volumeMusic(value: number) {\n        GameDataModel.gameData.volumeMusic = value;\n    }\n    \n    public static get allPlayersData(): IPlayerData[] {\n        return GameDataModel.gameData.playersData;\n    }\n    \n    public static get playerId(): number {\n        return GameDataModel._playerId;\n    }\n\n    public static set playerId(value: number) {\n        if (value < 0 || GameDataModel.COUNT_PLAYERS <= value) {\n            return;\n        }\n        GameDataModel._playerId = value;\n    }\n    \n    public static get playerData(): IPlayerData {\n        return GameDataModel.gameData.playersData[GameDataModel.playerId];\n    }\n\n    public static get seasonId(): number {\n        return GameDataModel.gameData.season;\n    }\n\n    public static set seasonId(value: number) {\n        GameDataModel.gameData.season = value;\n    }\n\n    public static get language(): string {\n        return GameDataModel.gameData.language;\n    }\n\n    public static set language(value: string) {\n        GameDataModel.gameData.language = value;\n    }\n\n    public static get policy(): boolean {\n        return this.playerData.darksEscape;\n    }\n\n    public static set policy(value: boolean) {\n        this.playerData.darksEscape = value;\n    }\n\n    public static get scores(): IScore[] {\n        return GameDataModel.gameData.scores;\n    }\n\n    public static set score(value: number) {\n        GameDataModel.playerData.score = value;\n    }\n\n    public static set quests(value: any[]) {\n        GameDataModel.playerData.quests = value;\n    }\n\n    public static get quests(): any[] {\n        return GameDataModel.playerData.quests;\n    }\n}","import { Game } from \"../../exports\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\nimport { GameProcessEvents } from \"../events/GameProcessEvents\";\nimport { GameDataModel } from \"./GameDataModel\";\n\nexport class GameProcessModel {\n\n    private static instance: GameProcessModel;\n\n    private game: Game;\n\n    public gameOver: boolean;\n    public isTutorial: boolean;\n    public isNewGame: boolean;\n    public addingMonsters: boolean;\n    public addingInRoom: boolean;\n    public dontMove: boolean;\n    public dontMoveInRoom: boolean;\n    public isBlackthorn: boolean;\n    public monsterInGame: number;\n    public monsterInGameTotal: number;\n    public countOfTurns: number;\n    public turns: number;\n    public arrNextMonsters: string[];\n    private _score: number;\n\n    public elvisIsDel: boolean;\n    public monsterIsDel: boolean;\n\n    private _advice: number;\n\n    constructor(game: Game) {\n        if (!GameProcessModel.instance) {\n            GameProcessModel.instance = this;\n\n            this.game = game;\n            this.monsterInGameTotal = 3;\n        }\n        return GameProcessModel.instance;\n    }\n\n    public createNextMonsters(): void {\n        this.arrNextMonsters = [];\n\n        for (let i: number = 0; i < this.monsterInGameTotal; i++) {\n            this.arrNextMonsters[i] = ColorIDsUtils.getRandomColor();\n        }\n        if (!this.isTutorial) {\n            this.game.events.emit(GameProcessEvents.SET_NEXT_MONSTERS, this.arrNextMonsters);\n        }\n    }\n\n    public resetScore(score: number = 0): void {\n        this._score = score;\n        this.game.events.emit(GameProcessEvents.INIT_SCORE);\n    }\n\n    public get advice(): number {\n        return this._advice;\n    }\n\n    public set advice(value: number) {\n        this._advice = value;\n    }\n\n    public set score(value: number) {\n        this._score = value;\n        GameDataModel.score = this.score;\n        this.game.events.emit(GameProcessEvents.UPDATE_SCORE);\n    }\n\n    public get score(): number {\n        return this._score;\n    }\n}","import { Scene } from \"../../exports\";\nimport { AssetTypes } from \"../constants\";\nimport { ILoadingAsset } from \"../interfaces/ILoadingAsset\";\n\nexport class LoadingAssetsModel {\n\n    private static readonly preloadingAssets: ILoadingAsset[] = [\n        { type: AssetTypes.ATLAS_XML, key: \"preloader\", url: \"./assets/img/preloader.xml\", textureUrl: \"./assets/img/preloader.png\" },\n        { type: AssetTypes.FONT_BMP, key: \"aivaStroke\", url: \"./assets/fonts/fontAivaStroke.fnt\", textureUrl: \"./assets/fonts/fontAivaStroke.png\" }\n    ];\n\n    private static readonly initLoadingAssets: ILoadingAsset[] = [\n        { type: AssetTypes.FONT_BMP, key: \"aivaWhite\", url: \"./assets/fonts/fontAivaWhite.fnt\", textureUrl: \"./assets/fonts/fontAivaWhite.png\" },\n        { type: AssetTypes.FONT_BMP, key: \"aivaGold\", url: \"./assets/fonts/fontAivaGold.fnt\", textureUrl: \"./assets/fonts/fontAivaGold.png\" },\n\n        { type: AssetTypes.ATLAS_XML, key: \"backgrounds\", url: \"./assets/img/backgrounds.xml\", textureUrl: \"./assets/img/backgrounds.png\" },\n        { type: AssetTypes.ATLAS_JSON, key: \"profiles\", url: \"./assets/img/profiles.json\", textureUrl: \"./assets/img/profiles.png\" },\n        { type: AssetTypes.ATLAS_XML, key: \"menu\", url: \"./assets/img/menu.xml\", textureUrl: \"./assets/img/menu.png\" },\n        { type: AssetTypes.ATLAS_JSON, key: \"ui\", url: \"./assets/img/ui.json\", textureUrl: \"./assets/img/ui.png\" },\n        { type: AssetTypes.ATLAS_XML, key: \"monstersInit1\", url: \"./assets/img/monstersInit1.xml\", textureUrl: \"./assets/img/monstersInit1.png\" },\n        { type: AssetTypes.ATLAS_XML, key: \"monstersInit2\", url: \"./assets/img/monstersInit2.xml\", textureUrl: \"./assets/img/monstersInit2.png\" },\n        { type: AssetTypes.ATLAS_XML, key: \"monstersInit3\", url: \"./assets/img/monstersInit3.xml\", textureUrl: \"./assets/img/monstersInit3.png\" },\n        { type: AssetTypes.ATLAS_XML, key: \"scores\", url: \"./assets/img/scores.xml\", textureUrl: \"./assets/img/scores.png\" },\n        { type: AssetTypes.ATLAS_JSON, key: \"spark\", url: \"./assets/img/spark.json\", textureUrl: \"./assets/img/spark.png\" },\n\n        { type: AssetTypes.AUDIO, key: \"menuMusic\", audioUrl: [\"./assets/music/Menu.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"gameMusic\", audioUrl: [\"./assets/music/Game.mp3\"] },\n\n        { type: AssetTypes.AUDIO, key: \"Move\", audioUrl: [\"./assets/sounds/Move.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Choice\", audioUrl: [\"./assets/sounds/Choice.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Bell\", audioUrl: [\"./assets/sounds/Bell.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Bonus\", audioUrl: [\"./assets/sounds/Bonus.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Key\", audioUrl: [\"./assets/sounds/Key.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Spark\", audioUrl: [\"./assets/sounds/Spark.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"QuestComplete\", audioUrl: [\"./assets/sounds/QuestComplete.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Portal\", audioUrl: [\"./assets/sounds/Portal.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Abort\", audioUrl: [\"./assets/sounds/Abort.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"Ingame\", audioUrl: [\"./assets/sounds/Ingame.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"GClickAnim3\", audioUrl: [\"./assets/sounds/GClickAnim3.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"OClickAnim1\", audioUrl: [\"./assets/sounds/OClickAnim1.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"OOverAnim2\", audioUrl: [\"./assets/sounds/OOverAnim2.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"POverAnim3\", audioUrl: [\"./assets/sounds/POverAnim3.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"YClickAnim2\", audioUrl: [\"./assets/sounds/YClickAnim2.mp3\"] },\n        { type: AssetTypes.AUDIO, key: \"YInsult\", audioUrl: [\"./assets/sounds/YInsult.mp3\"] },\n\n        { type: AssetTypes.HTML, key: \"playerName\", url: \"./assets/html/signUp.html\" }\n    ];\n\n    private scene: Scene;\n\n    constructor(scene: Scene) {\n        this.scene = scene;\n    }\n\n    public loadPreloadAssets(): void {\n        this.loadAssets(LoadingAssetsModel.preloadingAssets);\n    }\n    \n    public loadInitialAssets(): void {\n        this.loadAssets(LoadingAssetsModel.initLoadingAssets);\n    }\n\n    private loadAssets(assets: ILoadingAsset[]): void {\n        assets.forEach((asset: ILoadingAsset) => {\n            switch (asset.type) {\n                case AssetTypes.ATLAS_XML:\n                    this.scene.load.atlasXML(asset.key, asset.textureUrl, asset.url);\n                    break;\n\n                case AssetTypes.ATLAS_JSON:\n                    this.scene.load.atlas(asset.key, asset.textureUrl, asset.url);\n                    break;\n\n                case AssetTypes.AUDIO:\n                    this.scene.load.audio(asset.key, asset.audioUrl);\n                    break;\n\n                case AssetTypes.FONT_BMP:\n                    this.scene.load.bitmapFont(asset.key, asset.textureUrl, asset.url);\n                    break;\n\n                case AssetTypes.HTML:\n                    this.scene.load.html(asset.key, asset.url);\n                    break;\n\n                default:\n                    console.error(`${asset.type} is not define!`);\n                    break;\n            }\n        });\n    }\n}","import GameConfig = Phaser.Types.Core.GameConfig;\nimport Config = Phaser.Core.Config;\nimport File = Phaser.Loader.File;\nimport Game = Phaser.Game;\nimport Scene = Phaser.Scene;\nimport Graphics = Phaser.GameObjects.Graphics;\nimport Text = Phaser.GameObjects.Text;\nimport BitmapText = Phaser.GameObjects.BitmapText;\nimport DynamicBitmapText = Phaser.GameObjects.DynamicBitmapText;\nimport TimerEvent = Phaser.Time.TimerEvent;\nimport Shape = Phaser.Geom;\nimport Texture = Phaser.Textures.Texture;\nimport Sprite = Phaser.GameObjects.Sprite;\nimport Image = Phaser.GameObjects.Image;\nimport Group = Phaser.GameObjects.Group;\nimport GameObject = Phaser.GameObjects.GameObject;\nimport Container = Phaser.GameObjects.Container;\nimport Pointer = Phaser.Input.Pointer;\nimport Zone = Phaser.GameObjects.Zone;\nimport Tween = Phaser.Tweens.Tween;\nimport BaseSound = Phaser.Sound.BaseSound;\nimport HTML5AudioSound = Phaser.Sound.HTML5AudioSound;\nimport WebAudioSound = Phaser.Sound.WebAudioSound;\nimport PluginManager = Phaser.Plugins.PluginManager;\nimport BasePlugin = Phaser.Plugins.BasePlugin;\nimport BaseSoundManager = Phaser.Sound.BaseSoundManager;\nimport HTML5AudioSoundManager = Phaser.Sound.HTML5AudioSoundManager;\nimport WebAudioSoundManager = Phaser.Sound.WebAudioSoundManager;\nimport Size = Phaser.GameObjects.Components.Size;\nimport Actions = Phaser.Actions;\nimport DOMElement = Phaser.GameObjects.DOMElement;\nimport Vector2 = Phaser.Math.Vector2;\nimport Point = Phaser.Geom.Point;\nimport Circle = Phaser.Geom.Circle;\nimport Color = Phaser.Display.Color;\n\nexport {\n    GameConfig,\n    Config,\n    File,\n    Game,\n    Scene,\n    Graphics,\n    Text,\n    BitmapText,\n    DynamicBitmapText,\n    TimerEvent,\n    Shape,\n    Texture,\n    Image,\n    Sprite,\n    Group,\n    GameObject,\n    Container,\n    Pointer,\n    Zone,\n    Tween,\n    BaseSound,\n    HTML5AudioSound,\n    WebAudioSound,\n    PluginManager,\n    BasePlugin,\n    BaseSoundManager,\n    HTML5AudioSoundManager,\n    WebAudioSoundManager,\n    Size,\n    Actions,\n    DOMElement,\n    Vector2,\n    Point,\n    Circle,\n    Color\n};","import \"../data/css/style.css\";\nimport {App} from \"./App\";\n\nfunction launchGame(): void {\n    window.focus();\n    const game: App = new App();\n}\n\nwindow.onload = launchGame;","export const LoginEvents = {\n    BACK_TO_LOGIN: \"LoginEvents.BACK_TO_LOGIN\",\n    SELECT_PROFILE: \"LoginEvents.SELECT_PROFILE\",\n    CREATE_PROFILE: \"LoginEvents.CREATE_PROFILE\",\n    DELETE_PROFILE: \"LoginEvents.DELETE_PROFILE\",\n    PLAY_GAME: \"LoginEvents.PLAY_GAME\"\n};","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { BitmapText, Container, Graphics, Shape, Sprite, Tween } from \"../../exports\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\nimport { LoginEvents } from \"../events/LoginEvents\";\n\nexport class Profile extends Container {\n\n    private hitArea: Shape.Circle;\n    private graphics: Graphics;\n    private monster: Sprite;\n    private tfPlayerName: BitmapText;\n    private idProfile: number;\n\n    private arrPos: string[] = [\"Out\", \"Up\"];\n\n    private tween: Tween;\n\n    constructor(scene: Phaser.Scene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n        super(scene, x, y, children);\n\n        this.monster = this.scene.add.sprite(0, 0, \"\").setScale(1.6).play(\"addUser\");\n\n        this.tfPlayerName = this.scene.add.bitmapText(0, 80, \"aivaStroke\", \"PLAYER\", 36).setOrigin(.5);\n\n        this.graphics = this.scene.add.graphics({ fillStyle: { color: 0xaa0000, alpha: 0 } });\n        this.hitArea = new Shape.Circle(0, 0, 60);\n        this.graphics.fillCircleShape(this.hitArea);\n\n        this.add([\n            this.monster,\n            this.tfPlayerName,\n            this.graphics\n        ]);\n        this.hitArea.setPosition(this.monster.x, this.monster.y);\n\n        this.init();\n        this.show();\n    }\n\n    public init(): void {\n        this.scaleX = 0;\n        this.scaleY = 0;\n    }\n\n    public free(): void {\n        this.monster.anims.pause();\n    }\n\n    public setProfileData(namePlayer: string, color: string, id: number): void {\n        this.tfPlayerName.text = namePlayer;\n\n        let postfix: string = \"\";\n\n        const prefix: string = ColorIDsUtils.getColorFromID(color);\n        if (prefix !== \"addUser\") {\n            postfix = this.arrPos[Phaser.Math.Between(0, this.arrPos.length - 1)];\n        }\n\n        this.monster.play(prefix + postfix, true, Phaser.Math.Between(0, this.monster.anims.getTotalFrames() - 1));\n        this.idProfile = id;\n\n        this.init();\n        this.show();\n    }\n\n    public hide(): void {\n        this.removeListeners();\n\n        this.removeTweens();\n        this.tween = this.scene.add.tween({\n            targets: this,\n            scaleX: 0,\n            scaleY: 0,\n            duration: 300,\n            onComplete: () => this.free()\n        });\n    }\n\n    public show(): void {\n        this.monster.anims.resume();\n\n        this.removeTweens();\n        this.tween = this.scene.add.tween({\n            targets: this,\n            scaleX: 1,\n            scaleY: 1,\n            duration: 500,\n            onComplete: () => this.addListeners()\n        });\n    }\n\n    private removeTweens(): void {\n        if (this.tween) {\n            this.tween.remove();\n        }\n    }\n\n    public addListeners(): void {\n        this.setInteractive(this.hitArea, Shape.Circle.Contains);\n        this.on(\"pointerup\", this.onClick, this);\n    }\n\n    public removeListeners(): void {\n        this.disableInteractive();\n        this.off(\"pointerup\", this.onClick, this);\n    }\n\n    private onClick(): void {\n        this.scene.sound.play(\"Move\", { volume: GameDataModel.volumeSounds });\n        this.scene.events.emit(LoginEvents.SELECT_PROFILE, this.id);\n    }\n\n    public get id(): number {\n        return this.idProfile;\n    }\n}","import { Language } from \"../../content/Language\";\nimport { BitmapText, Sprite } from \"../../exports\";\nimport { PopupConstants } from \"../../popups/constants\";\nimport { IPopupOptions } from \"../../popups/interfaces/IPopupOptions\";\nimport { Button } from \"../../ui/views/Button\";\nimport { LoginEvents } from \"../events/LoginEvents\";\nimport { SignUpInBase } from \"./SignUpInBase\";\nimport { PopupEvents } from \"../../popups/events/PopupEvents\";\n\nexport class SignIn extends SignUpInBase {\n\n    private monster: Sprite;\n    private tfName: BitmapText;\n\n    private btnBack: Button;\n    private btnPlay: Button;\n    private btnDelete: Button;\n\n    private showMessageBox: boolean;\n    private playerName: string;\n    private animName: string;\n\n    constructor(scene: Phaser.Scene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n        super(scene, x, y, children);\n\n        // монстр\n        this.monster = this.scene.add.sprite(0, 0, \"\").setScale(1.8).play(\"redUp\");\n        this.monster.y = -40;\n\n        // имя игрока под монстром\n        this.tfName = this.scene.add.bitmapText(0, 70, \"aivaGold\", \"\", 70).setOrigin(.5);\n\n        // кнопка назад\n        this.btnBack = new Button(this.scene, \"btnPink\", \"\", () => this.back());\n        this.btnBack.addLabel(\"BACK\", \"aivaStroke\", 36, 0, -12);\n        this.btnBack.y = -180;\n        this.arrButtons.push(this.btnBack);\n\n        // кнопка удалить профиль\n        this.btnDelete = new Button(this.scene, \"btnGreenPoint\", \"iconDel\", () => this.areYouSure());\n        this.btnDelete.y = this.btnBack.y;\n        this.btnDelete.x = this.btnBack.x + this.btnBack.getBounds().width / 2 + this.btnDelete.getBounds().width / 2 + 10;\n        this.arrButtons.push(this.btnDelete);\n\n        // кнопка играть для завершения регистрации игрока\n        this.btnPlay = new Button(this.scene, \"btnGreen\", \"\", () => this.playGame());\n        this.btnPlay.addLabel(\"PLAY\", \"aivaStroke\", 36, 0, -12);\n        this.btnPlay.y = 180;\n        this.arrButtons.push(this.btnPlay);\n\n        this.add([\n            this.monster,\n            this.tfName,\n            this.btnBack,\n            this.btnDelete,\n            this.btnPlay\n        ]);\n    }\n\n    public resetData(animName: string, playerName: string): void {\n        this.animName = animName;\n        this.playerName = playerName;\n    }\n\n    public init(): void {\n        this.monster.play(this.animName + \"Up\");\n        this.tfName.text = this.playerName;\n\n        super.init();\n    }\n    \n    public show(): void {\n        this.monster.play(this.animName + \"Up\");\n        super.show();\n    }\n\n    public free(): void {\n        if (this.showMessageBox) {\n            this.showMessageBox = false;\n\n            const popupOptions: IPopupOptions = {\n                id: PopupConstants.ids.POPUP_APPROVE,\n                yes: () => this.scene.events.emit(LoginEvents.DELETE_PROFILE),\n                no: () => this.show()\n            };\n            this.scene.game.events.emit(PopupEvents.SHOW_POPUP, popupOptions);\n        }\n        this.monster.anims.stop();\n        super.free();\n    }\n\n    private back(): void {\n        this.scene.events.emit(LoginEvents.BACK_TO_LOGIN);\n        this.hide();\n    }\n\n    private areYouSure(): void {\n        this.showMessageBox = true;\n        this.hide();\n    }\n\n    private playGame(): void {\n        this.scene.events.emit(LoginEvents.PLAY_GAME);\n        this.hide();\n    }\n\n    public language(): void {\n        this.btnPlay.text = Language.getText(Language.PLAY);\n        this.btnBack.text = Language.getText(Language.BACK);\n    }\n}","import { Language } from \"../../content/Language\";\nimport { BitmapText, DOMElement } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { Button } from \"../../ui/views/Button\";\nimport { LoginEvents } from \"../events/LoginEvents\";\nimport { SignUpInBase } from \"./SignUpInBase\";\nimport { UserChoise } from \"./UserChoise\";\nimport { ILoginData } from \"../interfaces/ILoginData\";\n\nexport class SignUp extends SignUpInBase {\n\n    protected scene: BaseScene;\n\n    private monsterChoise: UserChoise;\n    private tfLabelMonster: BitmapText;\n    private tfLabelPlayer: BitmapText;\n    private tfNamePlayer: DOMElement;\n\n    private btnBack: Button;\n    private btnDone: Button;\n\n    constructor(scene: BaseScene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n        super(scene, x, y, children);\n\n        // панель выбора монстра\n        this.monsterChoise = new UserChoise(scene);\n        this.monsterChoise.scaleX = this.monsterChoise.scaleY = 1.25;\n        this.monsterChoise.y = -60;\n\n        // подпись панели выбора монстра\n        this.tfLabelMonster = this.scene.add.bitmapText(0, -170, \"aivaGold\", \"\", 48).setOrigin(.5);\n\n        // подпись поля ввода имени игрока\n        this.tfLabelPlayer = this.scene.add.bitmapText(0, 100, \"aivaGold\", \"\", 48).setOrigin(.5);\n\n        // создание поля ввода имени игрока\n        this.tfNamePlayer = this.scene.add.dom(0, 165).createFromCache(\"playerName\");\n\n        // кнопка назад\n        this.btnBack = new Button(this.scene, \"btnPink\", \"\", () => this.back());\n        this.btnBack.addLabel(\"BACK\", \"aivaStroke\", 36, 0, -12);\n        this.btnBack.y = -260;\n        this.arrButtons.push(this.btnBack);\n\n        // кнопка готово для завершения регистрации игрока\n        this.btnDone = new Button(this.scene, \"btnGreen\", \"\", () => this.done());\n        this.btnDone.addLabel(\"CREATE\", \"aivaStroke\", 36, 0, -12);\n        this.btnDone.y = 260;\n        this.arrButtons.push(this.btnDone);\n\n        this.add([\n            this.monsterChoise,\n            this.tfLabelMonster,\n            this.tfLabelPlayer,\n            this.btnBack,\n            this.btnDone,\n            this.tfNamePlayer\n        ]);\n    }\n\n    public init(): void {\n        this.monsterChoise.init();\n\n        this.monsterChoise.random();\n        (this.tfNamePlayer.getChildByName(\"namePlayer\") as any).placeholder = Language.getText(Language.PLAYER_NAME_PLACEHOLDER);\n        (this.tfNamePlayer.getChildByName(\"namePlayer\") as any).value = \"\";\n\n        super.init();\n    }\n\n    public free(): void {\n        this.monsterChoise.free();\n        super.free();\n    }\n\n    private back(): void {\n        this.scene.events.emit(LoginEvents.BACK_TO_LOGIN);\n        this.hide();\n    }\n\n    private done(): void {\n        const playerData: ILoginData = {\n            playerName: (this.tfNamePlayer.getChildByName(\"namePlayer\") as any).value,\n            playerColor: this.monsterChoise.getColor()\n        };\n        this.scene.events.emit(LoginEvents.CREATE_PROFILE, playerData);\n        this.hide();\n    }\n\n    public language(): void {\n        this.btnDone.text = Language.getText(Language.DONE);\n        this.btnBack.text = Language.getText(Language.BACK);\n\n        this.tfLabelPlayer.text = Language.getText(Language.CHAMPION);\n        this.tfLabelMonster.text = Language.getText(Language.BONUS);\n    }\n}","import { Container } from \"../../exports\";\nimport { Button } from \"../../ui/views/Button\";\nimport { ChangeVisibilityUtils } from \"../../utils/ChangeVisibilityUtils\";\n\nexport class SignUpInBase extends Container {\n\n    protected arrButtons: Button[] = [];\n\n    public init(): void {\n        this.setEnableButtons(false);\n        this.show();\n    }\n    \n    public free(): void {\n        this.visible = false;\n    }\n\n    public show(): void {\n        this.alpha = 0;\n        ChangeVisibilityUtils.show(this.scene, this, 500, () => this.addListeners());\n    }\n\n    public hide(): void {\n        this.removeListeners();\n        ChangeVisibilityUtils.hide(this.scene, this, 300, () => this.free());\n    }\n\n    protected addListeners(): void {\n        this.setEnableButtons(true);\n    }\n\n    protected removeListeners(): void {\n        this.setEnableButtons(false);\n    }\n\n    private setEnableButtons(isEnabled: boolean): void {\n        this.arrButtons.forEach((button: Button) => {\n            isEnabled ? button.activate() : button.deactivate();\n        });\n    }\n}","import { BitmapText, Container, Sprite } from \"../../exports\";\nimport { Button } from \"../../ui/views/Button\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\n\nexport class UserChoise extends Container {\n\n    private readonly RANGE_FOR_BUTTONS: number = 150;\n    private readonly POS_Y_FOR_BUTTONS: number = 20;\n\n    private monster: Sprite;\n    private btnNext: Button;\n    private btnPrev: Button;\n\n    private index: number;\n\n    private tf: BitmapText;\n    private txtCountMonsters: string;\n\n    constructor(scene: Phaser.Scene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n        super(scene, x, y, children);\n\n        this.monster = this.scene.add.sprite(0, 0, \"\").setScale(1.5).play(\"redUp\");\n\n        this.btnNext = new Button(this.scene, \"btnGreenPoint\", \"iconRight\", () => this.onNext());\n        this.btnNext.x = this.RANGE_FOR_BUTTONS;\n        this.btnNext.y = this.POS_Y_FOR_BUTTONS;\n\n        this.btnPrev = new Button(this.scene, \"btnGreenPoint\", \"iconLeft\", () => this.onPrev());\n        this.btnPrev.x = -this.RANGE_FOR_BUTTONS;\n        this.btnPrev.y = this.POS_Y_FOR_BUTTONS;\n\n        this.tf = this.scene.add.bitmapText(0, 45, \"aivaStroke\", \"\", 40).setOrigin(.5, 0);\n        \n        this.add([\n            this.monster,\n            this.btnNext,\n            this.btnPrev,\n            this.tf\n        ]);\n\n        this.txtCountMonsters = \"/\" + ColorIDsUtils.count;\n    }\n\n    public init(): void {\n        this.random();\n        this.btnNext.activate();\n        this.btnPrev.activate();\n    }\n\n    public free(): void {\n        this.monster.anims.stop();\n        this.btnNext.deactivate();\n        this.btnPrev.deactivate();\n    }\n\n    public random(): void {\n        this.index = Phaser.Math.Between(0, ColorIDsUtils.count - 1);\n        this.refreshMonster();\n    }\n\n    private refreshMonster(): void {\n        const color: string = ColorIDsUtils.getColorFromIndex(this.index);\n\n        this.monster.play(color + \"Up\");\n        this.tf.text = (this.index + 1) + this.txtCountMonsters;\n    }\n\n    public getColor(): string {\n        return ColorIDsUtils.getColorFromChar(this.index);\n    }\n\n    private onNext(): void {\n        if (this.index < ColorIDsUtils.count - 1) {\n            this.index++;\n            this.refreshMonster();\n        }\n    }\n\n    private onPrev(): void {\n        if (this.index > 0) {\n            this.index--;\n            this.refreshMonster();\n        }\n    }\n}","export const MapEvents = {\n    CHANGE_VISIBILITY_MAP_CELLS: \"MapEvents.CHANGE_VISIBILITY_MAP_CELLS\",\n    CHOICE_SHOW: \"MapEvents.CHOICE_SHOW\",\n    CHOICE_HIDE: \"MapEvents.CHOICE_HIDE\",\n    CHOICE_RESET: \"MapEvents.CHOICE_RESET\",\n    ADD_MONSTER: \"MapEvents.ADD_MONSTER\",\n    UPDATE_DEPTHS: \"MapEvents.UPDATE_DEPTHS\",\n    ADD_COST_MONSTER: \"MapEvents.ADD_COST_MONSTER\",\n    ADD_STARS: \"MapEvents.ADD_STARS\"\n};","import { Point } from \"../../exports\";\nimport { Monster } from \"../../monsters/views/Monster\";\nimport { IAimMonsterData } from \"../interfaces/IAimMonsterData\";\n\nexport class MapModel {\n\n    public static readonly MAP_POS: number = 245;\n\n    public static readonly MAP_WIDTH_MAX: number = 9;\n    public static readonly MAP_HEIGHT_MAX: number = 9;\n    public static readonly MAP_WIDTH_MAX_INDEX: number = MapModel.MAP_WIDTH_MAX - 1;\n    public static readonly MAP_HEIGHT_MAX_INDEX: number = MapModel.MAP_HEIGHT_MAX - 1;\n    public static readonly MAP_CELL_SIZE: number = 70;\n    public static readonly MAP_CELL_HALF: number = 35;\n\n    private static instance: MapModel;\n\n    private _mapMask: number[][];\n    private _mapColor: string[][];\n    private _mapMonsters: Monster[][];\n    private _allMonsters: Monster[];\n\n    private countMonsterMax: number;\n    private _countMonster: number;\n\n    public mapMaskTemp: number[][];\n\n    public isGreen: boolean;\n    public isMagic: boolean;\n    public isKill: boolean;\n\n    public activeMonster: Monster;\n    public aimMonster: Monster;\n\n    public pointStart: Point;\n    public pointEnd: Point;\n    public pointMagic: Point;\n    public pointCursour: Point;\n\n    public aimMonsterData: IAimMonsterData;\n\n    constructor() {\n        if (!MapModel.instance) {\n            MapModel.instance = this;\n            this.countMonsterMax = MapModel.MAP_WIDTH_MAX * MapModel.MAP_HEIGHT_MAX;\n\n            this.pointStart = new Point(0, 0);\n            this.pointEnd = new Point(0, 0);\n            this.pointCursour = new Point(0, 0);\n            this.pointMagic = new Point(0, 0);\n\n            this.aimMonsterData = {\n                isAimed: false,\n                position: new Point(),\n                cost: 0\n            };\n\n            this._allMonsters = [];\n        }\n        return MapModel.instance;\n    }\n\n    public static toTile(value: number): number {\n        if (value > 0) {\n            return Math.floor(value / MapModel.MAP_CELL_SIZE);\n        }\n        return -1;\n    }\n\n    public static toPix(value: number): number {\n        return MapModel.MAP_CELL_HALF + value * MapModel.MAP_CELL_SIZE;\n    }\n\n    public static inMap(i: number, j: number): boolean {\n        return (i >= 0 && j >= 0 && i < MapModel.MAP_HEIGHT_MAX && j < MapModel.MAP_WIDTH_MAX);\n    }\n\n    public createMap(): void {\n        this.freeAllMonsters();\n\n        this._mapMask = [];\n        this._mapColor = [];\n        this._mapMonsters = [];\n\n        for (let ay: number = 0; ay < MapModel.MAP_HEIGHT_MAX; ay++) {\n            this._mapMask[ay] = [];\n            this._mapColor[ay] = [];\n            this._mapMonsters[ay] = [];\n\n            for (let ax: number = 0; ax < MapModel.MAP_WIDTH_MAX; ax++) {\n                this._mapMask[ay][ax] = 0;\n                this._mapColor[ay][ax] = \"\";\n                this._mapMonsters[ay][ax] = null;\n            }\n        }\n    }\n\n    private freeAllMonsters(): void {\n        this.activeMonster = null;\n        this._allMonsters.forEach((monster: Monster) => {\n            monster.free();\n        });\n        this._allMonsters.length = 0;\n    }\n\n    public leavePlace(tileY: number, tileX: number): void {\n        this._mapMask[tileY][tileX] = 0;\n        this._mapColor[tileY][tileX] = \"\";\n        this._mapMonsters[tileY][tileX] = null;\n    }\n\n    public takePlace(monster: Monster): void {\n        const tileY: number = monster.point.y;\n        const tileX: number = monster.point.x;\n        this._mapMask[tileY][tileX] = 1;\n        this._mapColor[tileY][tileX] = monster.color;\n        this._mapMonsters[tileY][tileX] = monster;\n    }\n\n    public addMonster(monster: Monster): void {\n        this._allMonsters.push(monster);\n    }\n\n    public removeMonster(monster: Monster): void {\n        const indexMonster: number = this._allMonsters.indexOf(monster);\n        if (indexMonster >= 0) {\n            this._allMonsters.splice(indexMonster, 1);\n        }\n    }\n\n    public calcMonsters(): void {\n        this._countMonster = 0;\n        const n: number = this.mapMask.length;\n        for (let i: number = 0; i < n; i++) {\n            const m: number = this.mapMask[i].length;\n            for (let j: number = 0; j < m; j++) {\n                if (this.mapMask[i][j] === 1 || this.mapMask[i][j] === -1) {\n                    this._countMonster++;\n                }\n            }\n        }\n    }\n\n    public calcMonstersColor(color: string): number {\n        let count: number = 0;\n        const n: number = this.mapColor.length;\n        for (let i: number = 0; i < n; i++) {\n            const m: number = this.mapColor[i].length;\n            for (let j: number = 0; j < m; j++) {\n                if (this.mapColor[i][j] === color) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    public get mapMask(): number[][] {\n        return this._mapMask;\n    }\n\n    public get mapColor(): string[][] {\n        return this._mapColor;\n    }\n\n    public get mapMonsters(): Monster[][] {\n        return this._mapMonsters;\n    }\n\n    public get allMonsters(): Monster[] {\n        return this._allMonsters;\n    }\n\n    public get countMonster(): number {\n        return this._countMonster;\n    }\n\n    public get mapIsFull(): boolean {\n        return this.countMonster >= this.countMonsterMax;\n    }\n}","import { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { IDeletedLine } from \"../../data/interfaces/IDeletedLine\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { Game, Point } from \"../../exports\";\nimport { MonsterColor } from \"../../monsters/constants\";\nimport { Monster } from \"../../monsters/views/Monster\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\nimport { MapModel } from \"../models/MapModel\";\n\nexport class LinefinderUtils {\n\n    private static instance: LinefinderUtils;\n\n    private game: Game;\n\n    private mapModel: MapModel = new MapModel();\n    private componentPool: ComponentPool = new ComponentPool();\n    private gameProcessModel: GameProcessModel;\n    \n    // для поиска линий\n    private _arrHorizontal: Point[];\n    private _arrVertical: Point[];\n    private _arrDiagonal1: Point[];\n    private _arrDiagonal2: Point[];\n    private _arrDelete: Point[];\n\n    private _arr: Point[] = [];\n    private _arrLeft: Point[] = [];\n    private _arrRight: Point[] = [];\n    private _left: boolean = false;\n    private _right: boolean = false;\n    private _n: number;\n    private _m: number;\n    private _indexI: number;\n    private _indexJ: number;\n    private _count: number;\n    \n    constructor(game: Game) {\n        if (!LinefinderUtils.instance) {\n            LinefinderUtils.instance = this;\n            this.game = game;\n\n            this.gameProcessModel = new GameProcessModel(this.game);\n        }\n        return LinefinderUtils.instance;\n    }\n\n    /**\n     * поиск всех доступных линий для всех цветов (управляющий метод)\n     */\n    public searchMain(i: number, j: number, color: string, min: number, cost: number): void {\n        // \n        if (color !== MonsterColor.YELLOW) {\n            this.searchLines(i, j, color, min, cost);\n        } else {\n            this.searchElvis(i, j, color, min, cost);\n        }\n        this.searchAllElvis();\n        \n        this.game.events.emit(GameProcessEvents.END_TURN);\n    }\n\n    public searchAllElvis(): void {\n        this.mapModel.allMonsters.forEach((monster: Monster) => {\n            if (monster.color === MonsterColor.YELLOW) {\n                this.searchElvis(MapModel.toTile(monster.y), MapModel.toTile(monster.x), monster.color, monster.min, monster.cost);\n            }\n        });\n    }\n\n    // поиск линий с последующим их удалением\n    public searchLines(i: number, j: number, color: string, min: number, cost: number): void {\n        this._arrHorizontal = this.getLine(i, j, color, min, \"h\");\n        this._arrVertical = this.getLine(i, j, color, min, \"v\");\n        this._arrDiagonal1 = this.getLine(i, j, color, min, \"d1\");\n        this._arrDiagonal2 = this.getLine(i, j, color, min, \"d2\");\n\n        this._arrDelete = [];\n        const p: Point = this.componentPool.get(Point);\n        p.x = j;\n        p.y = i;\n\n        this._arrDelete = this._arrHorizontal.concat(this._arrVertical, this._arrDiagonal1, this._arrDiagonal2);\n        this._arrDelete.unshift(p);\n\n        if (this._arrDelete.length >= min) {\n            this.gameProcessModel.monsterIsDel = true;\n            this.deleteLines(min, cost, color);\n        }\n    }\n\n    // поиск Элвисов с последующим их удалением\n    public searchElvis(i: number, j: number, color: string, min: number, cost: number): void {\n        this._arrHorizontal = this.getLineElvis(i, j, color, \"h\");\n        this._arrVertical = this.getLineElvis(i, j, color, \"v\");\n        this._arrDiagonal1 = this.getLineElvis(i, j, color, \"d1\");\n        this._arrDiagonal2 = this.getLineElvis(i, j, color, \"d2\");\n\n        this._arrDelete = [];\n        const p: Point = this.componentPool.get(Point);\n        p.x = j;\n        p.y = i;\n\n        this._arrDelete = this._arrHorizontal.concat(this._arrVertical, this._arrDiagonal1, this._arrDiagonal2);\n        this._arrDelete.unshift(p);\n\n        if (this._arrDelete.length >= min) {\n            this.gameProcessModel.elvisIsDel = true;\n            this.gameProcessModel.monsterIsDel = true;\n            this.deleteLines(min, cost, color);\n        }\n    }\n\n    private deleteLines(min: number, cost: number, color: string): void {\n        const deletedLine: IDeletedLine = {\n            line: this._arrDelete,\n            min: min,\n            cost: cost,\n            color: color\n        };\n        this.game.events.emit(GameProcessEvents.DELETE_LINES, deletedLine);\n    }\n\n    // поиск линии от точки в двух направлениях\n    private getLine(i: number, j: number, color: string, min: number, type: string): Point[] {\n        // определяем направление поиска в зависимости от его типа\n        this._arr = [];\n        switch (type) {\n            case \"h\":\n                this._indexI = 0;\n                this._indexJ = 1;\n                break;\n\n            case \"v\":\n                this._indexI = 1;\n                this._indexJ = 0;\n                break;\n\n            case \"d1\":\n                this._indexI = -1;\n                this._indexJ = 1;\n                break;\n\n            case \"d2\":\n                this._indexI = 1;\n                this._indexJ = 1;\n                break;\n        }\n\n        this._n = this._indexI;\n        this._m = this._indexJ;\n\n        while (true) {\n            if (MapModel.inMap(i + this._n, j + this._m)) {\n                if (this.mapModel.mapColor[i + this._n][j + this._m] === color) {\n                    const pr: Point = this.componentPool.get(Point);\n                    pr.x = j + this._m;\n                    pr.y = i + this._n;\n                    this._arr.push(pr);\n                    this._n += this._indexI;\n                    this._m += this._indexJ;\n                } else {\n\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n\n        this._indexI *= -1;\n        this._indexJ *= -1;\n\n        this._n = this._indexI;\n        this._m = this._indexJ;\n\n        while (true) {\n            if (MapModel.inMap(i + this._n, j + this._m)) {\n                if (this.mapModel.mapColor[i + this._n][j + this._m] === color) {\n                    const pl: Point = this.componentPool.get(Point);\n                    pl.x = j + this._m;\n                    pl.y = i + this._n;\n                    this._arr.push(pl);\n                    this._n += this._indexI;\n                    this._m += this._indexJ;\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n        return this._arr.length >= min - 1 ? this._arr : [];\n    }\n\n    // поиск линии Элвисов от точки в двух направлениях\n    private getLineElvis(i: number, j: number, color: string, type: string): Point[] {\n        this._arr = [];\n        this._arrLeft = [];\n        this._arrRight = [];\n        this._left = false;\n        this._right = false;\n\n        // определяем направление поиска в зависимости от его типа\n        switch (type) {\n            case \"h\":\n                this._indexI = 0;\n                this._indexJ = 1;\n                break;\n\n            case \"v\":\n                this._indexI = 1;\n                this._indexJ = 0;\n                break;\n\n            case \"d1\":\n                this._indexI = -1;\n                this._indexJ = 1;\n                break;\n\n            case \"d2\":\n                this._indexI = 1;\n                this._indexJ = 1;\n                break;\n        }\n\n        this._n = this._indexI;\n        this._m = this._indexJ;\n        this._count = 0;\n\n        while (this._count < 3) {\n            if (MapModel.inMap(i + this._n, j + this._m)) {\n                if (this._count < 2) {\n                    if (this.mapModel.mapMask[i + this._n][j + this._m] === 1) {\n                        const p1: Point = this.componentPool.get(Point);\n                        p1.x = j + this._m;\n                        p1.y = i + this._n;\n                        this._arrRight.push(p1);\n                        this._n += this._indexI;\n                        this._m += this._indexJ;\n                    } else {\n                        this._arrRight = [];\n                        break;\n                    }\n                } else {\n                    if (this.mapModel.mapColor[i + this._n][j + this._m] === color) {\n                        const p2: Point = this.componentPool.get(Point);\n                        p2.x = j + this._m;\n                        p2.y = i + this._n;\n                        this._arrRight.push(p2);\n                        this._right = true;\n                    }\n                }\n            }\n            this._count++;\n        }\n\n        this._indexI *= -1;\n        this._indexJ *= -1;\n\n        this._n = this._indexI;\n        this._m = this._indexJ;\n        this._count = 0;\n\n        while (this._count < 3) {\n            if (MapModel.inMap(i + this._n, j + this._m)) {\n                if (this._count < 2) {\n                    if (this.mapModel.mapMask[i + this._n][j + this._m] === 1) {\n                        const p3: Point = this.componentPool.get(Point);\n                        p3.x = j + this._m;\n                        p3.y = i + this._n;\n                        this._arrLeft.push(p3);\n                        this._n += this._indexI;\n                        this._m += this._indexJ;\n                    } else {\n                        this._arrLeft = [];\n                        break;\n                    }\n                } else {\n                    if (this.mapModel.mapColor[i + this._n][j + this._m] === color) {\n                        const p4: Point = this.componentPool.get(Point);\n                        p4.x = j + this._m;\n                        p4.y = i + this._n;\n                        this._arrLeft.push(p4);\n                        this._left = true;\n                    }\n                }\n            }\n            this._count++;\n        }\n\n        if (this._left) {\n            this._arr = this._arr.concat(this._arrLeft);\n        }\n        if (this._right) {\n            this._arr = this._arr.concat(this._arrRight);\n        }\n\n        return this._arr;\n    }\n}","import { Point } from \"../../exports\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\nimport { MapModel } from \"../models/MapModel\";\n\nexport class PathfinderUtils {\n\n    public static TYPE_NORMAL: string = \"normal\";\n    public static TYPE_DIAGONAL: string = \"diagonal\";\n    public static MAX_TURN: number = 50;\n\n    private static instance: PathfinderUtils;\n\n    private componentPool: ComponentPool = new ComponentPool();\n    private mapModel: MapModel = new MapModel();\n    \n    private arrI: number[] = [-1, 0, 1, 0];\n    private arrJ: number[] = [0, 1, 0, -1];\n    private arrIDiagonal: number[] = [-1, 0, 1, 0, -1, -1, 1, 1];\n    private arrJDiagonal: number[] = [0, 1, 0, -1, -1, 1, 1, -1];\n\n    private activeArrayI: number[];\n    private activeArrayJ: number[];\n\n    private way: boolean;\n    private turn: number;\n    private turnMax: number;\n    private step: number;\n\n    private arrPoints: Point[] = [];\n    private mapMaskStone: number[][];\n\n    private pointStart: Point;\n    private pointEnd: Point;\n\n    constructor() {\n        if (!PathfinderUtils.instance) {\n            PathfinderUtils.instance = this;\n        }\n        return PathfinderUtils.instance;\n    }\n\n    private free(): void {\n        this.arrPoints.forEach((point: Point) => this.componentPool.dispose(point));\n        this.arrPoints.length = 0;\n    }\n\n    // обнуление маски камней для запуска волны\n    private clearMaskStone(): void {\n        this.step = 1;\n        this.way = false;\n        this.mapMaskStone = [];\n\n        // находим все камни\n        for (let i: number = 0; i < this.mapModel.mapMask.length; i++) {\n            this.mapMaskStone[i] = [];\n            for (let j: number = 0; j < this.mapModel.mapMask[i].length; j++) {\n                if (this.mapModel.mapMask[i][j] !== 0) {\n                    this.mapMaskStone[i][j] = -1;\n                } else {\n                    this.mapMaskStone[i][j] = 0;\n                }\n            }\n        }\n        // ставим \"0\" в стартовую ячейку\n        this.mapMaskStone[this.pointStart.y][this.pointStart.x] = 1;\n    }\n\n    public setStartAndEndPoints(pointStart: Point, pointEnd: Point): void {\n        this.pointStart = pointStart;\n        this.pointEnd = pointEnd;\n    }\n\n    public getWay(type: string, turnMax: number): Point[] {\n        this.turnMax = turnMax;\n        this.free();\n\n        const point: Point = this.componentPool.get(Point);\n        point.x = this.pointEnd.x;\n        point.y = this.pointEnd.y;\n        this.arrPoints.push(point);\n\n        // определяем тип поиска пути, обычный или диагональный\n        if (type === PathfinderUtils.TYPE_NORMAL) {\n            this.activeArrayI = this.arrI;\n            this.activeArrayJ = this.arrJ;\n        } else {\n            this.activeArrayI = this.arrIDiagonal;\n            this.activeArrayJ = this.arrJDiagonal;\n        }\n        // очищаем маску камней\n        this.clearMaskStone();\n\n        this.turn = 0;\n\n        while (this.turn < this.turnMax) {\n            // если путь не найден, льем воду\n            if (!this.way) {\n                this.step++;\n                for (let i: number = 0; i < this.mapMaskStone.length; i++) {\n                    for (let j: number = 0; j < this.mapMaskStone[i].length; j++) {\n                        if (this.mapMaskStone[i][j] === this.step - 1) {\n                            this.goWater(i, j);\n                        }\n                    }\n                }\n\n            } else {\n                this.step--;\n\n                // ищем путь в начало\n                this.searchStep(this.pointEnd.y, this.pointEnd.x, this.step);\n\n                break;\n            }\n\n            this.turn++;\n        }\n\n        // возвращаем массив точек (шагов)\n        return this.arrPoints;\n    }\n\n    // пускаем волну\n    public goWater(i: number, j: number): void {\n        for (let a: number = 0; a < this.activeArrayI.length; a++) {\n            // проверяем, достигнута ли конечная точка\n            if (i + this.activeArrayI[a] === this.pointEnd.y && j + this.activeArrayJ[a] === this.pointEnd.x) {\n                // путь найден\n                this.way = true;\n                return;\n            }\n\n            if (MapModel.inMap(i + this.activeArrayI[a], j + this.activeArrayJ[a]) && // выход за пределы игрового поля\n                this.mapMaskStone[i + this.activeArrayI[a]][j + this.activeArrayJ[a]] === 0 && // сюда не шагали еще\n                this.mapModel.mapMask[i + this.activeArrayI[a]][j + this.activeArrayJ[a]] === 0) { // клетка свободна\n\n                this.mapMaskStone[i + this.activeArrayI[a]][j + this.activeArrayJ[a]] = this.step; // делаем шаг\n            }\n        }\n    }\n\n    // идем в начальную точку и записываем каждый шаг\n    private searchStep(i: number, j: number, step: number): void {\n        if (step <= 0) {\n            return;\n        }\n        for (let a: number = 0; a < this.activeArrayI.length; a++) {\n            if (MapModel.inMap(i + this.activeArrayI[a], j + this.activeArrayJ[a]) && this.mapMaskStone[i + this.activeArrayI[a]][j + this.activeArrayJ[a]] === step) {\n                const point: Point = this.componentPool.get(Point);\n                point.x = j + this.activeArrayJ[a];\n                point.y = i + this.activeArrayI[a];\n\n                this.arrPoints.push(point);\n                this.step--;\n\n                this.searchStep(i + this.activeArrayI[a], j + this.activeArrayJ[a], this.step);\n                break;\n            }\n        }\n    }\n}\n","import { CursorEvents } from \"../../cursor/events/CursorEvents\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { Container, Image, Scene } from \"../../exports\";\nimport { IPosition } from \"../../monsters/interfaces/IPosition\";\nimport { ITile } from \"../../monsters/interfaces/ITile\";\nimport { IAnimatable } from \"../../scenes/interfaces/IAnimatable\";\nimport { EnterFrameManager } from \"../../scenes/managers/EnterFrameManager\";\nimport { MapEvents } from \"../events/MapEvents\";\nimport { MapModel } from \"../models/MapModel\";\n\nexport class Choice extends Container implements IAnimatable {\n\n    private mapModel: MapModel;\n\n    private deltaTime: number;\n    private scaleChoice: number;\n    private angleChoice: number;\n\n    constructor(scene: Scene) {\n        super(scene);\n\n        this.mapModel = new MapModel();\n\n        const img1: Image = this.scene.add.image(0, 0, \"monstersInit2\", \"choise\");\n        const img2: Image = this.scene.add.image(0, 0, \"monstersInit2\", \"choise\");\n        img2.rotation = Phaser.Math.DegToRad(45);\n\n        this.add([\n            img1,\n            img2\n        ]);\n        this.visible = false;\n    }\n\n    public activate(): void {\n        this.scene.game.events.addListener(MapEvents.CHOICE_SHOW, this.onShow, this);\n        this.scene.game.events.addListener(MapEvents.CHOICE_HIDE, this.onHide, this);\n        this.scene.game.events.addListener(MapEvents.CHOICE_RESET, this.onReset, this);\n    }\n\n    public deactivate(): void {\n        this.scene.game.events.removeListener(MapEvents.CHOICE_SHOW, this.onShow, this);\n        this.scene.game.events.removeListener(MapEvents.CHOICE_HIDE, this.onHide, this);\n        this.scene.game.events.removeListener(MapEvents.CHOICE_RESET, this.onReset, this);\n    }\n\n    public onUpdate(time: number): void {\n        this.deltaTime += time;\n        this.angleChoice++;\n\n        if (this.deltaTime >= 100) {\n            this.deltaTime %= 100;\n        }\n        this.scaleChoice = Math.cos(this.deltaTime * 4) * .25 + 1.1;\n        this.scaleX = this.scaleY = this.scaleChoice;\n        this.rotation = Phaser.Math.DegToRad(this.angleChoice);\n    }\n\n    private init(): void {\n        this.deltaTime = 0;\n        this.angleChoice = 0;\n        this.visible = true;\n        this.scaleX = this.scaleY = this.scaleChoice;\n        EnterFrameManager.add(this);\n    }\n\n    private free(): void {\n        this.visible = false;\n        EnterFrameManager.remove(this);\n    }\n\n    private onShow(position: IPosition): void {\n        this.x = position.x;\n        this.y = position.y;\n        this.init();\n        this.scene.sound.play(\"Choice\", { volume: GameDataModel.volumeSounds });\n    }\n\n    private onHide(tile: ITile): void {\n        this.free();\n        this.mapModel.isGreen = false;\n        this.mapModel.isMagic = false;\n        this.mapModel.isKill = false;\n\n        if (tile.x > -1 && tile.y > -1) {\n            this.scene.game.events.emit(CursorEvents.RESET);\n        }\n    }\n\n    private onReset(): void {\n        const tile: ITile = {\n            x: -1,\n            y: -1\n        };\n        const n: number = this.mapModel.allMonsters.length;\n\n        // ищем выбранного монстра\n        for (let i: number = 0; i < n; i++) {\n            if (this.mapModel.allMonsters[i].select) {\n                tile.y = MapModel.toTile(this.mapModel.allMonsters[i].y);\n                tile.x = MapModel.toTile(this.mapModel.allMonsters[i].x);\n                break;\n            }\n        }\n        this.onHide(tile);\n    }\n}","import { BitmapText, Container, Scene, Tween } from \"../../exports\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\nimport { MapModel } from \"../models/MapModel\";\nimport { MapEvents } from \"../events/MapEvents\";\nimport { IMapCellData } from \"../interfaces/IMapCellData\";\n\nexport class CostPerMonster extends Container {\n\n    private static DIASPPEAR_DURATION: number = 1000;\n\n    private componentPool: ComponentPool = new ComponentPool();\n\n    private tf: BitmapText;\n    private tween: Tween;\n\n    constructor(scene: Scene) {\n        super(scene);\n\n        // ! we need change the font aivaGold to aivaBlue\n        this.tf = this.scene.add.bitmapText(0, 0, \"aivaGold\", \"\", 60).setOrigin(.5);\n        this.add(this.tf);\n        // this.tf.tint = 0x00FFFF;\n    }\n\n    public init(tileX: number, tileY: number, txt: string, color: string): void {\n        // устанавливаем графический образ\n        this.x = MapModel.toPix(tileX);\n        this.y = MapModel.toPix(tileY);\n\n        this.tf.text = txt;\n        this.scaleX = this.scaleY = 1;\n\n        this.tween = this.scene.add.tween({\n            targets: this,\n            scaleX: .3,\n            scaleY: .3,\n            duration: CostPerMonster.DIASPPEAR_DURATION,\n            onComplete: () => {\n                const mapCellData: IMapCellData = {\n                    tileX: MapModel.toTile(this.x),\n                    tileY: MapModel.toTile(this.y),\n                    color: color\n                };\n                this.scene.game.events.emit(MapEvents.ADD_STARS, mapCellData);\n                this.free();\n            }\n        });\n    }\n\n    private removeTweens(): void {\n        if (this.tween) {\n            this.tween.remove();\n        }\n    }\n\n    public free(): void {\n        this.removeTweens();\n        this.componentPool.dispose(this);\n        this.parentContainer.remove(this);\n    }\n}","import { CursorEvents } from \"../../cursor/events/CursorEvents\";\nimport { Cursour } from \"../../cursor/views/Cursour\";\nimport { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { Container, Graphics, Image, Pointer } from \"../../exports\";\nimport { MonsterColor, MonsterConstants } from \"../../monsters/constants\";\nimport { IMonsterData } from \"../../monsters/interfaces/IMonsterData\";\nimport { Monster } from \"../../monsters/views/Monster\";\nimport { Spark } from \"../../monsters/views/Spark\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\nimport { SeasonsUtils } from \"../../utils/SeasonsUtils\";\nimport { MapEvents } from \"../events/MapEvents\";\nimport { IMapCellData } from \"../interfaces/IMapCellData\";\nimport { MapModel } from \"../models/MapModel\";\nimport { LinefinderUtils } from \"../utils/LinefinderUtils\";\nimport { PathfinderUtils } from \"../utils/PathfinderUtils\";\nimport { Choice } from \"./Choice\";\nimport { CostPerMonster } from \"./CostPerMonster\";\nimport { MonsterNavigator } from \"./MonsterNavigator\";\nimport { Star } from \"./Star\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\n\nexport class MapView extends Container {\n\n    private mapModel: MapModel;\n    private gameProcessModel: GameProcessModel;\n    private pathfinder: PathfinderUtils;\n    private linefinder: LinefinderUtils;\n    private componentPool: ComponentPool;\n\n    private layerBackground: Container;\n    private layerCell: Graphics;\n    private layerMonsters: Container;\n    private layerObjects: Container;\n    private layerChoice: Container;\n\n    private vBackgroundCells: Image[];\n\n    private _navigator: MonsterNavigator;\n\n    private choice: Choice;\n    private cursor: Cursour;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.mapModel = new MapModel();\n        this.gameProcessModel = new GameProcessModel(this.scene.game);\n        this.linefinder = new LinefinderUtils(this.scene.game);\n        this.pathfinder = new PathfinderUtils();\n        this.componentPool = new ComponentPool();\n\n        this.layerBackground = this.scene.add.container(0, 0);\n        this.layerCell = this.scene.add.graphics();\n        this.layerChoice = this.scene.add.container(0, 0);\n        this.layerObjects = this.scene.add.container(0, 0);\n        this.layerMonsters = this.scene.add.container(0, 0);\n\n        this.add([\n            this.layerCell,\n            this.layerBackground,\n            this.layerChoice,\n            this.layerMonsters,\n            this.layerObjects\n        ]);\n\n        this.choice = new Choice(scene);\n        this.layerChoice.add(this.choice);\n\n        this._navigator = new MonsterNavigator(this.scene);\n        this._navigator.x = this.layerBackground.x;\n        this._navigator.y = this.layerBackground.y;\n        this.add(this._navigator);\n\n        this.cursor = new Cursour(scene);\n        this.add(this.cursor);\n\n        this.drawMap();\n    }\n\n    public onUpdateDepths(): void {\n        this.layerMonsters.sort(\"depth\");\n    }\n\n    public activate(): void {\n        this.scene.game.events.addListener(MapEvents.CHANGE_VISIBILITY_MAP_CELLS, this.changeVisibilityCell, this);\n        this.scene.game.events.addListener(MapEvents.ADD_MONSTER, this.addMonster, this);\n        this.scene.game.events.addListener(MapEvents.UPDATE_DEPTHS, this.onUpdateDepths, this);\n        this.scene.game.events.addListener(MapEvents.ADD_COST_MONSTER, this.onAddCostOfMonster, this);\n        this.scene.game.events.addListener(MapEvents.ADD_STARS, this.onAddStars, this);\n\n        this.layerBackground.setInteractive(\n            new Phaser.Geom.Rectangle(\n                0,\n                0,\n                MapModel.MAP_WIDTH_MAX * MapModel.MAP_CELL_SIZE,\n                MapModel.MAP_HEIGHT_MAX * MapModel.MAP_CELL_SIZE\n            ),\n            Phaser.Geom.Rectangle.Contains\n        );\n        this.layerBackground.on(\"pointerdown\", this.onMapDown, this);\n        this.layerBackground.on(\"pointerup\", this.onMapUp, this);\n\n        this.choice.activate();\n        this.cursor.activate();\n    }\n\n    public deactivate(): void {\n        this.scene.game.events.removeListener(MapEvents.CHANGE_VISIBILITY_MAP_CELLS, this.changeVisibilityCell, this);\n        this.scene.game.events.removeListener(MapEvents.ADD_MONSTER, this.addMonster, this);\n        this.scene.game.events.removeListener(MapEvents.UPDATE_DEPTHS, this.onUpdateDepths, this);\n        this.scene.game.events.removeListener(MapEvents.ADD_COST_MONSTER, this.onAddCostOfMonster, this);\n        this.scene.game.events.removeListener(MapEvents.ADD_STARS, this.onAddStars, this);\n\n        this.layerBackground.disableInteractive();\n        this.layerBackground.off(\"pointerdown\", this.onMapDown, this);\n        this.layerBackground.off(\"pointerup\", this.onMapUp, this);\n\n        this.choice.deactivate();\n        this.cursor.deactivate();\n    }\n\n    // создание растровой карты\n    private drawMap(): void {\n        const hitArea: Graphics = this.scene.add.graphics();\n        hitArea.fillStyle(0xFF00FF, 0);\n        hitArea.fillRect(\n            0,\n            0,\n            MapModel.MAP_WIDTH_MAX * MapModel.MAP_CELL_SIZE,\n            MapModel.MAP_HEIGHT_MAX * MapModel.MAP_CELL_SIZE\n        );\n\n        this.layerBackground.add(hitArea);\n\n        this.vBackgroundCells = [];\n\n        const seasonName: string = SeasonsUtils.getSeasonNameByID(GameDataModel.seasonId);\n\n        for (let ay: number = 0; ay <= MapModel.MAP_HEIGHT_MAX; ay++) {\n            for (let ax: number = 0; ax <= MapModel.MAP_WIDTH_MAX; ax++) {\n                const wood: Image = this.scene.add.image(\n                    MapModel.MAP_CELL_SIZE * ay,\n                    MapModel.MAP_CELL_SIZE * ax,\n                    \"backgrounds\",\n                    \"cell\" + seasonName\n                );\n                this.layerBackground.add(wood);\n                this.vBackgroundCells.push(wood);\n            }\n        }\n    }\n\n    public drawCell(): void {\n        this.layerCell.clear();\n        const color: number = SeasonsUtils.getColorSeasonByID(GameDataModel.seasonId);\n        this.layerCell.fillStyle(color, .5);\n        for (let ay: number = 0; ay < MapModel.MAP_HEIGHT_MAX; ay++) {\n            for (let ax: number = 0; ax < MapModel.MAP_WIDTH_MAX; ax++) {\n                if ((ay * MapModel.MAP_WIDTH_MAX + ax) % 2 === 0) {\n                    this.layerCell.fillRect(\n                        MapModel.MAP_CELL_SIZE * ax,\n                        MapModel.MAP_CELL_SIZE * ay,\n                        MapModel.MAP_CELL_SIZE,\n                        MapModel.MAP_CELL_SIZE\n                    );\n                }\n            }\n        }\n        this.changeVisibilityCell();\n    }\n\n    private changeVisibilityCell(): void {\n        this.layerCell.visible = GameDataModel.playerData.isVisibilityCells;\n    }\n\n    public redrawMap(): void {\n        const seasonName: string = SeasonsUtils.getSeasonNameByID(GameDataModel.seasonId);\n        const countCells: number = this.vBackgroundCells.length;\n\n        for (let i: number = 0; i < countCells; i++) {\n            this.vBackgroundCells[i].frame = this.scene.sys.textures.getFrame(\"backgrounds\", \"cell\" + seasonName);\n        }\n    }\n\n    public loadMonsters(): void {\n        // this.isLoadMonsters = true;\n        this.gameProcessModel.addingMonsters = this.gameProcessModel.addingInRoom;\n\n        for (let i: number = 0; i < this.mapModel.mapColor.length; i++) {\n            for (let j: number = 0; j < this.mapModel.mapColor[i].length; j++) {\n                if (this.mapModel.mapColor[i][j] !== \"\") {\n                    // добавляем монстра\n                    const strMonster: string = this.mapModel.mapColor[i][j];\n                    const monster: Monster = this.getMonster(strMonster);\n\n                    // todo: relocate this in map model in takePlace()\n                    this.mapModel.mapMask[i][j] = 1;\n                    this.mapModel.mapMonsters[i][j] = monster;\n\n                    monster.init(j, i);\n                    this.layerMonsters.add(monster);\n\n                    // если пустых ячеек больше нет...\n                    if (this.mapModel.mapIsFull) {\n                        this.scene.game.events.emit(GameProcessEvents.END_GAME);\n                    }\n                }\n            }\n        }\n        this.gameProcessModel.addingMonsters = false;\n        this.gameProcessModel.dontMove = this.gameProcessModel.dontMoveInRoom;\n    }\n\n    public addMonster(): void {\n        if (!this.gameProcessModel.gameOver) {\n            let j: number;\n            let i: number;\n            // Ищем свободную позицию на игровом поле\n            while (true) {\n                j = Phaser.Math.Between(0, MapModel.MAP_WIDTH_MAX_INDEX);\n                i = Phaser.Math.Between(0, MapModel.MAP_HEIGHT_MAX_INDEX);\n\n                if (this.mapModel.mapMask[i][j] === 0) {\n                    break;\n                }\n            }\n\n            // добавляем монстра\n            const strMonster: string = this.gameProcessModel.arrNextMonsters[this.gameProcessModel.monsterInGameTotal - this.gameProcessModel.monsterInGame];\n            const monster: Monster = this.getMonster(strMonster);\n\n            this.mapModel.mapMask[i][j] = 1;\n            this.mapModel.mapColor[i][j] = strMonster;\n            this.mapModel.mapMonsters[i][j] = monster;\n\n            monster.init(j, i);\n            this.layerMonsters.add(monster);\n\n            this.linefinder.searchMain(i, j, monster.color, monster.min, monster.cost);\n        }\n    }\n\n    private getMonster(color: string): Monster {\n        const monster: Monster = this.componentPool.get(Monster, this.scene);\n        const model: IMonsterData = (MonsterConstants as any)[color];\n        monster.setMonsterData(model);\n        return monster;\n    }\n\n    private onMapDown(pointer: Pointer, pointerX: number, pointerY: number): void {\n\n        const indexI: number = MapModel.toTile(pointerY);\n        const indexJ: number = MapModel.toTile(pointerX);\n\n        if (MapModel.inMap(indexI, indexJ)) {\n            this.mapModel.pointCursour.x = indexJ;\n            this.mapModel.pointCursour.y = indexI;\n            this.scene.game.events.emit(CursorEvents.CHANGE_POSITION);\n\n            if (this.mapModel.isGreen) {\n                if (this.mapModel.mapMask[indexI][indexJ] > 0\n                    && this.mapModel.mapColor[indexI][indexJ] !== MonsterColor.GREEN) {\n\n                    this.mapModel.isMagic = true;\n\n                    this.mapModel.pointMagic.x = indexJ;\n                    this.mapModel.pointMagic.y = indexI;\n\n                    this.scene.game.events.emit(CursorEvents.RESET);\n                }\n            }\n        }\n    }\n\n    private onMapUp(pointer: Pointer, pointerX: number, pointerY: number): void {\n        const indexI: number = MapModel.toTile(pointerY);\n        const indexJ: number = MapModel.toTile(pointerX);\n\n        if (indexI < 0 || indexJ < 0) {\n            return;\n        }\n        if (MapModel.inMap(indexI, indexJ) && this.mapModel.mapMask[indexI][indexJ] === -1) {\n            return;\n        }\n        if (!this.gameProcessModel.gameOver) {\n            // клик по земле\n            if (MapModel.inMap(indexI, indexJ) && this.mapModel.mapMask[indexI][indexJ] === 1) {\n                if (!this.mapModel.isKill) {\n                    this.mapModel.mapMonsters[indexI][indexJ].onClickHandler();\n                    return;\n                } else {\n                    if (indexI === this.mapModel.pointMagic.y && indexJ === this.mapModel.pointMagic.x) {\n                        this.mapModel.aimMonster = this.mapModel.mapMonsters[indexI][indexJ];\n                        this.freeCell(MapModel.toTile(this.mapModel.aimMonster.y), MapModel.toTile(this.mapModel.aimMonster.x), this.mapModel.aimMonster.cost);\n                        this.mapModel.isKill = false;\n                    }\n                }\n            }\n            this.onOutHandler();\n\n            if (this.mapModel.activeMonster) {\n                // если двигаться монстрам не запрещено\n                if (!this.gameProcessModel.dontMove) {\n                    if (MapModel.inMap(indexI, indexJ)) {\n                        if (this.mapModel.mapMask[indexI][indexJ] === 0) {\n                            this.mapModel.pointEnd.y = indexI;\n                            this.mapModel.pointEnd.x = indexJ;\n\n                            this.scene.game.events.emit(CursorEvents.RESET);\n                        } else {\n                            return;\n                        }\n                    } else {\n                        return;\n                    }\n\n                    if (this.gameProcessModel.isTutorial) {\n                        this.gameProcessModel.turns++;\n                    }\n                    this.pathfinder.setStartAndEndPoints(this.mapModel.pointStart, this.mapModel.pointEnd);\n                    switch (this.mapModel.activeMonster.color) {\n                        case MonsterColor.BLUE:\n                            this.mapModel.activeMonster.portal();\n                            break;\n\n                        case MonsterColor.GREEN:\n                            this.mapModel.activeMonster.setWay(this.pathfinder.getWay(this.mapModel.activeMonster.typePathfinder, this.mapModel.activeMonster.maxTurn));\n                            if (this.mapModel.aimMonsterData.isAimed) {\n                                if (this.mapModel.activeMonster == null) {\n                                    this.killMonster(\n                                        this.mapModel.aimMonsterData.position.y,\n                                        this.mapModel.aimMonsterData.position.x,\n                                        this.mapModel.aimMonsterData.cost\n                                    );\n                                } else {\n                                    this.keepCell(\n                                        this.mapModel.aimMonsterData.position.y,\n                                        this.mapModel.aimMonsterData.position.x\n                                    );\n                                }\n                            }\n                            break;\n\n                        default:\n                            this.mapModel.activeMonster.setWay(this.pathfinder.getWay(this.mapModel.activeMonster.typePathfinder, this.mapModel.activeMonster.maxTurn));\n                    }\n                }\n            } else {\n                return;\n            }\n        }\n    }\n\n    private onOutHandler(): void {\n        if (this.mapModel.isGreen) {\n            this.mapModel.isKill = false;\n            this.mapModel.isMagic = false;\n            this.scene.game.events.emit(CursorEvents.RESET);\n        }\n    }\n\n    public freeCell(i: number, j: number, cost: number): void {\n        this.mapModel.mapMask[i][j] = 0;\n\n        this.mapModel.aimMonsterData.isAimed = true;\n        this.mapModel.aimMonsterData.position.x = j;\n        this.mapModel.aimMonsterData.position.y = i;\n        this.mapModel.aimMonsterData.cost = cost;\n    }\n\n    // отпускаем монстра, на которого нацелился шаман\n    public keepCell(i: number, j: number): void {\n        this.mapModel.mapMask[i][j] = 1;\n        this.mapModel.aimMonsterData.isAimed = false;\n    }\n\n    // убиваем монстра, на которого нацелился шаман\n    public killMonster(i: number, j: number, cost: number): void {\n\n        const mapCellData: IMapCellData = {\n            tileX: j,\n            tileY: i,\n            color: ColorIDsUtils.getCharColorFromColor(this.mapModel.mapColor[i][j]),\n            cost: `+${cost}`\n        }\n        this.onAddCostOfMonster(mapCellData);\n\n        this.mapModel.aimMonsterData.isAimed = false;\n\n        this.mapModel.mapMask[i][j] = 0;\n        this.mapModel.mapColor[i][j] = \"\";\n\n        this.mapModel.mapMonsters[i][j].outGame();\n        this.mapModel.mapMonsters[i][j] = null;\n\n        // молния\n        const spark: Spark = this.componentPool.get(Spark, this.scene);\n        spark.init(MapModel.toPix(j), MapModel.toPix(i));\n        this.layerObjects.add(spark);\n\n        if (this.scene.game.cache.audio.get(\"Spark\")) {\n            this.scene.sound.play(\"Spark\", { volume: GameDataModel.volumeSounds });\n        }\n        this.gameProcessModel.score += cost;\n    }\n\n    private onAddCostOfMonster(mapCellData: IMapCellData): void {\n        const costPerMonster: CostPerMonster = this.componentPool.get(CostPerMonster, this.scene);\n        costPerMonster.init(mapCellData.tileX, mapCellData.tileY, mapCellData.cost, mapCellData.color);\n        this.layerObjects.add(costPerMonster);\n    }\n\n    private onAddStars(mapCellData: IMapCellData): void {\n        const particlesCountMIN: number = 8;\n        const particlesCountMAX: number = 15;\n\n        const particlesScaleMIN: number = .3;\n        const particlesScaleMAX: number = 1;\n\n        const countStars: number = Phaser.Math.Between(particlesCountMIN, particlesCountMAX);\n\n        for (var i: number = 0; i < countStars; i++) {\n            const star: Star = this.componentPool.get(Star, this.scene);\n            star.init(MapModel.toPix(mapCellData.tileX), MapModel.toPix(mapCellData.tileY), particlesScaleMAX * Math.random() + particlesScaleMIN);\n            this.layerObjects.add(star);\n        }\n\n        if (mapCellData.color === GameDataModel.playerData.monster) {\n            this.scene.sound.removeByKey(\"Bonus\");\n            this.scene.sound.play(\"Bonus\", { volume: GameDataModel.volumeSounds });\n        } else {\n            this.scene.sound.removeByKey(\"Bell\");\n            this.scene.sound.play(\"Bell\", { volume: GameDataModel.volumeSounds });\n        }\n    }\n\n    public get navigator(): MonsterNavigator {\n        return this._navigator;\n    }\n}","import { Container, Image, Point, Scene, Tween } from \"../../exports\";\nimport { MonsterColor } from \"../../monsters/constants\";\nimport { Monster } from \"../../monsters/views/Monster\";\nimport { TutorialEvents } from \"../../panels/events/TutorialEvents\";\nimport { MapModel } from \"../models/MapModel\";\nimport { PathfinderUtils } from \"../utils/PathfinderUtils\";\n\nexport class MonsterNavigator extends Container {\n\n    private static instance: MonsterNavigator;\n\n    private pathfinder: PathfinderUtils = new PathfinderUtils();\n\n    private targetMonster: Monster;\n    private imgStartPoint: Image;\n    private imgStopPoint: Image;\n    private wayPoints: Image[];\n\n    private pointEnd: Point;\n    private way: Point[];\n\n    private tweens: Tween[] = [];\n\n    constructor(scene: Scene) {\n        super(scene);\n\n        if (!MonsterNavigator.instance) {\n            this.imgStartPoint = this.scene.add.image(0, 0, \"ui\", \"pointBegan\");\n            this.imgStopPoint = this.scene.add.image(0, 0, \"ui\", \"pointEnd\");\n            this.wayPoints = [];\n\n            this.add([\n                this.imgStartPoint,\n                this.imgStopPoint\n            ]);\n\n            this.hide();\n\n            MonsterNavigator.instance = this;\n        }\n        return MonsterNavigator.instance;\n    }\n\n    public init(targetObj: Monster, pointEnd: Point): void {\n        this.hide();\n\n        this.targetMonster = targetObj;\n        this.pointEnd = pointEnd;\n\n        this.imgStopPoint.y = MapModel.toPix(this.pointEnd.y);\n        this.imgStopPoint.x = MapModel.toPix(this.pointEnd.x);\n\n        this.scene.game.events.addListener(TutorialEvents.NAVIGATOR_SHOW, this.show, this);\n        this.scene.game.events.addListener(TutorialEvents.NAVIGATOR_HIDE, this.hide, this);\n    }\n\n    public free(): void {\n        this.reset();\n        this.scene.game.events.removeListener(TutorialEvents.NAVIGATOR_SHOW, this.show, this);\n        this.scene.game.events.removeListener(TutorialEvents.NAVIGATOR_HIDE, this.hide, this);\n    }\n\n    public show(monster: Monster): void {\n        if (this.targetMonster && this.targetMonster === monster && !this.targetMonster.isFree) {\n            this.imgStartPoint.visible = true;\n            this.imgStopPoint.visible = true;\n\n            this.refreshWay();\n            this.addTweenAnimation(this.imgStartPoint);\n            this.addTweenAnimation(this.imgStopPoint);\n        }\n    }\n\n    public hide(): void {\n        this.imgStartPoint.scale = 1;\n        this.imgStopPoint.scale = 1;\n\n        this.imgStartPoint.visible = false;\n        this.imgStopPoint.visible = false;\n\n        this.clear();\n    }\n\n    public reset(): void {\n        this.hide();\n        this.targetMonster = null;\n    }\n\n    public refreshWay(): void {\n        this.clear();\n\n        this.pathfinder.setStartAndEndPoints(this.targetMonster.point, this.pointEnd);\n        this.way = this.pathfinder.getWay(this.targetMonster.typePathfinder, this.targetMonster.maxTurn);\n\n        this.imgStartPoint.x = MapModel.toPix(this.targetMonster.point.x);\n        this.imgStartPoint.y = MapModel.toPix(this.targetMonster.point.y);\n\n        if (this.targetMonster.x === this.imgStopPoint.x && this.targetMonster.y === this.imgStopPoint.y) {\n            this.imgStartPoint.visible = false;\n            this.imgStopPoint.visible = false;\n            return;\n        } else {\n            this.imgStartPoint.visible = true;\n            this.imgStopPoint.visible = true;\n        }\n\n        if (this.targetMonster.color !== MonsterColor.BLUE) {\n            const lengthWay: number = this.way.length;\n            if (lengthWay > 1) {\n                for (let i: number = 1; i < lengthWay - 1; i++) {\n                    const pointWay: Image = this.scene.add.image(0, 0, \"ui\", \"pointWay\");\n                    pointWay.x = MapModel.toPix(this.way[i].x);\n                    pointWay.y = MapModel.toPix(this.way[i].y);\n                    this.wayPoints.push(pointWay);\n                    this.add(pointWay);\n                }\n            }\n        }\n        this.add(this.imgStartPoint);\n    }\n\n    private clear(): void {\n        const countPointsWay: number = this.wayPoints.length;\n        for (let i: number = 0; i < countPointsWay; i++) {\n            this.remove(this.wayPoints[i]);\n        }\n        this.wayPoints.length = 0;\n\n        this.tweens.forEach((tween: Tween) => {\n            tween.stop();\n            tween.remove();\n        });\n        this.tweens.length = 0;\n    }\n\n    private addTweenAnimation(image: Image): void {\n        image.setScale(1);\n        this.tweens.push(this.scene.add.tween({\n            targets: image,\n            scaleX: 1.2,\n            scaleY: 1.2,\n            duration: 500,\n            loop: -1,\n            yoyo: true\n        }));\n    }\n}","import { Scene } from \"phaser\";\nimport { Color, Container, Image, Tween, Vector2 } from \"../../exports\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\n\nexport class Star extends Container {\n\n    private static readonly POWER: number = 50;\n\n    private componentPool: ComponentPool;\n    private sprite: Image;\n\n    private color: Color;\n    private vector: Vector2;\n    private tween: Tween;\n\n    private speed: number;\n    \n    constructor(scene: Scene) {\n        super(scene);\n        this.componentPool = new ComponentPool();\n        this.color = new Color();\n        this.vector = new Vector2();\n        this.sprite = this.scene.add.image(0, 0, \"monstersInit3\", \"particle0\");\n        this.add(this.sprite);\n    }\n\n    public init(posX: number, posY: number, scale: number, power: number = 1): void {\n        // устанавливаем графический образ\n        this.x = posX;\n        this.y = posY;\n\n        this.sprite.x = 0;\n        this.sprite.y = 0;\n\n        this.sprite.alpha = 0;\n        this.sprite.scaleX = this.sprite.scaleY = scale;\n\n        this.sprite.setTexture(\"monstersInit3\", `particle${Phaser.Math.Between(0, 2)}`);\n\n        var arrColors: number[] = [];\n        arrColors.push(255 * Math.random()); // red\n        arrColors.push(255 * Math.random()); // green\n        arrColors.push(255 * Math.random()); // blue\n\n        var index: number = 0;\n        var max: number = arrColors[index];\n        if (arrColors[1] > max) {\n            max = arrColors[1];\n            index = 1;\n        }\n        if (arrColors[2] > max) {\n            max = arrColors[2];\n            index = 2;\n        }\n        arrColors[index] = 254;\n\n        this.color.setTo(arrColors[0], arrColors[1], arrColors[2]);\n        this.sprite.tint = this.color.color;\n\n        const startSpeed: number = (power - (1 - scale)) * Star.POWER;\n        this.speed = Phaser.Math.Between(startSpeed * .8, startSpeed * 1.2);\n        this.angle = Phaser.Math.DegToRad(360 * Math.random());\n\n        this.vector.setToPolar(this.angle, this.speed);\n\n        this.tween = this.scene.add.tween({\n            targets: this.sprite,\n            x: this.vector.x,\n            y: this.vector.y,\n            alpha: 1,\n            duration: 500 * Math.random() + 250,\n            ease: Phaser.Math.Easing.Sine.Out,\n            onComplete: () => {\n                this.free();\n            }\n        });\n    }\n\n    private removeTweens(): void {\n        if (this.tween) {\n            this.tween.remove();\n        }\n    }\n\n    public free(): void {\n        this.removeTweens();\n        this.componentPool.dispose(this);\n        this.parentContainer.remove(this);\n    }\n}","import { Container, Scene } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { BtnLarge } from \"../../ui/views/BtnLarge\";\nimport { SoundToggle } from \"../../ui/views/SoundToggle\";\nimport { ContainerWithButtons } from \"../views/ContainerWithButtons\";\nimport { Button } from \"../../ui/views/Button\";\nimport { IInteractiveUI } from \"../../ui/interfaces/IInteractiveUI\";\n\nexport class MenuButtonsBuilder {\n\n    // создает большую активную кнопку\n    public static createBtnLargeActive(\n        scene: Scene,\n        menu: ContainerWithButtons,\n        menuButtonsList: IInteractiveUI[],\n        iconColor: string = \"u\",\n        command: () => void\n    ): void {\n\n        const btn: BtnLarge = new BtnLarge(scene, iconColor, \"\", command);\n        menu.add(btn);\n        menuButtonsList.push(btn);\n    }\n\n    // создает большую неактивную кнопку\n    public static createBtnLargePassive(\n        scene: BaseScene,\n        menu: ContainerWithButtons,\n        menuButtonsList: IInteractiveUI[],\n        toggleId: string,\n        iconColor: string = \"u\"\n    ): SoundToggle {\n\n        const btn: SoundToggle = new SoundToggle(scene, toggleId, iconColor);\n        menu.add(btn);\n        menuButtonsList.push(btn);\n        return btn;\n    }\n\n    // создает маленькую кнопку\n    public static createBtnSmall(\n        scene: BaseScene,\n        menu: ContainerWithButtons,\n        menuButtonsList: IInteractiveUI[],\n        command: () => void\n    ): Button {\n\n        const btn: Button = new Button(scene, \"btnPink\", \"\", command);\n        btn.addLabel(\"\", \"aivaStroke\", 36, 0, -12);\n        btn.x = scene.gameWidth / 2;\n        btn.y = 900;\n        menu.add(btn);\n        menuButtonsList.push(btn);\n        return btn;\n    }\n}","export const MenuConstants = {\n    GAP_BETWEEN_BUTTONS: 125,\n    START_BUTTONS_POSITION_Y: 315,\n\n    subMenus: {\n        MAIN: 0,\n        OPTIONS: 1,\n        SCORES: 2\n    },\n\n    mainMenu: {\n        CONTINUE_GAME: 0,\n        NEW_GAME: 1,\n        TUTORIAL: 2,\n        SCORES: 3,\n        OPTIONS: 4\n    },\n\n    optionsMenu: {\n        SOUNDS: 0,\n        MUSIC: 1,\n        LANGUAGE: 2,\n        POLICY: 3,\n        BACK: 4\n    }\n};","export const MenuEvents = {\n    RESET_MENU_BUTTONS: \"MenuEvents.RESET_MENU_BUTTONS\",\n    CHANGE_TITLE: \"MenuEvents.CHANGE_TITLE\",\n    HIDE_SUBMENU: \"MenuEvents.HIDE_SUBMENU\",\n    SHOW_SUBMENU: \"MenuEvents.SHOW_SUBMENU\",\n    MUTE_SOUNDS: \"MenuEvents.MUTE_SOUNDS\"\n};","import { Game } from \"../../exports\";\nimport { IInteractiveUI } from \"../../ui/interfaces/IInteractiveUI\";\nimport { MenuConstants } from \"../constants\";\nimport { MenuEvents } from \"../events/MenuEvents\";\nimport { IResetButtonsVO } from \"../interfaces/IResetButtonsVO\";\n\nexport class ResetMenuManager {\n\n    private game: Game;\n\n    constructor(game: Game) {\n        this.game = game;\n    }\n\n    public init(): void {\n        this.game.events.addListener(MenuEvents.RESET_MENU_BUTTONS, this.onResetMenu, this);\n    }\n\n    public free(): void {\n        this.game.events.removeListener(MenuEvents.RESET_MENU_BUTTONS, this.onResetMenu, this);\n    }\n\n    private onResetMenu(data: IResetButtonsVO): void {\n        const countButtons: number = data.buttons.length - (data.odd || 0);\n\n        const range: number = +this.game.config.width - data.buttons[0].width;\n        const correction: number = data.buttons[0].width / 2;\n        const buttonsIndecies: number[] = this.getAllButtonsIndecies(countButtons);\n        \n        for (let indexButton: number = 0; indexButton < countButtons; indexButton++) {\n            \n            const indexButtonTemp: number = buttonsIndecies.splice(Phaser.Math.Between(0, buttonsIndecies.length - 1), 1)[0];\n            const button: IInteractiveUI = data.buttons[indexButtonTemp];\n            \n            data.menu.remove(button);\n            button.y = MenuConstants.GAP_BETWEEN_BUTTONS * indexButton + MenuConstants.START_BUTTONS_POSITION_Y;\n            button.x = range * Math.random() + correction;\n            data.menu.add(button);\n        }\n    }\n\n    private getAllButtonsIndecies(count: number): number[] {\n        const arr: number[] = [];\n        for (let i: number = 0; i < count; i++) {\n            arr.push(i);\n        }\n        return arr;\n    }\n}","import { Container } from \"../../exports\";\nimport { IInteractiveUI } from \"../../ui/interfaces/IInteractiveUI\";\nimport { Button } from \"../../ui/views/Button\";\nimport { ChangeVisibilityUtils } from \"../../utils/ChangeVisibilityUtils\";\n\nexport abstract class ContainerWithButtons extends Container {\n\n\tpublic arrButtons: IInteractiveUI[] = [];\n\n\tpublic init(): void {\n\t\tthis.language();\n\t\tthis.alpha = 0;\n\t\tChangeVisibilityUtils.show(this.scene, this, 500, () => this.addListeners());\n\t}\n\n\tprotected addListeners(): void {\n\t\tthis.arrButtons.forEach((button: Button) => {\n\t\t\tbutton.activate();\n\t\t});\n\t}\n\n\tprotected removeListeners(): void {\n\t\tthis.arrButtons.forEach((button: Button) => {\n\t\t\tbutton.deactivate();\n\t\t});\n\t}\n\n\tpublic free(): void {\n\t\tthis.removeListeners();\n\t}\n\n\tprotected abstract language(): void;\n}","import { Language } from \"../../content/Language\";\nimport { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { Button } from \"../../ui/views/Button\";\nimport { ButtonIconsUtils } from \"../../utils/ButtonIconsUtils\";\nimport { MenuButtonsBuilder } from \"../builders/MenuButtonsBuilder\";\nimport { MenuConstants } from \"../constants\";\nimport { MenuEvents } from \"../events/MenuEvents\";\nimport { IResetButtonsVO } from \"../interfaces/IResetButtonsVO\";\nimport { SubMenu } from \"./SubMenu\";\n\nexport class MainMenu extends SubMenu {\n\n    private isNewGame: boolean;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        // кнопки меню\n        this.createBtnLargeActive(\"p\", () => this.onContinueGame());\n        this.createBtnLargeActive(\"d\", () => this.newGame());\n        this.createBtnLargeActive(\"b\", () => this.onStartTutorial());\n        this.createBtnLargeActive(\"r\", () => this.onOpenScores());\n        this.createBtnLargeActive(\"g\", () => this.onOpenOptions());\n    }\n\n    private createBtnLargeActive(iconColor: string, command: () => void): void {\n        MenuButtonsBuilder.createBtnLargeActive(\n            this.scene,\n            this,\n            this.arrButtons,\n            iconColor,\n            command\n        );\n    }\n\n    private onContinueGame(): void {\n        this.scene.game.events.emit(GameProcessEvents.CONTINUE_GAME);\n    }\n\n    private newGame(): void {\n        if (!this.isNewGame) {\n            this.arrButtons[MenuConstants.mainMenu.NEW_GAME].text = Language.getText(Language.ARE_YOU_SURE);\n            const iconName: string = ButtonIconsUtils.getIconAnimationName(\"d2\");\n            (this.arrButtons[MenuConstants.mainMenu.NEW_GAME] as Button).setIcon(iconName);\n            this.isNewGame = true;\n        } else {\n            this.scene.game.events.emit(GameProcessEvents.STAT_NEW_GAME);\n        }\n    }\n\n    private onStartTutorial(): void {\n        this.scene.game.events.emit(GameProcessEvents.START_TUTORIAL);\n    }\n\n    private onOpenScores(): void {\n        this.scene.game.events.emit(MenuEvents.SHOW_SUBMENU, MenuConstants.subMenus.SCORES);\n    }\n\n    private onOpenOptions(): void {\n        this.scene.game.events.emit(MenuEvents.SHOW_SUBMENU, MenuConstants.subMenus.OPTIONS);\n    }\n\n    // показать меню\n    public init(): void {\n        this.scene.game.events.emit(\n            MenuEvents.CHANGE_TITLE,\n            Language.getText(Language.MENU)\n        );\n        this.scene.game.events.emit(\n            MenuEvents.RESET_MENU_BUTTONS,\n            {\n                menu: this,\n                buttons: this.arrButtons\n            } as IResetButtonsVO\n        );\n\n        super.init();\n\n        this.arrButtons[MenuConstants.mainMenu.NEW_GAME].text = Language.getText(Language.NEW_GAME);\n        const iconName: string = ButtonIconsUtils.getIconAnimationName(\"d\");\n        (this.arrButtons[MenuConstants.mainMenu.NEW_GAME] as Button).setIcon(iconName);\n        this.isNewGame = false;\n    }\n\n    public language(): void {\n        this.arrButtons[MenuConstants.mainMenu.CONTINUE_GAME].text = Language.getText(Language.CONTINUE);\n        this.arrButtons[MenuConstants.mainMenu.NEW_GAME].text = Language.getText(Language.NEW_GAME);\n        this.arrButtons[MenuConstants.mainMenu.TUTORIAL].text = Language.getText(Language.TUTORIAL);\n        this.arrButtons[MenuConstants.mainMenu.SCORES].text = Language.getText(Language.SCORES);\n        this.arrButtons[MenuConstants.mainMenu.OPTIONS].text = Language.getText(Language.OPTIONS);\n    }\n}","import { Language } from \"../../content/Language\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { Button } from \"../../ui/views/Button\";\nimport { SoundToggle } from \"../../ui/views/SoundToggle\";\nimport { MenuButtonsBuilder } from \"../builders/MenuButtonsBuilder\";\nimport { MenuConstants } from \"../constants\";\nimport { MenuEvents } from \"../events/MenuEvents\";\nimport { IResetButtonsVO } from \"../interfaces/IResetButtonsVO\";\nimport { SubMenu } from \"./SubMenu\";\nimport { ButtonIconsUtils } from \"../../utils/ButtonIconsUtils\";\n\nexport class OptionsMenu extends SubMenu {\n\n    private readonly URL: string = \"https://play.google.com/store/apps/dev?id=8998397624813711389\";\n\n    protected scene: BaseScene;\n\n    private btnBack: Button;\n    private btnPlayMarket: Button;\n\n    public regulatorMusic: SoundToggle;\n    public regulatorSound: SoundToggle;\n\n    private isDarkEscape: boolean = false;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.regulatorSound = MenuButtonsBuilder.createBtnLargePassive(this.scene, this, this.arrButtons, SoundToggle.SOUNDS, \"o\");\n        this.regulatorMusic = MenuButtonsBuilder.createBtnLargePassive(this.scene, this, this.arrButtons, SoundToggle.MUSIC, \"y\");\n\n        MenuButtonsBuilder.createBtnLargeActive(this.scene, this, this.arrButtons, \"g\", () => this.switchLanguage());\n        MenuButtonsBuilder.createBtnLargeActive(this.scene, this, this.arrButtons, \"d3\", () => this.darkPolicy());\n\n        this.btnBack = MenuButtonsBuilder.createBtnSmall(this.scene, this, this.arrButtons, () => this.backToMainMenu());\n\n        this.btnPlayMarket = new Button(this.scene, \"playMarket\", \"\", () => this.goToTheAivaGames());\n        this.btnPlayMarket.x = this.scene.gameWidth / 2;\n        this.btnPlayMarket.y = this.btnBack.y - 100;\n        this.arrButtons.push(this.btnPlayMarket);\n        this.add(this.btnPlayMarket);\n    }\n\n    private backToMainMenu(): void {\n        this.scene.game.events.emit(\n            MenuEvents.HIDE_SUBMENU,\n            MenuConstants.subMenus.OPTIONS\n        );\n        this.scene.game.events.emit(\n            MenuEvents.SHOW_SUBMENU,\n            MenuConstants.subMenus.MAIN\n        );\n    }\n\n    // показать меню\n    public init(): void {\n        this.scene.game.events.emit(\n            MenuEvents.CHANGE_TITLE,\n            Language.getText(Language.OPTIONS)\n        );\n        this.scene.game.events.emit(\n            MenuEvents.HIDE_SUBMENU,\n            MenuConstants.subMenus.MAIN\n        );\n        this.scene.game.events.emit(\n            MenuEvents.RESET_MENU_BUTTONS,\n            {\n                menu: this,\n                buttons: this.arrButtons,\n                odd: 2\n            } as IResetButtonsVO\n        );\n\n        super.init();\n\n        // загружаем значения музыки и звуков\n        this.regulatorSound.loadVolume(GameDataModel.volumeSounds);\n        this.regulatorMusic.loadVolume(GameDataModel.volumeMusic);\n    }\n\n    public language(): void {\n        this.scene.game.events.emit(MenuEvents.CHANGE_TITLE, Language.getText(Language.OPTIONS));\n\n        this.arrButtons[MenuConstants.optionsMenu.SOUNDS].text = Language.getText(Language.SOUND);\n        this.arrButtons[MenuConstants.optionsMenu.MUSIC].text = Language.getText(Language.MUSIC);\n        this.arrButtons[MenuConstants.optionsMenu.LANGUAGE].text = Language.getText(Language.LANGUAGE);\n        this.switchDark();\n        this.arrButtons[MenuConstants.optionsMenu.BACK].text = Language.getText(Language.BACK);\n\n        const iconName: string = Language.current === \"rus\" ? \"g2\" : \"g3\";\n        const iconFullName: string = ButtonIconsUtils.getIconAnimationName(iconName);\n        (this.arrButtons[MenuConstants.optionsMenu.LANGUAGE] as Button).setIcon(iconFullName);\n    }\n\n    private switchLanguage(): void {\n        Language.current === \"eng\"\n            ? Language.setRussian()\n            : Language.setEnglish();\n\n        GameDataModel.language = Language.current;\n        this.scene.gameDataModel.saveData();\n        \n        this.language();\n    }\n\n    private darkPolicy(): void {\n        this.isDarkEscape = !this.isDarkEscape;\n\n        GameDataModel.policy = this.isDarkEscape;\n        this.scene.gameDataModel.saveData();\n\n        this.switchDark();\n    }\n\n    private switchDark(): void {\n        this.isDarkEscape = true;\n\n        if (GameDataModel.policy !== undefined) {\n            this.isDarkEscape = GameDataModel.policy;\n        }\n\n        const labelText: string = this.isDarkEscape\n            ? Language.getText(Language.IS_DARK_ESCAPE)\n            : Language.getText(Language.NOT_DARK_ESCAPE);\n        this.arrButtons[MenuConstants.optionsMenu.POLICY].text = labelText;\n\n        const iconName: string = this.isDarkEscape ? \"d3\" : \"d4\";\n        const iconFullName: string = ButtonIconsUtils.getIconAnimationName(iconName);\n        (this.arrButtons[MenuConstants.optionsMenu.POLICY] as Button).setIcon(iconFullName);\n    }\n\n    private goToTheAivaGames(): void {\n        if (this.URL !== \"\") {\n            window.open(this.URL);\n        }\n    }\n}","import { Language } from \"../../content/Language\";\nimport { Container } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { Achievement } from \"../../ui/components/Achievement\";\nimport { Button } from \"../../ui/views/Button\";\nimport { SubMenu } from \"./SubMenu\";\nimport { MenuButtonsBuilder } from \"../builders/MenuButtonsBuilder\";\nimport { MenuEvents } from \"../events/MenuEvents\";\nimport { MenuConstants } from \"../constants\";\nimport { IPopupOptions } from \"../../popups/interfaces/IPopupOptions\";\nimport { PopupConstants } from \"../../popups/constants\";\nimport { PopupEvents } from \"../../popups/events/PopupEvents\";\nimport { IScore } from \"../../data/interfaces/IScore\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\n\nexport class ScoreMenu extends SubMenu {\n\n    public static COUNT_POSITIONS: number = 6;\n\n    private readonly RANGE_Y: number = 7;\n    private readonly DELTA_Y_FOR_TABLE: number = 5;\n\n    protected scene: BaseScene;\n\n    private spriteTable: Container;\n    private table: Achievement[];\n\n    private btnTrash: Button;\n    private btnBack: Button;\n\n    private index: number;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        // кнопки меню\n        this.btnBack = MenuButtonsBuilder.createBtnSmall(this.scene, this, this.arrButtons, () => this.backToMainMenu());\n\n        this.createTable();\n\n        // кнопка очистки рекордов\n        this.btnTrash = new Button(this.scene, \"btnPinkPoint\", \"iconNo\", () => this.clearScores());\n        this.btnTrash.x = this.scene.gameWidth - 35;\n        this.btnTrash.y = 250;\n        this.add(this.btnTrash);\n    }\n\n    private backToMainMenu(): void {\n        for (let i: number = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n            this.table[i].free();\n        }\n        this.scene.game.events.emit(\n            MenuEvents.HIDE_SUBMENU,\n            MenuConstants.subMenus.SCORES\n        );\n        this.scene.game.events.emit(\n            MenuEvents.SHOW_SUBMENU,\n            MenuConstants.subMenus.MAIN\n        );\n    }\n\n    private clearScores(): void {\n        this.spriteTable.alpha = 0;\n\n        this.btnBack.deactivate();\n        this.btnTrash.deactivate();\n\n        const popupOptions: IPopupOptions = {\n            id: PopupConstants.ids.POPUP_APPROVE,\n            yes: () => this.clearScoresAnyway(),\n            no: () => this.init()\n        };\n        this.scene.game.events.emit(PopupEvents.SHOW_POPUP, popupOptions);\n    }\n\n    private clearScoresAnyway(): void {\n        // _universe.clearSharedObject();\n\n        for (let i: number = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n            this.table[i].free();\n        }\n        this.init();\n    }\n\n    private createTable(): void {\n        this.spriteTable = this.scene.add.container(this.scene.gameWidth * .5, this.scene.gameHeight * .5);\n        this.add(this.spriteTable);\n\n        let achievement: Achievement;\n\n        this.table = [];\n\n        for (let i: number = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n            achievement = new Achievement(this.scene);\n            this.spriteTable.add(achievement);\n            this.table.push(achievement);\n        }\n    }\n\n    // показать меню\n    public init(index: number = -1): void {\n        this.index = index;\n\n        this.btnBack.activate();\n        this.btnTrash.activate();\n\n        this.spriteTable.alpha = 1;\n\n        this.scene.game.events.emit(\n            MenuEvents.CHANGE_TITLE,\n            Language.getText(Language.SCORES)\n        );\n        this.scene.game.events.emit(\n            MenuEvents.HIDE_SUBMENU,\n            MenuConstants.subMenus.MAIN\n        );\n\n        super.init();\n\n        this.showScores(index);\n    }\n\n    // показать чемпионов\n    public showScores(indexActive: number = -1): void {\n        // var read: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // var i: number;\n        const index: number = 0;\n        // var arrScores: Array = [];\n\n        const state: string = \"active\";\n\n        // if (read.data.arrScores != null) {\n        //     arrScores = read.data.arrScores;\n        //     for (i = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n        //         if (arrScores[i] != undefined) {\n        //             color = state + arrScores[i][2].toString().toUpperCase() + this.round(i);\n        //             this.updateAchevement(i, index, color, arrScores[i][1], arrScores[i][0], indexActive);\n        //         } else {\n        //             this.updateAchevement(i, index);\n        //         }\n        //     }\n        // } else {\n        //     index = 0;\n        //     for (i = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n        //         this.updateAchevement(i, index);\n        //     }\n        // }\n        for (let i = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n            const score: IScore = GameDataModel.scores[i];\n            const color: string = score.monsterColor === \"unknown\"\n                ? score.monsterColor\n                : state + score.monsterColor.toUpperCase() + this.round(i);\n            this.updateAchevement(i, index, color, score.playerName, score.score, indexActive);\n        }\n        this.refreshPositionsTable();\n    }\n\n    private updateAchevement(\n        indexInTable: number,\n        index: number,\n        color: string = \"u\",\n        playerName: string = \"???\",\n        score: string = \"---\",\n        isActive: number = -1\n    ): void {\n        this.table[indexInTable].init(color, playerName, score, isActive === indexInTable);\n\n        let scale: number = 1 - Math.abs(indexInTable - index) * .1;\n        scale = scale < .7 ? .7 : scale;\n\n        this.table[indexInTable].scaleX = this.table[indexInTable].scaleY = scale;\n    }\n\n    private refreshPositionsTable(): void {\n        this.table[0].y = 0;\n\n        for (let i: number = 1; i < ScoreMenu.COUNT_POSITIONS; i++) {\n            this.table[i].x = 0;\n            this.table[i].y = this.table[i - 1].y + this.table[i - 1].height * .5 + this.table[i].height * .5 + this.RANGE_Y;\n        }\n        this.spriteTable.y = this.scene.gameWidth * .5 - this.spriteTable.height / 2 + this.DELTA_Y_FOR_TABLE;\n    }\n\n    private round(index: number): number {\n        index++;\n        index = index > 4 ? 4 : index;\n        return index;\n    }\n\n    public language(): void {\n        this.btnBack.text = Language.getText(Language.BACK);\n    }\n}","import { ContainerWithButtons } from \"./ContainerWithButtons\";\n\nexport class SubMenu extends ContainerWithButtons {\n\n    public hide(): void {\n        this.free();\n        this.alpha = 0;\n    }\n\n    public language(): void {\n\n    }\n}","import { Container, Image, BitmapText } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { MenuEvents } from \"../events/MenuEvents\";\n\nexport class TitleMenu extends Container {\n\n    private background: Image;\n    private tfTitle: BitmapText;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.background = this.scene.add.image(0, 0, \"ui\", \"panelBottom\");\n        this.background.setOrigin(.5, 0);\n        this.add(this.background);\n\n        this.tfTitle = this.scene.add.bitmapText(0, this.background.height / 5 * 2, \"aivaGold\", \"\", 65);\n        this.tfTitle.setOrigin(.5);\n        this.add(this.tfTitle);\n    }\n\n    public init(): void {\n        this.scene.game.events.addListener(MenuEvents.CHANGE_TITLE, this.onChangeTitle, this);\n    }\n\n    public free(): void {\n        this.scene.game.events.removeListener(MenuEvents.CHANGE_TITLE, this.onChangeTitle, this);\n    }\n\n    private onChangeTitle(txt: string): void {\n        this.tfTitle.text = txt;\n    }\n}","import { PathfinderUtils } from \"../map/utils/PathfinderUtils\";\n\nexport enum MonsterColor {\n    RED = \"RED\",\n    ORANGE = \"ORANGE\",\n    YELLOW = \"YELLOW\",\n    GREEN = \"GREEN\",\n    BLUE = \"BLUE\",\n    PURPLE = \"PURPLE\",\n    DARK = \"DARK\"\n}\n\nexport const MonsterConstants = {\n    RED: {\n        color: MonsterColor.RED,\n        colorChar: \"R\",\n        countInLineMin: 5,\n        costOne: 2,\n        typePathfinder: PathfinderUtils.TYPE_NORMAL,\n        pathfinderMaxTurns: PathfinderUtils.MAX_TURN\n    },\n    ORANGE: {\n        color: MonsterColor.ORANGE,\n        colorChar: \"O\",\n        countInLineMin: 5,\n        costOne: 1,\n        typePathfinder: PathfinderUtils.TYPE_NORMAL,\n        pathfinderMaxTurns: PathfinderUtils.MAX_TURN\n    },\n    YELLOW: {\n        color: MonsterColor.YELLOW,\n        colorChar: \"Y\",\n        countInLineMin: 4,\n        costOne: 1,\n        typePathfinder: PathfinderUtils.TYPE_NORMAL,\n        pathfinderMaxTurns: PathfinderUtils.MAX_TURN\n    },\n    GREEN: {\n        color: MonsterColor.GREEN,\n        colorChar: \"G\",\n        countInLineMin: 6,\n        costOne: 1,\n        typePathfinder: PathfinderUtils.TYPE_NORMAL,\n        pathfinderMaxTurns: PathfinderUtils.MAX_TURN\n    },\n    BLUE: {\n        color: MonsterColor.BLUE,\n        colorChar: \"B\",\n        countInLineMin: 5,\n        costOne: 1,\n        typePathfinder: PathfinderUtils.TYPE_NORMAL,\n        pathfinderMaxTurns: PathfinderUtils.MAX_TURN\n    },\n    PURPLE: {\n        color: MonsterColor.PURPLE,\n        colorChar: \"P\",\n        countInLineMin: 5,\n        costOne: 1,\n        typePathfinder: PathfinderUtils.TYPE_DIAGONAL,\n        pathfinderMaxTurns: PathfinderUtils.MAX_TURN\n    },\n    DARK: {\n        color: MonsterColor.DARK,\n        colorChar: \"D\",\n        countInLineMin: 4,\n        costOne: 0,\n        typePathfinder: PathfinderUtils.TYPE_DIAGONAL,\n        pathfinderMaxTurns: 2\n    }\n};","import { CursorEvents } from \"../../cursor/events/CursorEvents\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { Container, Point, Sprite, Vector2 } from \"../../exports\";\nimport { MapEvents } from \"../../map/events/MapEvents\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { LinefinderUtils } from \"../../map/utils/LinefinderUtils\";\nimport { TutorialEvents } from \"../../panels/events/TutorialEvents\";\nimport { IAnimatable } from \"../../scenes/interfaces/IAnimatable\";\nimport { EnterFrameManager } from \"../../scenes/managers/EnterFrameManager\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { AMath } from \"../../utils/AMath\";\nimport { MonsterColor } from \"../constants\";\nimport { IMonsterData } from \"../interfaces/IMonsterData\";\nimport { IPosition } from \"../interfaces/IPosition\";\nimport { ITile } from \"../interfaces/ITile\";\nimport { TutorialScene } from \"../../scenes/views/TutorialScene\";\n\nexport class Monster extends Container implements IAnimatable {\n\n\tprivate static INGAME: number = 1;\n\tprivate static OUT: number = 2;\n\tprivate static OVER: number = 3;\n\tprivate static OVER_STOP: number = 4;\n\tprivate static CLICK: number = 5;\n\tprivate static CLICK_STOP: number = 6;\n\tprivate static MOVE: number = 7;\n\tprivate static PORTAL_INVISIBLE: number = 8;\n\tprivate static PORTAL_VISIBLE: number = 9;\n\tprivate static OUTGAME: number = 10;\n\tprivate static INSULT: number = 11;\n\tprivate static ANIM_OUT: number = 12;\n\tprivate static ANIM_OVER: number = 13;\n\tprivate static ANIM_CLICK: number = 14;\n\tprivate static ABORT: number = 15;\n\tprivate static ESCAPE_STOP: number = 16;\n\tprivate static ESCAPE: number = 17;\n\n\tprivate static SPEED: number = 700;\n\tprivate static MOVE_ANIMATION_KOEF: number = 2.5;\n\n\tprivate static RADIUS: number = 130;\n\tprivate static COUNT_ANIMATIONS: number = 3;\n\n\tprivate mapModel: MapModel;\n\tprivate gameProcessModel: GameProcessModel;\n\tprivate linefinder: LinefinderUtils;\n\n\tprivate _state: number;\n\tprivate _isFree: boolean;\n\n\tprivate sprite: Sprite;\n\tprivate model: IMonsterData;\n\n\tprivate _typePathfinder: string;\n\n\tprivate _select: boolean;\n\tprivate _isWaiting: boolean;\n\tprivate _isOutGame: boolean;\n\tprivate _way: Point[] = [];\n\tprivate _move: boolean;\n\tprivate _step: number;\n\n\tprivate _point: Point;\n\tprivate vector: Vector2;\n\n\tprivate _wayX: number;\n\tprivate _wayY: number;\n\n\tprivate str: string;\n\tprivate str2: string;\n\tprivate str3: string;\n\tprivate fullID: string;\n\n\tprivate _depth: number;\n\n\tpublic animName: string;\n\n\tprivate numberOfAnim: number;\n\n\tconstructor(scene: BaseScene) {\n\t\tsuper(scene);\n\n\t\tthis.mapModel = new MapModel();\n\t\tthis.gameProcessModel = new GameProcessModel(this.scene.game);\n\t\tthis.linefinder = new LinefinderUtils(this.scene.game);\n\n\t\tthis.sprite = this.scene.add.sprite(0, 0, \"\");\n\n\t\tthis.vector = new Vector2();\n\t\tthis._point = new Point();\n\n\t\tthis.numberOfAnim = 1;\n\t}\n\n\tpublic setMonsterData(model: IMonsterData): void {\n\t\tthis.model = model;\n\t}\n\n\tpublic init(tileX: number, tileY: number): void {\n\t\tthis._move = false;\n\t\tthis._isFree = false;\n\t\tthis._select = false;\n\t\tthis._isWaiting = false;\n\t\tthis._isOutGame = false;\n\n\t\tthis.x = MapModel.toPix(tileX);\n\t\tthis.y = MapModel.toPix(tileY);\n\n\t\tthis._point.x = MapModel.toTile(this.x);\n\t\tthis._point.y = MapModel.toTile(this.y);\n\n\t\tthis._state = Monster.INGAME;\n\t\tthis.switchAnim(\"ingame\", false, 1.5);\n\n\t\tthis.add(this.sprite);\n\n\t\tthis.mapModel.addMonster(this);\n\t\tEnterFrameManager.add(this);\n\n\t\tthis.updateDepth();\n\t}\n\n\tpublic onUpdate(delta: number): void {\n\t\tif (this._isFree) {\n\t\t\tthis.free();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.sprite.anims.getProgress() >= 1) {\n\t\t\tconst tileX: number = MapModel.toTile(this.x);\n\t\t\tconst tileY: number = MapModel.toTile(this.y);\n\t\t\tswitch (this._state) {\n\t\t\t\tcase Monster.OUT:\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.INGAME:\n\t\t\t\t\tthis._state = Monster.OUT;\n\t\t\t\t\tthis.switchAnim(\"out\", false);\n\t\t\t\t\tif (this.gameProcessModel.isTutorial) {\n\t\t\t\t\t\tthis.scene.game.events.emit(TutorialEvents.NAVIGATOR_SHOW, this);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.OUTGAME:\n\t\t\t\t\tthis.mapModel.removeMonster(this);\n\t\t\t\t\tthis._isFree = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.PORTAL_VISIBLE:\n\t\t\t\t\tthis._state = Monster.OUT;\n\t\t\t\t\tthis.switchAnim(\"out\", false);\n\t\t\t\t\tthis.sprite.anims.reverse();\n\t\t\t\t\tthis.gameProcessModel.dontMove = false;\n\n\t\t\t\t\tthis.mapModel.mapMask[tileY][tileX] = 1;\n\t\t\t\t\tthis.mapModel.mapColor[tileY][tileX] = this.color;\n\t\t\t\t\tthis.mapModel.mapMonsters[tileY][tileX] = this;\n\n\t\t\t\t\tthis.linefinder.searchMain(tileY, tileX, this.color, this.min, this.cost);\n\n\t\t\t\t\tthis.updateDepth();\n\n\t\t\t\t\tif (this.gameProcessModel.isTutorial && this._state !== Monster.OUTGAME) {\n\t\t\t\t\t\tthis.scene.game.events.emit(TutorialEvents.NAVIGATOR_SHOW, this);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.PORTAL_INVISIBLE:\n\t\t\t\t\tthis.scene.game.events.emit(TutorialEvents.NAVIGATOR_HIDE);\n\n\t\t\t\t\tthis.x = MapModel.toPix(this.mapModel.pointEnd.x);\n\t\t\t\t\tthis.y = MapModel.toPix(this.mapModel.pointEnd.y);\n\n\t\t\t\t\tthis._point.x = tileX;\n\t\t\t\t\tthis._point.y = tileX;\n\n\t\t\t\t\tthis._state = Monster.PORTAL_VISIBLE;\n\t\t\t\t\tthis.sprite.anims.reverse();\n\t\t\t\t\tthis.playSound(this.animName);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.OVER:\n\t\t\t\t\tthis._state = Monster.OVER_STOP;\n\t\t\t\t\tthis.switchAnim(\"overStop\", true);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.CLICK:\n\t\t\t\t\tthis._state = Monster.CLICK_STOP;\n\t\t\t\t\tthis.switchAnim(\"clickStop\", true);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// анимация\n\t\t\t\tcase Monster.ANIM_OUT:\n\t\t\t\t\tthis._state = Monster.OUT;\n\t\t\t\t\tthis.switchAnim(\"out\", false);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.ANIM_OVER:\n\t\t\t\t\tthis._state = Monster.OVER_STOP;\n\t\t\t\t\tthis.switchAnim(\"overStop\", true);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.ANIM_CLICK:\n\t\t\t\t\tthis._state = Monster.CLICK_STOP;\n\t\t\t\t\tthis.switchAnim(\"clickStop\", true);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.ESCAPE:\n\t\t\t\t\tthis._state = Monster.ESCAPE_STOP;\n\t\t\t\t\tthis.switchAnim(\"escapeStop\", true, 1.5);\n\t\t\t\t\tthis.gameProcessModel.dontMove = true;\n\t\t\t\t\tthis._move = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.INSULT:\n\t\t\t\t\tthis._state = Monster.OUT;\n\t\t\t\t\tthis.switchAnim(\"out\", false);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Monster.ABORT:\n\t\t\t\t\tthis._state = Monster.CLICK_STOP;\n\t\t\t\t\tthis.switchAnim(\"clickStop\", true);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// движение\n\t\tif (this._move) {\n\t\t\tthis._wayX = MapModel.toPix(this._way[this._step].x);\n\t\t\tthis._wayY = MapModel.toPix(this._way[this._step].y);\n\n\t\t\tif (!AMath.equal(this.x, this._wayX, Math.abs(this.vector.x * delta))) {\n\t\t\t\tthis.x += this.vector.x * delta;\n\t\t\t} else {\n\t\t\t\tthis.x = this._wayX;\n\t\t\t}\n\t\t\tif (!AMath.equal(this.y, this._wayY, Math.abs(this.vector.y * delta))) {\n\t\t\t\tthis.y += this.vector.y * delta;\n\t\t\t} else {\n\t\t\t\tthis.y = this._wayY;\n\t\t\t}\n\t\t\tthis.updateDepth();\n\n\t\t\tif (AMath.distance(this.x, this.y, this._wayX, this._wayY) <= 4) {\n\t\t\t\tif (this._step > 0) {\n\t\t\t\t\tconst angle: number = AMath.getAngleRad(this._way[this._step].x, this._way[this._step].y, this._way[this._step - 1].x, this._way[this._step - 1].y);\n\n\t\t\t\t\tif (this._state === Monster.ESCAPE_STOP) {\n\t\t\t\t\t\tthis.vector.setToPolar(angle, Monster.SPEED * .25);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.vector.setToPolar(angle, Monster.SPEED);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._step--;\n\n\t\t\t\tif (this._step < 0) {\n\t\t\t\t\tthis.x = MapModel.toPix(this._way[0].x);\n\t\t\t\t\tthis.y = MapModel.toPix(this._way[0].y);\n\n\t\t\t\t\tthis._point.x = MapModel.toTile(this.x);\n\t\t\t\t\tthis._point.y = MapModel.toTile(this.y);\n\n\t\t\t\t\tthis.updateDepth();\n\n\t\t\t\t\tthis._move = false;\n\t\t\t\t\tthis._way = [];\n\n\t\t\t\t\tthis.sprite.off(\"animationcomplete\", this.jump, this);\n\t\t\t\t\tthis._state = Monster.OUT;\n\t\t\t\t\tthis.switchAnim(\"out\", false);\n\n\t\t\t\t\tthis.mapModel.takePlace(this);\n\n\t\t\t\t\tthis.gameProcessModel.dontMove = false;\n\n\t\t\t\t\tthis.linefinder.searchMain(MapModel.toTile(this.y), MapModel.toTile(this.x), this.color, this.min, this.cost);\n\n\t\t\t\t\tif (this.gameProcessModel.isTutorial && this._state !== Monster.OUTGAME) {\n\t\t\t\t\t\tthis.scene.game.events.emit(TutorialEvents.NAVIGATOR_SHOW, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// реакция на приближение/удаление курсора мыши\n\t\tthis.cursorReaction();\n\t}\n\n\tprivate updateDepth(): void {\n\t\tthis._depth = this.x + this.y * 10;\n\t\tthis.setDepth(this._depth);\n\t\tthis.scene.game.events.emit(MapEvents.UPDATE_DEPTHS);\n\t}\n\n\tprivate cursorReaction(): void {\n\t\t// \t\tif (_select == false)\n\t\t// \t\t{\n\t\t// \t\t\tif (AMath.distance(x, y, _game.cursour.x, _game.cursour.y - Universe.MAP_POS) <= RADIUS)\n\t\t// \t\t\t{\n\t\t// \t\t\t\tif (_state == OUT)\n\t\t// \t\t\t\t{\n\t\t// \t\t\t\t\t_state = OVER;\n\t\t// \t\t\t\t\tswitchAnim(\"over\", false);\n\t\t// \t\t\t\t\tplaySound(animName);\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t\telse\n\t\t// \t\t\t{\n\t\t// \t\t\t\tif (_state == OVER || _state == OVER_STOP)\n\t\t// \t\t\t\t{\n\t\t// \t\t\t\t\t_state = OUT;\n\t\t// \t\t\t\t\tswitchAnim(\"out\", false);\n\t\t// \t\t\t\t}\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t}\n\n\tpublic setAnim(): void {\n\t\tswitch (this._state) {\n\t\t\tcase Monster.OUT:\n\t\t\t\tthis._state = Monster.ANIM_OUT;\n\t\t\t\tthis.switchAnim(\"outAnim\" + this.numberOfAnim, false);\n\t\t\t\tthis.playSound(this.animName);\n\t\t\t\tbreak;\n\n\t\t\tcase Monster.OVER_STOP:\n\t\t\t\tthis._state = Monster.ANIM_OVER;\n\t\t\t\tthis.switchAnim(\"overAnim\" + this.numberOfAnim, false);\n\t\t\t\tthis.playSound(this.animName);\n\t\t\t\tbreak;\n\n\t\t\tcase Monster.CLICK_STOP:\n\t\t\t\tthis._state = Monster.ANIM_CLICK;\n\t\t\t\tthis.switchAnim(\"clickAnim\" + this.numberOfAnim, false);\n\t\t\t\tthis.playSound(this.animName);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.numberOfAnim %= Monster.COUNT_ANIMATIONS;\n\t\tthis.numberOfAnim++;\n\t}\n\n\tpublic free(): void {\n\t\tthis.sprite.anims.stop();\n\n\t\t// this.mapModel.removeMonster(this);\n\t\tthis.parentContainer.remove(this);\n\t\tthis._select = false;\n\n\t\tthis.showMoveZoneWithCheck();\n\t\tEnterFrameManager.remove(this);\n\t}\n\n\tpublic setWay(arr: Point[]): void {\n\t\tthis._way = arr;\n\n\t\tif (this.isWay() && !this.gameProcessModel.dontMove) {\n\t\t\tthis.scene.game.events.emit(MapEvents.CHOICE_HIDE, { y: MapModel.toTile(this.y), x: MapModel.toTile(this.x) } as ITile);\n\t\t\tthis.mapModel.activeMonster = null;\n\n\t\t\tthis.gameProcessModel.dontMove = true;\n\t\t\tthis._move = true;\n\t\t\tthis._step = this._way.length - 1;\n\t\t\tthis._select = false;\n\t\t\tthis._isWaiting = false;\n\t\t\tthis.mapModel.isGreen = false;\n\t\t\tthis.mapModel.isMagic = false;\n\n\t\t\tthis._state = Monster.MOVE;\n\t\t\tthis.switchAnim(\"move\", false, Monster.MOVE_ANIMATION_KOEF);\n\t\t\tthis.playSound(this.animName);\n\t\t\tthis.sprite.on(\"animationcomplete\", this.jump, this);\n\n\t\t\tconst angle: number = AMath.getAngleRad(this._way[this._step].x, this._way[this._step].y, this._way[this._step - 1].x, this._way[this._step - 1].y);\n\t\t\tthis.vector.setToPolar(angle, Monster.SPEED);\n\t\t\tthis.mapModel.leavePlace(this.point.y, this.point.x);\n\n\t\t\tif (this.gameProcessModel.isTutorial) {\n\t\t\t\tthis.scene.game.events.emit(TutorialEvents.NAVIGATOR_HIDE);\n\t\t\t}\n\n\t\t\tthis.showMoveZoneWithCheck();\n\t\t} else {\n\t\t\tthis._state = Monster.ABORT;\n\t\t\tthis.switchAnim(\"abort\", false);\n\t\t\tthis.playSound(this.animName);\n\t\t\tif (this.gameProcessModel.isTutorial) {\n\t\t\t\tthis.scene.game.events.emit(TutorialEvents.NAVIGATOR_SHOW, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic isWay(): boolean {\n\t\treturn this._way.length > 1;\n\t}\n\n\tpublic portal(): void {\n\t\tif (!this.gameProcessModel.dontMove) {\n\t\t\tconst tileX: number = MapModel.toTile(this.x);\n\t\t\tconst tileY: number = MapModel.toTile(this.y);\n\n\t\t\tthis.scene.game.events.emit(MapEvents.CHOICE_HIDE, { y: tileY, x: tileX } as ITile);\n\t\t\tthis.mapModel.activeMonster = null;\n\n\t\t\tthis.gameProcessModel.dontMove = true;\n\t\t\tthis._select = false;\n\t\t\tthis._isWaiting = false;\n\n\t\t\tthis._state = Monster.PORTAL_INVISIBLE;\n\t\t\tthis.switchAnim(\"portal\", false, 1.5);\n\t\t\tthis.playSound(this.animName);\n\n\t\t\tthis.mapModel.mapMask[tileY][tileX] = 0;\n\t\t\tthis.mapModel.mapColor[tileY][tileX] = \"\";\n\t\t}\n\t}\n\n\tpublic setEscape(arr: Point[]): void {\n\t\t// setTimeout(escapeDark, AMath.random(250, 1000), arr);\n\t}\n\n\t// \tpublic function escapeDark(arr:Array):void\n\t// \t{\n\t// \t\t_way = arr;\n\t// \t\tif(isWay() && !select)\n\t// \t\t{\n\t// \t\t\t//_universe.choiceFalse(Universe.toTile(y), Universe.toTile(x));\n\n\t// \t\t\t_universe.dontMove = true;\n\n\t// \t\t\t_state = ESCAPE;\n\t// \t\t\tswitchAnim(\"escape\", false);\n\t// \t\t\t//_sprite.loop = true;\n\t// \t\t\t//playSound(animName);\n\t// \t\t\t//play();\n\t// \t\t\t//gotoAndPlay(1);\n\t// \t\t\t//_move = true;\n\t// \t\t\t_step = _way.length - 1;\n\n\t// \t\t\t_angle = AMath.getAngleRad(_way[_step].x,_way[_step].y,_way[_step-1].x,_way[_step-1].y);\n\t// \t\t\t_vector.asSpeed(_speed, _angle);\n\n\t// \t\t\t_universe.mapMask[Universe.toTile(y)][Universe.toTile(x)] = 0;\n\t// \t\t\t_universe.mapColor[Universe.toTile(y)][Universe.toTile(x)] = \"\";\n\t// \t\t}\n\t// \t\telse\n\t// \t\t{\n\t// \t\t\t_universe.ticket--;\n\t// \t\t}\n\t// \t}\n\n\tpublic outGame(): void {\n\t\tif (this._select) {\n\t\t\tthis.scene.game.events.emit(MapEvents.CHOICE_HIDE, { y: MapModel.toTile(this.y), x: MapModel.toTile(this.x) } as ITile);\n\t\t\tthis.mapModel.isGreen = false;\n\t\t\tthis.mapModel.activeMonster = null;\n\t\t}\n\n\t\tthis._select = false;\n\t\tthis._isWaiting = false;\n\t\tthis._isOutGame = true;\n\t\tthis._state = Monster.OUTGAME;\n\t\tthis.switchAnim(\"outgame\", false);\n\t\tthis.playSound(this.animName);\n\t}\n\n\tprotected playSound(soundID: string): void {\n\t\tthis.str = this.colorChar.toUpperCase();\n\t\tthis.str2 = soundID.charAt(0).toUpperCase();\n\t\tthis.str3 = soundID.substr(1);\n\n\t\tif (soundID === \"move\" || soundID === \"portal\" || soundID === \"abort\") {\n\t\t\tthis.fullID = this.str2 + this.str3;\n\t\t} else {\n\t\t\tthis.fullID = this.str + this.str2 + this.str3;\n\t\t}\n\n\t\tif (this.scene.game.cache.audio.get(this.fullID)) {\n\t\t\tthis.scene.sound.play(this.fullID, { volume: GameDataModel.volumeSounds });\n\t\t}\n\t}\n\n\tprivate isPortal(): boolean {\n\t\treturn (this._state === Monster.PORTAL_VISIBLE || this._state === Monster.PORTAL_INVISIBLE);\n\t}\n\n\tpublic switchAnim(anim: string, loop: boolean, koeff: number = 1): void {\n\t\t// if (anim.lastIndexOf(\"Anim\") > 0) {\n\t\t// \tif (!Artist.isLazyLoaded) return;\n\t\t// }\n\n\t\tthis.sprite.play(anim + this.colorChar, false, 0);\n\t\tthis.sprite.anims.setRepeat(loop ? -1 : 0);\n\t\tthis.sprite.anims.setTimeScale(koeff);\n\t\tthis.animName = anim;\n\t}\n\n\tprivate jump(): void {\n\t\tthis.switchAnim(\"move\", false, Monster.MOVE_ANIMATION_KOEF);\n\t\tthis.playSound(this.animName);\n\t}\n\n\tpublic onClickHandler(): void {\n\t\tif (!this._move && !this.isPortal()) {\n\t\t\tif (this._state !== Monster.OUTGAME && this._state !== Monster.INGAME) {\n\t\t\t\tif (!this.mapModel.isKill) {\n\t\t\t\t\t// ищем уже выбранного монстра\n\t\t\t\t\t// и если такой есть...\n\t\t\t\t\tif (this.mapModel.activeMonster && this.mapModel.activeMonster !== this) {\n\t\t\t\t\t\tthis.mapModel.activeMonster.select = false;\n\t\t\t\t\t\tthis.mapModel.activeMonster.isWaiting = false;\n\t\t\t\t\t\tthis.mapModel.activeMonster._state = Monster.INSULT;\n\t\t\t\t\t\tthis.mapModel.activeMonster.switchAnim(\"insult\", false);\n\t\t\t\t\t\tthis.mapModel.activeMonster.playSound(this.animName);\n\n\t\t\t\t\t\tthis.showMoveZoneWithCheck();\n\t\t\t\t\t}\n\n\t\t\t\t\t// выделяем выбранного сейчас монстра\n\t\t\t\t\t// если нет ожидающих перемещения\n\t\t\t\t\tif (!this._isWaiting) {\n\t\t\t\t\t\tthis.scene.game.events.emit(MapEvents.CHOICE_SHOW, { y: this.y, x: this.x } as IPosition);\n\t\t\t\t\t\tthis._select = true;\n\t\t\t\t\t\tthis._isWaiting = true;\n\t\t\t\t\t\tthis._state = Monster.CLICK;\n\t\t\t\t\t\tthis.switchAnim(\"click\", false);\n\t\t\t\t\t\tthis.playSound(this.animName);\n\n\t\t\t\t\t\tif (this.color === MonsterColor.GREEN) {\n\t\t\t\t\t\t\tthis.mapModel.isGreen = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.mapModel.isGreen = false;\n\t\t\t\t\t\t\tthis.scene.game.events.emit(CursorEvents.RESET);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.mapModel.activeMonster = this;\n\n\t\t\t\t\t\tthis.showMoveZoneWithCheck();\n\t\t\t\t\t}\n\n\t\t\t\t\t// задаем точку старта\n\t\t\t\t\tthis._point.x = MapModel.toTile(this.x);\n\t\t\t\t\tthis._point.y = MapModel.toTile(this.y);\n\t\t\t\t\tthis.mapModel.pointStart = this._point;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate showMoveZoneWithCheck(): void {\n\t\tif (this.gameProcessModel.isTutorial) {\n\t\t\tif (this._select && this.color === MonsterColor.DARK && this.gameProcessModel.advice === TutorialScene.TUTORIAL_12) {\n\t\t\t\tthis.scene.game.events.emit(TutorialEvents.MOVE_ZONE_SHOW, this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.scene.game.events.emit(TutorialEvents.MOVE_ZONE_HIDE);\n\t\t}\n\t}\n\n\tpublic get color(): string {\n\t\treturn this.model.color;\n\t}\n\n\tpublic get colorChar(): string {\n\t\treturn this.model.colorChar;\n\t}\n\n\tpublic get min(): number {\n\t\treturn this.model.countInLineMin;\n\t}\n\n\tpublic get cost(): number {\n\t\treturn this.model.costOne;\n\t}\n\n\tpublic get isElvis(): boolean {\n\t\treturn this.model.color === MonsterColor.YELLOW;\n\t}\n\n\tpublic get isFree(): boolean {\n\t\treturn this._isFree;\n\t}\n\n\tpublic get select(): boolean { return this._select; }\n\tpublic set select(value: boolean) { this._select = value; }\n\n\tpublic get isWaiting(): boolean { return this._isWaiting; }\n\tpublic set isWaiting(value: boolean) { this._isWaiting = value; }\n\n\t// \tpublic function get isOutGame():Boolean { return _isOutGame; }\n\tpublic get depth(): number { return this._depth; }\n\n\t// \tpublic function get radius():int { return RADIUS; }\n\tpublic get point(): Point { return this._point; }\n\n\tpublic get typePathfinder(): string { return this.model.typePathfinder; }\n\tpublic get maxTurn(): number { return this.model.pathfinderMaxTurns; }\n}","import { Container, Sprite } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { ShakerUtils } from \"../../utils/ShakerUtils\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\n\nexport class Spark extends Container {\n\n    private shaker: ShakerUtils;\n    private componentPool: ComponentPool;\n    private sprite: Sprite;\n\n    protected scene: BaseScene;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.shaker = new ShakerUtils();\n        this.componentPool == new ComponentPool();\n        this.sprite = this.scene.add.sprite(0, 0, \"\");\n    }\n    \n    public init(posX: number, posY: number): void {\n        // устанавливаем графический образ\n        this.x = posX;\n        this.y = posY;\n        \n        this.sprite.play(\"spark\");\n        this.add(this.sprite);\n        this.sprite.on(Phaser.Animations.Events.ANIMATION_COMPLETE, this.free, this);\n\n        this.shaker.start(this.scene.resizeContainer);\n    }\n\n    public free(): void {\n        this.sprite.off(Phaser.Animations.Events.ANIMATION_COMPLETE, this.free, this);\n        this.sprite.anims.stop();\n        this.remove(this.sprite);\n\n        this.parentContainer.remove(this);\n        this.componentPool.dispose(this);\n    }\n}","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { Quest } from \"../views/Quest\";\n\nexport class QuestsVO {\n\n    private readonly COUNTDOWN_TOTAL: number = 20;\n\n    private readonly QUEST_ID: number = 0;\n    private readonly QUEST_COUNTDOWN: number = 1;\n    private readonly QUEST_CHALLENGES: number = 2;\n\n    public static readonly CHALLENGE_COLOR: number = 0;\n    public static readonly CHALLENGE_POINTS: number = 1;\n    public static readonly CHALLENGE_COUNT: number = 2;\n\n    private arrQuests: any[] = [];\n    private arrChallenges: any[][] = [[], [], []];\n\n    private gameDataModel: GameDataModel;\n\n    constructor() {\n        this.gameDataModel = new GameDataModel();\n        this.init();\n    }\n\n    public init(): void {\n        this.arrChallenges = [[], [], []];\n        this.arrQuests[this.QUEST_ID] = \"\";\n        this.arrQuests[this.QUEST_COUNTDOWN] = this.COUNTDOWN_TOTAL;\n        this.arrQuests[this.QUEST_CHALLENGES] = this.arrChallenges;\n    }\n\n    public parseLoadingData(arr: any[]): void {\n        if (arr && arr.length > 0) {\n            this.arrQuests[this.QUEST_ID] = arr[this.QUEST_ID];\n            this.arrQuests[this.QUEST_COUNTDOWN] = arr[this.QUEST_COUNTDOWN];\n            this.arrChallenges = arr[this.QUEST_CHALLENGES];\n        } else {\n            this.init();\n        }\n    }\n\n    public initNewQuests(questID: string): void {\n        this.arrQuests[this.QUEST_ID] = questID;\n    }\n\n    public updateCountdown(countdown: number): void {\n        this.arrQuests[this.QUEST_COUNTDOWN] = countdown;\n    }\n\n    public updateChallenge(index: number, color: number, points: number, count: number): void {\n        this.arrChallenges[index][QuestsVO.CHALLENGE_COLOR] = color;\n        this.arrChallenges[index][QuestsVO.CHALLENGE_POINTS] = points;\n        this.arrChallenges[index][QuestsVO.CHALLENGE_COUNT] = count;\n        this.arrQuests[this.QUEST_CHALLENGES] = this.arrChallenges;\n    }\n\n    public updateChallengeFromQuest(quest: Quest): void {\n        var countQuests: number = this.arrChallenges.length;\n        for (var i: number = 0; i < countQuests; i++) {\n            if (this.arrChallenges[i][QuestsVO.CHALLENGE_COLOR] == quest.color) {\n                this.arrChallenges[i][QuestsVO.CHALLENGE_COUNT] = quest.count;\n            }\n        }\n    }\n\n    public clearChallenge(color: number): void {\n        for (let i: number = 0; i < this.arrChallenges.length; i++) {\n            if (this.arrChallenges[i][QuestsVO.CHALLENGE_COLOR] == color) {\n                this.updateChallenge(i, -1, 0, 0);\n                break;\n            }\n        }\n    }\n\n    public getColor(index: number): number {\n        if (this.arrChallenges[index][QuestsVO.CHALLENGE_COLOR] == undefined) {\n            return -1;\n        }\n        return this.arrChallenges[index][QuestsVO.CHALLENGE_COLOR];\n    }\n\n    public getCount(index: number): number {\n        return this.arrChallenges[index][QuestsVO.CHALLENGE_COUNT];\n    }\n\n    public getPoints(index: number): number {\n        return this.arrChallenges[index][QuestsVO.CHALLENGE_POINTS];\n    }\n\n    public getValueFromColor(color: number, value: number): number {\n        for (let i: number = 0; i < this.arrChallenges.length; i++) {\n            if (this.arrChallenges[i][QuestsVO.CHALLENGE_COLOR] == color) {\n                return this.arrChallenges[i][value];\n            }\n        }\n        return 0;\n    }\n\n    public saveData(): void {\n        GameDataModel.quests = this.arrQuests;\n        this.gameDataModel.saveData();\n    }\n\n    public get questID(): string { return this.arrQuests[this.QUEST_ID]; }\n    public get countdown(): number { return this.arrQuests[this.QUEST_COUNTDOWN]; }\n}","export const SeasonsEvents = {\n    CHANGE_SEASON: \"SeasonsEvents.CHANGE_SEASON\"\n};","export const TutorialEvents = {\n    CHANGE_TUTORIAL: \"TutorialEvents.CHANGE_TUTORIAL\",\n    NAVIGATOR_SHOW: \"TutorialEvents.NAVIGATOR_SHOW\",\n    NAVIGATOR_HIDE: \"TutorialEvents.NAVIGATOR_HIDE\",\n    MOVE_ZONE_SHOW: \"TutorialEvents.MOVE_ZONE_SHOW\",\n    MOVE_ZONE_HIDE: \"TutorialEvents.MOVE_ZONE_HIDE\"\n};","import { Language } from \"../../content/Language\";\nimport { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { BitmapText, Container, Image, Scene } from \"../../exports\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\n\nexport class Nexter extends Container {\n\n    private readonly COUNT_MONSTERS: number = 3;\n    private readonly POS_X: number = 70;\n\n    private vNexts: Image[];\n    private title: BitmapText;\n\n    private arrNext: string[];\n\n    constructor(scene: Scene) {\n        super(scene);\n\n        this.add(this.scene.add.image(0, 0, \"ui\", \"panelNext\"));\n\n        this.title = this.scene.add.bitmapText(0, 0, \"aivaStroke\", \"\", 23).setOrigin(.5, 0);\n        this.add(this.title);\n\n        this.vNexts = [];\n\n        for (let i: number = 0, j: number = -1; i < this.COUNT_MONSTERS; i++, j++) {\n            const mc: Image = this.scene.add.image(0, 0, \"ui\", \"next0\");\n            mc.setOrigin(.5, 1);\n            mc.y = (i % 2 == 0) ? 0 : 10;\n            mc.x = j * this.POS_X;\n            this.add(mc);\n\n            this.vNexts.push(mc);\n        }\n    }\n\n    public init(): void {\n        this.vNexts.forEach((nextMonster: Image) => nextMonster.setScale(0));\n        this.scene.game.events.addListener(GameProcessEvents.SET_NEXT_MONSTERS, this.onSetNextMonster, this);\n    }\n\n    public free(): void {\n        this.scene.game.events.removeListener(GameProcessEvents.SET_NEXT_MONSTERS, this.onSetNextMonster, this);\n    }\n\n    private onSetNextMonster(data: string[]): void {\n        this.arrNext = data;\n\n        for (let i: number = 0; i < this.COUNT_MONSTERS; i++) {\n            this.scene.add.tween({\n                targets: this.vNexts[i],\n                scaleX: 0,\n                scaleY: 0,\n                duration: 200,\n                onComplete: () => (i == this.COUNT_MONSTERS - 1) ? this.showNextMonster() : null\n            });\n        }\n    }\n\n    private showNextMonster(): void {\n        for (let i: number = 0; i < this.COUNT_MONSTERS; i++) {\n            this.vNexts[i].setTexture(\"ui\", `next${ColorIDsUtils.getIndexFromColor(this.arrNext[i])}`);\n            this.scene.add.tween({\n                targets: this.vNexts[i],\n                scaleX: 1,\n                scaleY: 1,\n                duration: 200\n            });\n        }\n    }\n\n    public language(): void {\n        this.title.text = Language.getText(Language.NEXT_MONSTER);\n    }\n}","import { Language } from \"../../content/Language\";\nimport { BitmapText, Container, Image } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { Button } from \"../../ui/views/Button\";\nimport { Nexter } from \"./Nexter\";\nimport { Tablo } from \"./Tablo\";\nimport { SceneEvents } from \"../../scenes/events/SceneEvents\";\nimport { ScenesConstants } from \"../../scenes/constants\";\n\nexport class Panel extends Container {\n\n    private butMenu: Button;\n\n    private scoreBest: Tablo;\n    private labelBest: BitmapText;\n\n    private scoreNow: Tablo;\n    private labelNow: BitmapText;\n\n    private nexter: Nexter;\n\n    protected scene: BaseScene;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        const gameWidthHalf: number = this.scene.gameWidth * .5;\n\n        const leftPanel: Image = this.scene.add.image(0, 0, \"ui\", \"panelScore\");\n        leftPanel.setOrigin(1, 0);\n        leftPanel.x = gameWidthHalf;\n        leftPanel.y = 80;\n        this.add(leftPanel);\n\n        const rightPanel: Image = this.scene.add.image(0, 0, \"ui\", \"panelScore\");\n        rightPanel.setOrigin(1, 0);\n        rightPanel.scaleX = -1;\n        rightPanel.x = gameWidthHalf;\n        rightPanel.y = 80;\n        this.add(rightPanel);\n\n        var dX: number = 32;\n        var dY: number = 68;\n        var dYTablo: number = 35;\n        var fontSize: number = 23;\n\n        this.scoreBest = new Tablo(this.scene, \"left\", 0xFFFF00);\n        this.scoreBest.x = leftPanel.x - leftPanel.width + dX;\n        this.scoreBest.y = leftPanel.y + dYTablo;\n        this.scoreBest.setScore(0);\n        this.add(this.scoreBest);\n\n        this.scoreNow = new Tablo(this.scene, \"right\");\n        this.scoreNow.x = rightPanel.x + rightPanel.width - dX;\n        this.scoreNow.y = rightPanel.y + dYTablo;\n        this.scoreNow.setScore(0);\n        this.add(this.scoreNow);\n\n        this.labelBest = this.scene.add.bitmapText(\n            leftPanel.x - leftPanel.width + dX,\n            leftPanel.y + dY,\n            \"aivaStroke\",\n            \"\", fontSize\n        ).setOrigin(0, 0);\n        this.labelBest.setMaxWidth(130);\n        this.labelBest.setLeftAlign();\n        this.add(this.labelBest);\n\n        this.labelNow = this.scene.add.bitmapText(\n            rightPanel.x + rightPanel.width - dX,\n            rightPanel.y + dY,\n            \"aivaStroke\",\n            \"\", fontSize\n        ).setOrigin(1, 0);\n        this.labelNow.setMaxWidth(130);\n        this.labelNow.setRightAlign();\n        this.add(this.labelNow);\n\n        this.nexter = new Nexter(this.scene);\n        this.nexter.x = gameWidthHalf;\n        this.nexter.y = leftPanel.y + 130;\n        this.add(this.nexter);\n\n        this.butMenu = new Button(this.scene, \"btnPink\", \"\", () => this.onBack());\n        this.butMenu.addLabel(\"MENU\", \"aivaStroke\", 36, 0, -12);\n        this.butMenu.x = gameWidthHalf\n        this.butMenu.y = 45;\n        this.add(this.butMenu);\n\n        this.language();\n    }\n\n    public init(): void {\n        this.visible = true;\n        this.nexter.init();\n        this.butMenu.activate();\n    }\n\n    public free(): void {\n        this.visible = false;\n        this.nexter.free();\n        this.butMenu.deactivate();\n    }\n\n    public setScoreBest(score: number): void {\n        this.scoreBest.setScoreNow(score);\n    }\n\n    public scoreInitialize(score: number): void {\n        this.scoreNow.setScoreNow(score);\n    }\n\n    public setScore(score: number): void {\n        this.scoreNow.setScore(score);\n    }\n\n    private onBack(): void {\n        this.scene.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.menu);\n    }\n\n    public language(): void {\n        this.labelBest.text = Language.getText(Language.LABEL_BEST);\n        this.labelNow.text = Language.getText(Language.LABEL_NOW);\n        this.butMenu.text = Language.getText(Language.MENU);\n        this.nexter.language();\n    }\n}","import { Language } from \"../../content/Language\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { BitmapText, Container, Image, Point, Tween } from \"../../exports\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { MonsterColor, MonsterConstants } from \"../../monsters/constants\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\nimport { ChallengeVO } from \"../data/ChallengeVO\";\nimport { QuestsVO } from \"../data/QuestsVO\";\nimport { Quest } from \"./Quest\";\n\nexport class PanelQuest extends Container {\n\n    private readonly COUNT_QUEST: number = 3;\n    private readonly COUNT_MIN: number = 20;\n    private readonly COUNT_MAX: number = 50;\n    private readonly LINE_MAX: number = 2;\n    private readonly MULTIPLIER_LINES: number = 3;\n    private readonly MULTIPLIER_COUNTS: number = 5;\n    private readonly RANGE_BETWEEN_QUESTS: number = 170;\n    private readonly QUESTS_POS_Y: number = 115;\n\n    public static readonly CHALLENGE_LINES: string = \"CHALLENGE_LINES\";\n    public static readonly CHALLENGE_COUNTS: string = \"CHALLENGE_COUNTS\";\n\n    private readonly CHALLENGES: string[] = [PanelQuest.CHALLENGE_LINES, PanelQuest.CHALLENGE_COUNTS];\n\n    private tfTitle: BitmapText;\n    private arrColors: number[] = [];\n\n    private vQuests: Quest[];\n    private vQuestsComplete: Quest[];\n\n    private pointCenterForQuests: Point;\n    private pointRangesForQuests: Point;\n\n    private challenge: string = PanelQuest.CHALLENGE_COUNTS;\n\n    private questsVO: QuestsVO = new QuestsVO();\n    private gameProcessModel: GameProcessModel;\n    private gameDataModel: GameDataModel;\n    private componentPool: ComponentPool;\n\n    private isChallengeComplete: boolean;\n    private _isAllChallengesCompleted: boolean;\n    private countdown: number;\n\n    private moveble: Tween;\n\n    private startPositionsForStars: Point;\n\n    protected scene: BaseScene;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.gameDataModel = new GameDataModel();\n        this.gameProcessModel = new GameProcessModel(this.scene.game);\n        this.componentPool = new ComponentPool();\n\n        const bg: Image = this.scene.add.image(0, 0, \"ui\", \"panelBottom\").setOrigin(.5, 0);\n        this.add(bg);\n\n        this.tfTitle = this.scene.add.bitmapText(bg.x, 20, \"aivaWhite\", \"\", 28);\n        this.tfTitle.setOrigin(.5, 0);\n        this.add(this.tfTitle);\n\n        this.vQuests = [];\n        this.vQuestsComplete = [];\n\n        const startPosX: number = this.getQuestsStartPosX(this.COUNT_QUEST);\n        for (let i: number = 0; i < this.COUNT_QUEST; i++) {\n            const quest: Quest = this.componentPool.get(Quest, this.scene);\n            quest.x = i * this.RANGE_BETWEEN_QUESTS + startPosX;\n            quest.y = this.QUESTS_POS_Y;\n            this.add(quest);\n\n            this.vQuestsComplete.push(quest);\n        }\n        this.x = this.scene.gameWidth * .5;\n    }\n\n    private getQuestsStartPosX(countQuests: number): number {\n        return ((countQuests - 1) * this.RANGE_BETWEEN_QUESTS) / -2;\n    }\n\n    public setPointsForMoveble(): void {\n        this.startPositionsForStars = this.componentPool.get(Point);\n        this.startPositionsForStars.x = this.x;\n        this.startPositionsForStars.y = this.y - MapModel.MAP_POS;\n    }\n\n    public startNewQuests(): void {\n        this._isAllChallengesCompleted = true;\n\n        this.challenge = this.CHALLENGES[Phaser.Math.Between(0, this.CHALLENGES.length - 1)];\n        this.countdown = 0;\n\n        this.questsVO.initNewQuests(this.challenge);\n        this.questsVO.updateCountdown(this.countdown);\n\n        this.fillAllColors();\n\n        for (let i: number = 0; i < this.COUNT_QUEST; i++) {\n            const color: number = this.arrColors.splice(Phaser.Math.Between(0, this.arrColors.length - 1), 1)[0];\n            const fullColor: MonsterColor = ColorIDsUtils.getFullColorFromIndex(color) as MonsterColor;\n            const minInLine: number = MonsterConstants[MonsterColor[fullColor]].countInLineMin;\n\n            const count: number = this.getCount(minInLine);\n            const points: number = this.getPoints(count, minInLine);\n\n            this.vQuestsComplete[0].init(color, points, count, i * Quest.SHOWING_DELAY);\n            this.add(this.vQuestsComplete[0]);\n            this.vQuests = this.vQuests.concat(this.vQuestsComplete.splice(0, 1));\n\n            this.questsVO.updateChallenge(i, color, points, count);\n        }\n        this.questsVO.saveData();\n        this.shiftQuests(true);\n        this.language();\n    }\n\n    private loadQuests(): void {\n        this.challenge = this.questsVO.questID;\n\n        for (let i: number = 0; i < this.COUNT_QUEST; i++) {\n            const color: number = this.questsVO.getColor(i);\n            const count: number = this.questsVO.getCount(i);\n            const points: number = this.questsVO.getPoints(i);\n\n            if (color >= 0 && count > 0) {\n                this.vQuestsComplete[0].init(color, points, count, i * Quest.SHOWING_DELAY);\n                this.add(this.vQuestsComplete[0]);\n                this.vQuests = this.vQuests.concat(this.vQuestsComplete.splice(0, 1));\n            }\n        }\n        this.shiftQuests(true);\n        this.language();\n    }\n\n    public init(): void {\n        this.visible = true;\n        // this.y = _moveble.startPoint.y;\n\n        this.questsVO.parseLoadingData(GameDataModel.quests);\n\n        this._isAllChallengesCompleted = this.checkAllChallenges();\n\n        if (this._isAllChallengesCompleted) {\n            if (this.questsVO.countdown == 0) {\n                this.allChallengesCompleted();\n            }\n            this.countdown = this.questsVO.countdown;\n            // addEventListener(Events.QUESTS_COUNTDOWN, onQuestCountdown);\n        } else {\n            // _moveble.init(loadQuests);\n            this.loadQuests();\n        }\n\n        // addEventListener(Events.DELETE_MONSTERS, onStepToChallenge);\n        // addEventListener(Events.CHALLENGE_COMPLETE, onChallengeComplete);\n    }\n\n    private checkAllChallenges(): boolean {\n        let isChallengeCompleted: boolean = true;\n\n        for (let i: number = 0; i < this.COUNT_QUEST; i++) {\n            const color: number = this.questsVO.getColor(i);\n\n            if (color >= 0) {\n                isChallengeCompleted = false;\n                break;\n            }\n        }\n        return isChallengeCompleted;\n    }\n\n    private onQuestCountdown(evt: Event): void {\n        this.countdown--;\n        this.questsVO.updateCountdown(this.countdown);\n        this.questsVO.saveData();\n\n        if (this.countdown <= 0) {\n            // removeEventListener(Events.QUESTS_COUNTDOWN, onQuestCountdown);\n            // _moveble.init(startNewQuests);\n        }\n    }\n\n    private onChallengeComplete(questComplete: Quest): void {\n        this.isChallengeComplete = false;\n\n        const indexOfCompletedQuest: number = this.vQuests.indexOf(questComplete);\n\n        this.gameProcessModel.score += this.questsVO.getValueFromColor(questComplete.color, QuestsVO.CHALLENGE_POINTS);;\n        this.gameDataModel.saveData();\n\n        this.questsVO.clearChallenge(questComplete.color);\n        this.questsVO.saveData();\n\n        this.vQuestsComplete = this.vQuestsComplete.concat(this.vQuests.splice(indexOfCompletedQuest, 1));\n        this.remove(questComplete);\n\n        if (this.visible) {\n            // _universe.addStarsOnQuest(_startPositionsForStars.x + questComplete.x, _startPositionsForStars.y + questComplete.y + Quest.POS_Y);\n\n            if (this.vQuests.length > 0) {\n                this.shiftQuests();\n            } else {\n                this.allChallengesCompleted();\n            }\n        }\n    }\n\n    private allChallengesCompleted(): void {\n        this.questsVO.init();\n        this.countdown = this.questsVO.countdown;\n        this._isAllChallengesCompleted = true;\n        // addEventListener(Events.QUESTS_COUNTDOWN, onQuestCountdown);\n        this.questsVO.saveData();\n        // setTimeout(_moveble.free, 1000);\n    }\n\n    private shiftQuests(force: boolean = false): void {\n        if (this.isOtherQuestsComplete()) {\n            return;\n        }\n        const countQuests: number = this.vQuests.length;\n        const startPosX: number = this.getQuestsStartPosX(countQuests);\n        for (let i: number = 0; i < countQuests; i++) {\n            if (force) {\n                this.vQuests[i].x = i * this.RANGE_BETWEEN_QUESTS + startPosX;\n                this.vQuests[i].y = this.QUESTS_POS_Y;\n            } else {\n                // Builder.addTween(_vQuests[i], newPositionForQuests[i].x, newPositionForQuests[i].y);\n            }\n        }\n    }\n\n    private onStepToChallenge(challenge: ChallengeVO): void {\n\n        const countQuests: number = this.vQuests.length;\n        for (let i: number = 0; i < countQuests; i++) {\n            if (this.vQuests[i].color == challenge.color) {\n                if (this.challenge === PanelQuest.CHALLENGE_COUNTS) {\n                    this.vQuests[i].refresh(challenge.count);\n                } else {\n                    if (challenge.count >= this.questsVO.getValueFromColor(challenge.color, QuestsVO.CHALLENGE_COUNT)) {\n                        this.vQuests[i].refresh(challenge.count);\n                    }\n                }\n                this.isChallengeComplete = this.vQuests[i].isComplete;\n                this.questsVO.updateChallengeFromQuest(this.vQuests[i]);\n                this.questsVO.saveData();\n                break;\n            }\n        }\n    }\n\n    public free(): void {\n        this.visible = false;\n\n        this.vQuestsComplete = this.vQuestsComplete.concat(this.vQuests);\n        this.vQuests = [];\n\n        for (let i: number = 0; i < this.COUNT_QUEST; i++) {\n            if (this.vQuestsComplete[i].isComplete) {\n                this.vQuestsComplete[i].free();\n            }\n            this.remove(this.vQuestsComplete[i]);\n        }\n    }\n\n    public isOtherQuestsComplete(): boolean {\n        for (let i: number = 0; i < this.vQuests.length; i++) {\n            if (this.vQuests[i].isComplete) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public reset(): void {\n        this.questsVO.init();\n        this.questsVO.saveData();\n    }\n\n    private getCount(minInLine: number): number {\n        let count: number;\n\n        switch (this.challenge) {\n            case PanelQuest.CHALLENGE_LINES:\n                count = minInLine + Phaser.Math.Between(0, this.LINE_MAX);\n                break;\n\n            case PanelQuest.CHALLENGE_COUNTS:\n                count = Phaser.Math.Between(this.COUNT_MIN, this.COUNT_MAX);\n                break;\n        }\n\n        return count;\n    }\n\n    private getPoints(count: number, minInLine: number): number {\n        let points: number;\n\n        switch (this.challenge) {\n            case PanelQuest.CHALLENGE_LINES:\n                points = count * (count - minInLine + this.MULTIPLIER_LINES);\n                break;\n\n            case PanelQuest.CHALLENGE_COUNTS:\n                points = count * this.MULTIPLIER_COUNTS;\n                break;\n        }\n\n        return points;\n    }\n\n    private fillAllColors(): void {\n        this.arrColors = [];\n        for (let i: number = 0; i < ColorIDsUtils.count; i++) {\n            this.arrColors.push(i);\n        }\n    }\n\n    public language(): void {\n        this.tfTitle.text = Language.getText((Language as any)[this.challenge]);\n    }\n\n    public get isAllChallengesCompleted(): boolean {\n        return this._isAllChallengesCompleted;\n    }\n}","import { Container } from \"../../exports\";\nimport { URLButton } from \"../../ui/views/URLButton\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\n\nexport class PanelRowButtons extends Container {\n\n    private readonly DELAY_BETWEEN_SHOWING_BUTTONS: number = 150;\n\n    private vBtns: URLButton[] = [];\n    private countButtons: number;\n    private range: number;\n\n    constructor(scene: BaseScene, range: number, dist: number = 100) {\n        super(scene);\n        this.range = range;\n        this.countButtons = 0;\n    }\n\n    public addBtn(iconName: string, url: string): void {\n        const urlButton: URLButton = new URLButton(\n            this.scene,\n            iconName,\n            this.countButtons * this.DELAY_BETWEEN_SHOWING_BUTTONS\n        );\n        urlButton.addURL(url);\n        this.vBtns.push(urlButton);\n        this.add(urlButton);\n        this.countButtons++;\n        \n        this.arrangeButtons();\n    }\n\n    private arrangeButtons(): void {\n        const startPosition: number = -(this.range * (this.countButtons - 1)) / 2;\n        for (let i: number = 0; i < this.countButtons; i++) {\n            this.vBtns[i].x = this.range * i + startPosition;\n        }\n    }\n\n    public init(): void {\n        for (let i: number = 0; i < this.countButtons; i++) {\n            this.vBtns[i].init();\n            this.add(this.vBtns[i]);\n        }\n    }\n\n    public free(): void {\n        for (let i: number = 0; i < this.countButtons; i++) {\n            this.vBtns[i].free();\n        }\n    }\n\n    public clear(): void {\n        if (this.parentContainer) {\n            this.parentContainer.remove(this);\n        }\n        this.removeAll();\n    }\n}","import { Container } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { Button } from \"../../ui/views/Button\";\nimport { SeasonsUtils } from \"../../utils/SeasonsUtils\";\nimport { SeasonsEvents } from \"../events/SeasonsEvents\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\n\nexport class PanelSeasons extends Container {\n\n\tprivate readonly DX: number = 70;\n\n\tprivate vButtons: Button[] = [];\n\t// private gameDataModel: GameDataModel = new GameDataModel();\n\n\tprivate showPosY: number;\n\tprivate hidePosY: number;\n\n\tconstructor(scene: BaseScene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n\t\tsuper(scene, x, y, children);\n\n\t\tfor (let indexSeason: number = 0; indexSeason < SeasonsUtils.SEASONS_COUNT; indexSeason++) {\n\t\t\tconst btn: Button = this.createButton(SeasonsUtils.getSeasonNameByID(indexSeason), indexSeason);\n\t\t\tbtn.x = indexSeason * this.DX;\n\t\t\tthis.vButtons.push(btn);\n\t\t}\n\t\tthis.showPosY = this.y;\n\t\tthis.hidePosY = this.showPosY - 50;\n\n\t\tthis.alpha = 0;\n\t\tthis.y = this.hidePosY;\n\t}\n\n\tprivate createButton(seasonName: string, indexSeason: number): Button {\n\t\tconst btn: Button = new Button(\n\t\t\tthis.scene,\n\t\t\t\"btnSeason\" + seasonName,\n\t\t\t\"icon\" + seasonName, () => this.onChangeSeason(indexSeason)\n\t\t);\n\t\tthis.add(btn);\n\t\treturn btn;\n\t}\n\n\tpublic show(): void {\n\t\tthis.scene.add.tween({\n\t\t\ttargets: this,\n\t\t\ty: this.showPosY,\n            alpha: 1,\n            duration: 500,\n            onComplete: () => this.addListeners()\n        });\n\t}\n\n\tpublic hide(): void {\n\t\tthis.removeListeners();\n\t\tthis.scene.add.tween({\n\t\t\ttargets: this,\n\t\t\ty: this.hidePosY,\n            alpha: 0,\n            duration: 500\n        });\n\t}\n\n\tprivate addListeners(): void {\n\t\tfor (let indexButton: number = 0; indexButton < SeasonsUtils.SEASONS_COUNT; indexButton++) {\n\t\t\tthis.vButtons[indexButton].activate();\n\t\t}\n\t}\n\n\tprivate removeListeners(): void {\n\t\tfor (let indexButton: number = 0; indexButton < SeasonsUtils.SEASONS_COUNT; indexButton++) {\n\t\t\tthis.vButtons[indexButton].deactivate();\n\t\t}\n\t}\n\n\tprivate onChangeSeason(seasonId: number): void {\n\t\tGameDataModel.seasonId = seasonId;\n\t\tconsole.log(seasonId);\n\t\tthis.scene.game.events.emit(SeasonsEvents.CHANGE_SEASON);\n\t}\n}","import { Language } from \"../../content/Language\";\nimport { BitmapText, Container } from \"../../exports\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\n\nexport class PanelTutorialBottom extends Container {\n\n    protected scene: BaseScene;\n\n    private tfInfo: BitmapText;\n\n    private countMonsterInLine: Container;\n    private tfCountMonsterInLine: BitmapText;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.tfInfo = this.scene.add.bitmapText(30, 850, \"aivaStroke\", \"\", 38).setOrigin(0, 1);\n        this.tfInfo.setTint(0xFFFFFF, 0xFFFFFF, 0xFFFF99, 0xFFFF99);\n        this.tfInfo.setMaxWidth(420);\n        this.tfInfo.setLeftAlign();\n        this.add(this.tfInfo);\n\n        this.countMonsterInLine = this.scene.add.container(0, 0);\n        this.countMonsterInLine.x = MapModel.toPix(7);\n        this.add(this.countMonsterInLine);\n\n        this.countMonsterInLine.add(this.scene.add.image(0, 0, \"ui\", \"labelLine\"));\n\n        this.tfCountMonsterInLine = this.scene.add.bitmapText(0, 35, \"aivaStroke\", \"\", 50).setOrigin(.5);\n        this.countMonsterInLine.add(this.tfCountMonsterInLine);\n    }\n\n    public init(): void {\n        this.hideCountMonster();\n        this.visible = true;\n    }\n\n    public free(): void {\n        this.visible = false;\n    }\n\n    public showCountMonster(tileY: number, count: number): void {\n        this.countMonsterInLine.y = MapModel.toPix(tileY) + MapModel.MAP_POS - MapModel.MAP_CELL_HALF;\n        this.countMonsterInLine.visible = true;\n        this.tfCountMonsterInLine.text = count.toString();\n    }\n\n    public hideCountMonster(): void {\n        this.countMonsterInLine.visible = false;\n    }\n\n    public updatePanel(advice: number): void {\n        this.tfInfoText = Language.getText((Language as any)[`HELP${advice}`]);\n    }\n\n    public set tfInfoText(str: string) {\n        this.tfInfo.text = str;\n    }\n}","import { Language } from \"../../content/Language\";\nimport { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { BitmapText, Container, Image } from \"../../exports\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { Monster } from \"../../monsters/views/Monster\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { TutorialScene } from \"../../scenes/views/TutorialScene\";\nimport { Button } from \"../../ui/views/Button\";\nimport { TutorialEvents } from \"../events/TutorialEvents\";\n\nexport class PanelTutorialTop extends Container {\n\n    protected scene: BaseScene;\n\n    private sprite: Image;\n    private _butMenu: Button;\n    private _butPrev: Button;\n    private _butNext: Button;\n\n    private tfCount: BitmapText;\n    private tfLabel: BitmapText;\n    private tfTask: BitmapText;\n\n    private moveZoneJubby: Image;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.moveZoneJubby = this.scene.add.image(0, 0, \"ui\", \"moveZone\");\n        this.add(this.moveZoneJubby);\n\n        const gameWidthHalf: number = this.scene.gameWidth * .5;\n\n        this.sprite = this.scene.add.image(0, 0, \"ui\", \"panelBottom\");\n        this.sprite.setOrigin(.5, 0);\n        this.sprite.x = gameWidthHalf;\n        this.sprite.y = 80;\n        this.sprite.scaleY = .9;\n        this.add(this.sprite);\n\n        this._butMenu = new Button(this.scene, \"btnPink\", \"\", () => this.exitFromTutorial());\n        this.butMenu.addLabel(\"BACK\", \"aivaStroke\", 36, 0, -12);\n        this.butMenu.x = gameWidthHalf;\n        this.butMenu.y = 45;\n        this.add(this.butMenu);\n\n        this.tfCount = this.scene.add.bitmapText(this.sprite.x, this.sprite.y + 28, \"aivaGold\", \"\", 36).setOrigin(.5);\n        this.tfCount.tint = 0xFFFF00;\n        this.add(this.tfCount);\n\n        this.tfLabel = this.scene.add.bitmapText(this.sprite.x, this.sprite.y + 70, \"aivaGold\", \"\", 42).setOrigin(.5);\n        this.add(this.tfLabel);\n\n        this.tfTask = this.scene.add.bitmapText(this.sprite.x, this.sprite.y + 95, \"aivaStroke\", \"\", 24).setOrigin(.5, 0);\n        this.tfTask.setTint(0xFFFFFF, 0xFFFFFF, 0x99FFFF, 0x99FFFF);\n        this.tfTask.setMaxWidth(490);\n        this.tfTask.setCenterAlign();\n        this.add(this.tfTask);\n\n        this._butPrev = new Button(this.scene, \"btnPink\", \"\", () => this.onPrevTutorial());\n        this.butPrev.addLabel(\"BACK\", \"aivaStroke\", 36, 0, -12);\n        this.butPrev.x = gameWidthHalf - 175;\n        this.butPrev.y = 935;\n        this.add(this.butPrev);\n\n        this._butNext = new Button(this.scene, \"btnGreen\", \"\", () => this.onNextTutorial());\n        this.butNext.addLabel(\"BACK\", \"aivaStroke\", 36, 0, -12);\n        this.butNext.x = gameWidthHalf + 175;\n        this.butNext.y = 935;\n        this.add(this.butNext);\n    }\n\n    public init(): void {\n        this.onMoveZoneHide();\n\n        this.visible = true;\n        this.butMenu.activate();\n        this.butPrev.activate();\n        this.butNext.activate();\n\n        this.butPrev.visible = true;\n        this.butNext.visible = true;\n\n        this.scene.game.events.addListener(TutorialEvents.MOVE_ZONE_SHOW, this.onMoveZoneShow, this);\n        this.scene.game.events.addListener(TutorialEvents.MOVE_ZONE_HIDE, this.onMoveZoneHide, this);\n\n        this.language();\n    }\n\n    private onPrevTutorial(): void {\n        this.scene.game.events.emit(TutorialEvents.CHANGE_TUTORIAL, -1);\n    }\n\n    private onNextTutorial(): void {\n        this.scene.game.events.emit(TutorialEvents.CHANGE_TUTORIAL, 1);\n    }\n\n    public exitFromTutorial(): void {\n        this.scene.game.events.emit(GameProcessEvents.END_GAME);\n    }\n\n    public free(): void {\n        this.visible = false;\n        this.butMenu.deactivate();\n        this.butPrev.deactivate();\n        this.butNext.deactivate();\n\n        this.scene.game.events.removeListener(TutorialEvents.MOVE_ZONE_SHOW, this.onMoveZoneShow, this);\n        this.scene.game.events.removeListener(TutorialEvents.MOVE_ZONE_HIDE, this.onMoveZoneHide, this);\n    }\n\n    private onMoveZoneShow(monster: Monster): void {\n        this.moveZoneJubby.x = monster.x;\n        this.moveZoneJubby.y = monster.y + MapModel.MAP_POS;\n        this.addAt(this.moveZoneJubby, 0);\n    }\n\n    private onMoveZoneHide(): void {\n        if (this.exists(this.moveZoneJubby)) {\n            this.remove(this.moveZoneJubby);\n        }\n    }\n\n    public language(): void {\n        this.butPrev.text = Language.getText(Language.BACK);\n        this.butNext.text = Language.getText(Language.NEXT);\n        this.butMenu.text = Language.getText(Language.MENU);\n    }\n\n    public updatePanel(advice: number): void {\n        this.tfTaskText = Language.getText((Language as any)[`TASK_HELP${advice}`]);\n\n        this.tfCountText = `#${advice}`;\n        this.tfLabelText = Language.getText((Language as any)[`TITLE_HELP${advice}`]);\n\n        if (advice >= TutorialScene.TUTORIAL_1 && advice <= TutorialScene.TUTORIAL_14) {\n            if (!this.butPrev.visible) {\n                this.butPrev.visible = true;\n            }\n            if (!this.butNext.visible) {\n                this.butNext.visible = true;\n            }\n        }\n\n        if (advice <= TutorialScene.TUTORIAL_1) {\n            this.butPrev.visible = false;\n        }\n        if (advice >= TutorialScene.TUTORIAL_14 || advice === TutorialScene.TUTORIAL_3) {\n            this.butNext.visible = false;\n        }\n    }\n\n    public set tfCountText(str: string) {\n        this.tfCount.text = str;\n    }\n\n    public set tfLabelText(str: string) {\n        this.tfLabel.text = str;\n    }\n\n    public set tfTaskText(str: string) {\n        this.tfTask.text = str;\n    }\n\n    public get butMenu(): Button {\n        return this._butMenu;\n    }\n\n    public get butPrev(): Button {\n        return this._butPrev;\n    }\n\n    public get butNext(): Button {\n        return this._butNext;\n    }\n}","import { BitmapText, Container, Image, Scene } from \"../../exports\";\n\nexport class Quest extends Container {\n\n    public static readonly SHOWING_DELAY: number = 250;\n    public static readonly POS_Y: number = -20;\n\n    private icon: Image;\n    private tfCount: BitmapText;\n    private tfPoints: BitmapText;\n    private iks: Image;\n\n    private _color: number;\n    private _total: number;\n    private _isComplete: boolean;\n\n    constructor(scene: Scene) {\n        super(scene);\n\n        this.iks = this.scene.add.image(5, -30, \"ui\", \"iks\");\n        this.iks.x = 5;\n        this.iks.y = -30;\n        this.add(this.iks);\n\n        this.icon = this.scene.add.image(this.iks.x - 45, this.iks.y + 35, \"ui\", \"next0\");\n        this.icon.setOrigin(.5, 1);\n        this.icon.x = this.iks.x - 45;\n        this.icon.y = this.iks.y + 35;\n        this.add(this.icon);\n\n        this.tfPoints = this.scene.add.bitmapText(this.icon.x, this.icon.y, \"aivaGold\", \"\", 35);\n        this.tfPoints.setOrigin(.5, 0);\n        this.add(this.tfPoints);\n\n        this.tfCount = this.scene.add.bitmapText(this.iks.x + 15, this.iks.y - 3, \"aivaStroke\", \"\", 50);\n        this.tfCount.tint = 0xFFFFCC;\n        this.tfCount.setOrigin(0, .5);\n        this.tfCount.setLeftAlign();\n        this.add(this.tfCount);;\n    }\n\n    public init(color: number, points: number, count: number, delay: number = 0): void {\n        this.scaleX = this.scaleY = 0;\n        this.tfPoints.scaleX = this.tfPoints.scaleY = 1;\n        setTimeout(() => this.show(), delay);\n\n        this._color = color;\n        this._total = count;\n\n        this.icon.setTexture(\"ui\", `next${this._color}`);\n        this.tfPoints.text = points.toString();\n        this.tfCount.text = this._total.toString();\n\n        this.icon.visible = this.tfCount.visible = this.iks.visible = true;\n\n        this.tfPoints.setOrigin(.5, 0);\n        this.tfPoints.x = this.icon.x;\n        this.tfPoints.y = this.icon.y;\n\n        this._isComplete = false;\n\n        // addEventListener(TouchEvent.TOUCH, this.onTouch);\n    }\n\n    private onTouch(evt: TouchEvent): void {\n        // var t: Touch = evt.getTouch(this);\n\n        // if (t) {\n        //     switch (t.phase) {\n        //         case TouchPhase.BEGAN:\n        //             this.refresh(100);\n        //             break;\n        //     }\n        // }\n    }\n\n    private show(): void {\n        this.scene.add.tween({\n            targets: this,\n            scaleX: 1,\n            scaleY: 1,\n            duration: 1200,\n            ease: Phaser.Math.Easing.Elastic.Out,\n            easeParams: [1, .5]\n        });\n    }\n\n    public refresh(count: number): void {\n        if (this._isComplete) {\n            return;\n        }\n\n        this._total -= count;\n        if (this._total <= 0) {\n            this._isComplete = true;\n            this._total = 0;\n            this.scene.add.tween({\n                targets: this,\n                scaleX: 1.3,\n                scaleY: 1.3,\n                duration: 1200,\n                ease: Phaser.Math.Easing.Elastic.Out,\n                easeParams: [1, .5],\n                onComplete: () => this.hideQuest()\n            });\n        }\n        this.tfCount.text = this._total.toString();\n    }\n\n    private hideQuest(): void {\n        this.scene.add.tween({\n            targets: this,\n            scaleX: 0,\n            scaleY: 0,\n            duration: 300,\n            ease: Phaser.Math.Easing.Sine.Out,\n            onComplete: () => this.showPoints()\n        });\n    }\n\n    private showPoints(): void {\n        this.icon.visible = this.tfCount.visible = this.iks.visible = false;\n        this.scaleX = this.scaleY = 1;\n\n        this.tfPoints.setOrigin(.5);\n        this.tfPoints.x = 0;\n        this.tfPoints.y = Quest.POS_Y;\n\n        this.scene.add.tween({\n            targets: this.tfPoints,\n            scaleX: 2,\n            scaleY: 2,\n            duration: 1000,\n            ease: Phaser.Math.Easing.Elastic.Out,\n            easeParams: [1, .5],\n            onComplete: () => this.addPoints()\n        });\n    }\n\n    private addPoints(): void {\n        // _universe.panelQuest.dispatchEventWith(Events.CHALLENGE_COMPLETE, false, this);\n    }\n\n    public free(): void {\n        this.scene.tweens.killTweensOf(this);\n        this.scene.tweens.killTweensOf(this.tfPoints);\n        this.addPoints();\n    }\n\n    public get color(): number { return this._color; }\n    public get total(): number { return this._total; }\n    public get isComplete(): boolean { return this._isComplete; }\n}","import { Container, Scene, BitmapText, TimerEvent } from \"../../exports\";\n\nexport class Tablo extends Container {\n\n    private static COLOR_BLINK: number = 0xFFFF00;\n    private static BLINK_INTERVAL: number = 100;\n\n    private tfAmount: BitmapText;\n    private color: number;\n    private score: number;\n    private scoreLimit: number;\n\n    private timer: TimerEvent;\n\n    constructor(scene: Scene, hAlign: string, color: number = 0xFFFF99, colorBot: number = 0xFF9900, size: number = 60) {\n        super(scene);\n        this.color = color;\n\n        this.tfAmount = this.scene.add.bitmapText(0, 0, \"aivaGold\", \"\", size);\n        if (hAlign === \"left\") {\n            this.tfAmount.setOrigin(0, .5);\n            this.tfAmount.setLeftAlign();\n        } else {\n            this.tfAmount.setOrigin(1, .5);\n            this.tfAmount.setRightAlign();\n        }\n        this.add(this.tfAmount);\n\n        this.timer = this.scene.time.addEvent({\n            delay: Tablo.BLINK_INTERVAL,\n            callback: this.onTick,\n            callbackScope: this,\n            loop: true\n        });\n        this.timer.paused = true;\n\n        this.init();\n    }\n\n    public init(score: number = 0): void {\n        this.score = score - 1;\n    }\n\n    public free(): void {\n        this.tfAmount.text = \"\";\n        this.timer.paused = true;\n    }\n\n    public setScoreNow(score: number): void {\n        this.score = score;\n        this.tfAmount.text = this.score.toString();\n    }\n\n    public setScore(score: number): void {\n        this.scoreLimit = score;\n        this.blick();\n        this.timer.paused = false;\n    }\n\n    public blick(): void {\n        this.tfAmount.tint = Tablo.COLOR_BLINK;\n    }\n\n    public stopBlick(): void {\n        this.tfAmount.tint = 0xFFFFFF;\n    }\n\n    private onTick(): void {\n        if (this.score < this.scoreLimit) {\n            this.score++;\n            this.setScoreNow(this.score);\n        } else {\n            this.stopBlick();\n            this.timer.paused = true;\n        }\n    }\n}","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { BasePlugin, BaseSoundManager, PluginManager, WebAudioSound, WebAudioSoundManager } from \"../../exports\";\n\nexport class AmbientSoundPlugin extends BasePlugin {\n\n    private soundManager: BaseSoundManager;\n\n    private currentSoundId: string;\n    private currentSound: WebAudioSound;\n\n    constructor(pluginManager: PluginManager) {\n        super(pluginManager);\n        this.soundManager = this.game.sound as WebAudioSoundManager;\n    }\n\n    public setActive(soundId: string): void {\n        if (this.currentSoundId !== soundId) {\n            this.stopSound();\n            this.currentSoundId = soundId;\n            this.currentSound = this.soundManager.add(this.currentSoundId, { volume: GameDataModel.volumeMusic, loop: true }) as WebAudioSound;\n            this.playSound();\n        }\n    }\n\n    public stopSound(): void {\n        if (this.currentSound) {\n            this.currentSound.stop();\n        }\n    }\n\n    public playSound(): void {\n        if (this.currentSound) {\n            this.currentSound.play();\n        }\n    }\n\n    public setVolume(volume: number): void {\n        if (this.currentSound) {\n            this.currentSound.setVolume(volume);\n        }\n    }\n}","export const PopupConstants = {\n    ids: {\n        POPUP_APPROVE: \"POPUP_APPROVE\"\n    }\n}","export const PopupEvents = {\n    SHOW_POPUP: \"PopupEvents.SHOW_POPUP\"\n};","import { ContainerWithButtons } from \"../../menu/views/ContainerWithButtons\";\nimport { IPopupOptions } from \"../interfaces/IPopupOptions\";\n\nexport abstract class PopupBase extends ContainerWithButtons {\n\n\tpublic free(): void {\n\t\tsuper.free();\n\t\tthis.destroy(true);\n\t}\n\t\n\tpublic abstract callPopup(data?: IPopupOptions): void;\n}","import { Language } from \"../../content/Language\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { BitmapText, Image } from \"../../exports\";\nimport { PopupBase } from \"./PopupBase\";\nimport { SeasonsEvents } from \"../../panels/events/SeasonsEvents\";\nimport { IPopupOptions } from \"../interfaces/IPopupOptions\";\n\nexport class PopupInfo extends PopupBase {\n\n    private sprite: Image;\n    private imgHeader: Image;\n\n    protected tfMessage: BitmapText;\n    protected sizeForText: number = 35;\n\n    constructor(scene: Phaser.Scene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n        super(scene, x, y, children);\n\n        this.sprite = this.scene.add.image(0, 0, \"ui\", \"messageBoxDialog\");\n        this.sprite.setOrigin(.5);\n\n        this.tfMessage = this.scene.add.bitmapText(0, -50, \"aivaStroke\", \"\", this.sizeForText);\n        this.tfMessage.setOrigin(.5, 0);\n\n        this.imgHeader = this.scene.add.image(0, -35, \"ui\", \"messageBoxDialogHeader0\");\n        this.imgHeader.setOrigin(.5, 1);\n\n        this.add([\n            this.sprite,\n            this.tfMessage,\n            this.imgHeader\n        ]);\n    }\n    \n    public callPopup(data?: IPopupOptions): void {\n        this.onChangeSeason();\n        this.init();\n    }\n\n    protected addListeners(): void {\n        this.scene.game.events.addListener(SeasonsEvents.CHANGE_SEASON, this.onChangeSeason, this);\n        super.addListeners();\n\t}\n\n\tprotected removeListeners(): void {\n        this.scene.game.events.removeListener(SeasonsEvents.CHANGE_SEASON, this.onChangeSeason, this);\n        super.removeListeners();\n    }\n    \n    private onChangeSeason(): void {\n        this.imgHeader.setTexture(\"ui\", \"messageBoxDialogHeader\" + GameDataModel.seasonId);\n    }\n\n    public language(): void {\n        this.tfMessage.text = Language.getText(Language.LOADING);\n    }\n}","import { PopupInfo } from \"./PopupInfo\";\nimport { Button } from \"../../ui/views/Button\";\nimport { Language } from \"../../content/Language\";\nimport { LocalStorageUtils } from \"../../utils/LocalStorageUtils\";\nimport { IPopupOptions } from \"../interfaces/IPopupOptions\";\n\nexport class PopupYesNo extends PopupInfo {\n\n    private btnYes: Button;\n    private btnNo: Button;\n\n    private yesFunction: () => void;\n    private noFunction: () => void;\n\n    constructor(scene: Phaser.Scene, x?: number, y?: number, children?: Phaser.GameObjects.GameObject[]) {\n        super(scene, x, y, children);\n\n        this.tfMessage.y = -40;\n\n        this.btnYes = new Button(this.scene, \"btnGreenPoint\", \"iconYes\", () => this.answerYes());\n        this.btnYes.x = -70;\n        this.btnYes.y = 50;\n        this.arrButtons.push(this.btnYes);\n\n        this.btnNo = new Button(this.scene, \"btnPinkPoint\", \"iconNo\", () => this.answerNo());\n        this.btnNo.x = 70;\n        this.btnNo.y = 50;\n        this.arrButtons.push(this.btnNo);\n\n        this.add([\n            this.btnYes,\n            this.btnNo\n        ]);\n    }\n\n    public callPopup(data: IPopupOptions): void {\n        if (data.yes) {\n            this.setYes(data.yes);\n        }\n        if (data.no) {\n            this.setNo(data.no);\n        }\n        this.language();\n        super.callPopup();\n    }\n\n    public setYes(yesFunction: () => void): void {\n        this.yesFunction = yesFunction;\n    }\n\n    public setNo(noFunction: () => void): void {\n        this.noFunction = noFunction;\n    }\n\n    private answerYes(): void {\n        if (this.yesFunction) {\n            this.yesFunction();\n            this.free();\n        } else {\n            console.warn(\"PopupYesNo: Функция answerYes не назначена!\");\n            this.answerNo();\n        }\n    }\n\n    public answerNo(): void {\n        if (this.noFunction) {\n            this.noFunction();\n        }\n        this.free();\n    }\n\n    public language(): void {\n        this.tfMessage.text = Language.getText(Language.ARE_YOU_SURE);\n    }\n}","export const ScenesConstants = {\n    names: {\n        manager: \"SceneManager\",\n        boot: \"Boot\",\n        background: \"Background\",\n        ui: \"ui\",\n        popups: \"Popups\",\n        preloader: \"Preloader\",\n        login: \"Login\",\n        menu: \"Menu\",\n        tutorial: \"Tutorial\",\n        game: \"Game\",\n        universe: \"UniverseScene\"\n    }\n};","export const SceneEvents = {\n    CHANGE_SCENE: \"SceneEvents.CHANGE_SCENE\",\n    MUTE_SOUNDS: \"SceneEvents.MUTE_SOUNDS\"\n};","export const TutorialSceneEvents = {\n    AUTO_CHANGE_ADVICE: \"TutorialSceneEvents.AUTO_CHANGE_ADVICE\"\n};","export const UISceneEvents = {\n    CHANGE_VISIBILITY_SEASONS_PANEL: \"UISceneEvents.CHANGE_VISIBILITY_SEASONS_PANEL\",\n    CHANGE_VISIBILITY_PROFILE_BUTTON: \"UISceneEvents.CHANGE_VISIBILITY_PROFILE_BUTTON\",\n    CHANGE_VISIBILITY_SOCIAL_BUTTONS: \"UISceneEvents.CHANGE_VISIBILITY_SOCIAL_BUTTONS\",\n    CHANGE_VISIBILITY_MAP_CELLS_TOGGLE: \"UISceneEvents.CHANGE_VISIBILITY_MAP_CELLS_TOGGLE\"\n};","import { IAnimatable } from \"../interfaces/IAnimatable\";\n\nexport class EnterFrameManager {\n\n    private static objects: IAnimatable[] = [];\n    private static countObjects: number = 0;\n\n    public static add(object: IAnimatable): void {\n        const objectIndex: number = EnterFrameManager.objects.indexOf(object);\n        if (objectIndex < 0) {\n            EnterFrameManager.objects.push(object);\n            EnterFrameManager.countObjects = EnterFrameManager.objects.length;\n        }\n    }\n\n    public static remove(object: IAnimatable): void {\n        const objectIndex: number = EnterFrameManager.objects.indexOf(object);\n        if (objectIndex >= 0) {\n            EnterFrameManager.objects.splice(objectIndex, 1);\n            EnterFrameManager.countObjects = EnterFrameManager.objects.length;\n        }\n    }\n\n    public static clear(): void {\n        EnterFrameManager.objects.length = 0;\n        EnterFrameManager.countObjects = EnterFrameManager.objects.length;\n    }\n\n    public static update(deltaTime: number): void {\n        const deltaInSeconds: number = deltaTime * .001;\n        for (let i: number = 0; i < EnterFrameManager.countObjects; i++) {\n            EnterFrameManager.objects[i].onUpdate(deltaInSeconds);\n        }\n    }\n}","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { Image } from \"../../exports\";\nimport { SeasonsEvents } from \"../../panels/events/SeasonsEvents\";\nimport { SeasonsUtils } from \"../../utils/SeasonsUtils\";\nimport { ScenesConstants } from \"../constants\";\nimport { BaseScene } from \"./BaseScene\";\n\nexport class BackgroundScene extends BaseScene {\n    // todo: fill or fit?\n    // protected isMinScale: boolean = false;\n\n    private background: Image;\n\n    constructor() {\n        super(ScenesConstants.names.background);\n    }\n\n    protected buildScene(): void {\n        this.setBackground(\"preloader\");\n        this.game.events.addListener(SeasonsEvents.CHANGE_SEASON, this.onChangeBackground, this);\n    }\n\n    public setBackground(backgroundId: string): void {\n        if (!this.background) {\n            this.background = this.add.image(this.gameWidth / 2, this.gameHeight / 2, backgroundId);\n            this.background.setScale(1.17);\n            this.background.setOrigin(.5, .5);\n            this.resizeContainer.add(this.background);\n        } else {\n            this.background.setTexture(\"backgrounds\", backgroundId);\n        }\n    }\n\n    private onChangeBackground(): void {\n        this.setBackground(\"background\" + SeasonsUtils.getSeasonNameByID(GameDataModel.seasonId));\n    }\n}","import { App } from \"../../App\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { Container, Graphics, Scene, Zone } from \"../../exports\";\nimport { IScale } from \"../interfaces/IScale\";\n\nexport abstract class BaseScene extends Scene {\n\n    private readonly RESIZE_AREA_OPACITY: number = 0;\n\n    public game: App;\n\n    private _resizeContainer: Container;\n    protected resizeZone: Zone;\n\n    protected isMinScale: boolean = true;\n    protected _isCreated: boolean = false;\n    protected autoActivated: boolean = true;\n\n    private _localScale: number;\n    private _globalScale: number;\n\n    protected preload(): void {\n\n        const resizeArea: Graphics = this.add.graphics();\n        resizeArea.fillStyle(0xFF00FF, this.RESIZE_AREA_OPACITY);\n        resizeArea.fillRect(0, 0, this.gameWidth, this.gameHeight);\n\n        this.resizeZone = this.add.zone(0, 0, this.gameWidth, this.gameHeight);\n\n        this._resizeContainer = this.add.container(0, 0, resizeArea);\n        this.preResize();\n    }\n\n    protected create(): void {\n        if (!this.isCreated) {\n            if (__DEV__) {\n                const windowId = `s_${this.sys.config}`;\n                (window as any)[windowId] = this;\n            }\n            this.buildScene();\n            this._isCreated = true;\n            if (this.autoActivated) {\n                this.activate();\n            }\n        }\n    }\n\n    public launchInnerScenes(): void {\n\n    }\n\n    protected abstract buildScene(): void;\n\n    public activate(): void {\n        this.preResize();\n    }\n\n    public deactivate(): void {\n\n    }\n\n    private preResize(): void {\n        const width: number = this.game.canvas.width;\n        const height: number = this.game.canvas.height;\n        const scaleX: number = width / this.gameWidth;\n        const scaleY: number = height / this.gameHeight;\n\n        const scale: IScale = {\n            scaleMin: Math.min(scaleX, scaleY),\n            scaleMax: Math.max(scaleX, scaleY)\n        };\n\n        this.resize(width, height, scale);\n    }\n\n    public resize(width: number, height: number, scaleMinMax: IScale): void {\n        if (this.resizeContainer) {\n\n            this._localScale = this.isMinScale ? scaleMinMax.scaleMin : scaleMinMax.scaleMax;\n            this._globalScale = 1 / this._localScale;\n\n            this.resizeContainer.scale = this.localScale;\n\n            Phaser.Display.Align.In.Center(\n                this.resizeContainer,\n                this.add.zone(width * .5, height * .5, width, height)\n            );\n\n            const offsetX: number = (this.resizeZone.width * .5) * this.localScale;\n            const offsetY: number = (this.resizeZone.height * .5) * this.localScale;\n\n            this.resizeContainer.x -= offsetX;\n            this.resizeContainer.y -= offsetY;\n        }\n    }\n\n    public get gameWidth(): number {\n        return this.sys.game.config.width as number;\n    }\n\n    public get gameHeight(): number {\n        return this.sys.game.config.height as number;\n    }\n\n    public get gameDataModel(): GameDataModel {\n        return this.game.gameDataModel;\n    }\n\n    public get isCreated(): boolean {\n        return this._isCreated;\n    }\n\n    public get x(): number {\n        return this.resizeContainer.x;\n    }\n    \n    public get y(): number {\n        return this.resizeContainer.y;\n    }\n\n    public get localScale(): number {\n        return this._localScale;\n    }\n    \n    public get globalScale(): number {\n        return this._globalScale;\n    }\n\n    public get resizeContainer(): Container {\n        return this._resizeContainer;\n    }\n}","import { LoadingAssetsModel } from \"../../data/models/LoadingAssetsModel\";\nimport { Scene } from \"../../exports\";\nimport { ScenesConstants } from \"../constants\";\n\nexport class BootScene extends Scene {\n\n    constructor() {\n        super(ScenesConstants.names.boot);\n    }\n\n    protected preload(): void {\n        (new LoadingAssetsModel(this)).loadPreloadAssets();\n    }\n\n    protected create(): void {\n        this.scene.start(ScenesConstants.names.manager);\n\n        this.scene.start(ScenesConstants.names.background);\n        this.scene.start(ScenesConstants.names.preloader);\n        this.scene.start(ScenesConstants.names.popups);\n\n        this.scene.remove(ScenesConstants.names.boot);\n    }\n}\n","import { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { MapView } from \"../../map/views/MapView\";\nimport { Panel } from \"../../panels/views/Panel\";\nimport { AmbientSoundPlugin } from \"../../plugins/sounds/AmbientSoundPlugin\";\nimport { ScenesConstants } from \"../constants\";\nimport { BaseScene } from \"./BaseScene\";\nimport { PanelQuest } from \"../../panels/views/PanelQuest\";\nimport { MapModel } from \"../../map/models/MapModel\";\n\nexport class GameScene extends BaseScene {\n\n    private ambientSoundPlugin: AmbientSoundPlugin;\n\n    private gameProcessModel: GameProcessModel;\n    \n    private panel: Panel;\n    private panelQuest: PanelQuest;\n    // private _gamePanel: GamePanel;\n\n    private mapView: MapView;\n\n    protected autoActivated: boolean = false;\n    \n    constructor() {\n        super(ScenesConstants.names.game);\n    }\n\n    protected buildScene(): void {\n        this.ambientSoundPlugin = this.plugins.get(\"ambientSoundPlugin\") as AmbientSoundPlugin;\n        this.gameProcessModel = new GameProcessModel(this.game);\n\n        this.panel = new Panel(this);\n        this.panelQuest = new PanelQuest(this);\n        this.panelQuest.y = MapModel.MAP_POS + MapModel.MAP_CELL_SIZE * MapModel.MAP_HEIGHT_MAX;\n        this.panelQuest.setPointsForMoveble();\n\n        // this._gamePanel = new GamePanel();\n        // this._gamePanel.x = 35;\n        // this._gamePanel.y = 45;\n        // this._gamePanel.init(new Point(this._gamePanel.x, this._gamePanel.y - 100), new Point(this._gamePanel.x, this._gamePanel.y));\n        // this._gamePanel.hide();\n        // this._gamePanel.addEventListener(Events.CHANGE_VISIBILITY_CELL, this.changeVisibilityCell);\n\n        this.panel.free();\n        this.panelQuest.free();\n        // this._panelTutorial.free();\n    }\n\n    public setMapView(mapView: MapView): void {\n        this.mapView = mapView;\n    }\n\n    public activate(): void {\n        super.activate();\n        this.panel.init();\n        this.panelQuest.reset();\n        this.panelQuest.init();\n        this.panelQuest.startNewQuests();\n\n        this.resizeContainer.add([\n            this.panel,\n            this.mapView,\n            this.panelQuest\n        ]);\n        this.ambientSoundPlugin.setActive(\"gameMusic\");\n\n        this.game.events.addListener(GameProcessEvents.INIT_SCORE, this.onInitScore, this);\n        this.game.events.addListener(GameProcessEvents.UPDATE_SCORE, this.onUpdateScore, this);\n    }\n\n    public deactivate(): void {\n        this.game.events.removeListener(GameProcessEvents.INIT_SCORE, this.onInitScore, this);\n        this.game.events.removeListener(GameProcessEvents.UPDATE_SCORE, this.onUpdateScore, this);\n\n        this.panel.free();\n        this.panelQuest.free();\n\n        this.resizeContainer.remove([\n            this.panel,\n            this.mapView,\n            this.panelQuest\n        ]);\n    }\n\n    private onInitScore(): void {\n        this.panel.scoreInitialize(this.gameProcessModel.score);\n    }\n\n    private onUpdateScore(): void {\n        this.panel.setScore(this.gameProcessModel.score);\n    }\n}\n","import { Language } from \"../../content/Language\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { Actions, Shape } from \"../../exports\";\nimport { LoginEvents } from \"../../login/events/LoginEvents\";\nimport { ILoginData } from \"../../login/interfaces/ILoginData\";\nimport { Profile } from \"../../login/views/Profile\";\nimport { SignIn } from \"../../login/views/SignIn\";\nimport { SignUp } from \"../../login/views/SignUp\";\nimport { SeasonsEvents } from \"../../panels/events/SeasonsEvents\";\nimport { AmbientSoundPlugin } from \"../../plugins/sounds/AmbientSoundPlugin\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\nimport { ScenesConstants } from \"../constants\";\nimport { SceneEvents } from \"../events/SceneEvents\";\nimport { BaseScene } from \"./BaseScene\";\nimport { UISceneEvents } from \"../events/UISceneEvents\";\n\nexport class LoginScene extends BaseScene {\n\n    private ambientSoundPlugin: AmbientSoundPlugin;\n\n    private readonly RADIUS_BLOW: number = 210;\n\n    private readonly monsterDefaultNames: { [key: string]: string } = {\n        r: Language.getText(Language.TITLE_HELP9),\n        o: Language.getText(Language.TITLE_HELP8),\n        y: Language.getText(Language.TITLE_HELP14),\n        g: Language.getText(Language.TITLE_HELP13),\n        b: Language.getText(Language.TITLE_HELP10),\n        p: Language.getText(Language.TITLE_HELP11),\n        d: Language.getText(Language.TITLE_HELP12)\n    };\n\n    private signIN: SignIn;\n    private signUP: SignUp;\n\n    private vCellsPlayers: Profile[] = [];\n\n    constructor() {\n        super(ScenesConstants.names.login);\n    }\n\n    protected preload(): void {\n        super.preload();\n\n        this.anims.create({ key: \"addUser\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"addUser\", end: 39, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"blueOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"blueOut\", end: 73, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"orangeOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"orangeOut\", end: 82, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"redOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"redOut\", end: 60, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"greenOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"greenOut\", end: 91, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"yellowOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"yellowOut\", end: 58, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"darkOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"darkOut\", end: 54, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"purpleOut\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"purpleOut\", end: 7, zeroPad: 4 }), repeat: -1 });\n\n        this.anims.create({ key: \"blueUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"blueUp\", end: 54, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"orangeUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"orangeUp\", end: 21, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"redUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"redUp\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"greenUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"greenUp\", end: 29, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"yellowUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"yellowUp\", end: 58, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"darkUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"darkUp\", end: 12, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"purpleUp\", frames: this.anims.generateFrameNames(\"profiles\", { prefix: \"purpleUp\", end: 19, zeroPad: 4 }), repeat: -1 });\n    }\n\n    protected buildScene(): void {\n        this.ambientSoundPlugin = this.plugins.get(\"ambientSoundPlugin\") as AmbientSoundPlugin;\n\n        this.game.events.emit(SeasonsEvents.CHANGE_SEASON);\n\n        // панель входа игрока\n        this.signIN = new SignIn(this, this.gameWidth / 2, this.gameHeight / 2);\n        this.resizeContainer.add(this.signIN);\n\n        // панель регистрации нового игрока\n        this.signUP = new SignUp(this, this.gameWidth / 2, this.gameHeight / 2);\n        this.resizeContainer.add(this.signUP);\n\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            const profile: Profile = new Profile(this);\n            profile.init();\n            this.resizeContainer.add(profile);\n            this.vCellsPlayers.push(profile);\n        }\n        const circle: Shape.Circle = new Shape.Circle(this.gameWidth * .5, this.gameHeight * .5, this.RADIUS_BLOW);\n        Actions.PlaceOnCircle(this.vCellsPlayers, circle);\n    }\n    \n    public activate(): void {\n        super.activate();\n        this.ambientSoundPlugin.setActive(\"menuMusic\");\n        \n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_SEASONS_PANEL, true);\n\n        this.refreshCells();\n        this.freeSigns();\n\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            this.vCellsPlayers[indexPlayer].init();\n        }\n        this.events.addListener(LoginEvents.BACK_TO_LOGIN, this.onBack, this);\n        this.events.addListener(LoginEvents.SELECT_PROFILE, this.onSelectProfile, this);\n        this.events.addListener(LoginEvents.CREATE_PROFILE, this.onCreateProfile, this);\n        this.events.addListener(LoginEvents.DELETE_PROFILE, this.onDeleteProfile, this);\n        this.events.addListener(LoginEvents.PLAY_GAME, this.onPlayGame, this);\n\n        this.language();\n    }\n\n    public deactivate(): void {\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            this.vCellsPlayers[indexPlayer].free();\n        }\n        this.events.removeListener(LoginEvents.BACK_TO_LOGIN, this.onBack, this);\n        this.events.removeListener(LoginEvents.SELECT_PROFILE, this.onSelectProfile, this);\n        this.events.removeListener(LoginEvents.CREATE_PROFILE, this.onCreateProfile, this);\n        this.events.removeListener(LoginEvents.DELETE_PROFILE, this.onDeleteProfile, this);\n        this.events.removeListener(LoginEvents.PLAY_GAME, this.onPlayGame, this);\n    }\n\n    private freeSigns(): void {\n        this.signUP.free();\n        this.signIN.free();\n    }\n\n    private refreshCells(): void {\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            this.vCellsPlayers[indexPlayer].setProfileData(\n                GameDataModel.allPlayersData[indexPlayer].name,\n                GameDataModel.allPlayersData[indexPlayer].monster,\n                indexPlayer\n            );\n        }\n    }\n\n    private onSelectProfile(id: number): void {\n        GameDataModel.playerId = id;\n\n        if (GameDataModel.playerData.name !== \"???\") {\n            const animName: string = ColorIDsUtils.getColorFromID(GameDataModel.playerData.monster);\n            const playerName: string = GameDataModel.playerData.name;\n            this.signIN.resetData(animName, playerName);\n            this.signIN.init();\n        } else {\n            this.signUP.init();\n        }\n\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            this.vCellsPlayers[indexPlayer].hide();\n        }\n    }\n\n    public onBack(): void {\n        for (let indexPlayer: number = 0; indexPlayer < GameDataModel.COUNT_PLAYERS; indexPlayer++) {\n            this.vCellsPlayers[indexPlayer].show();\n        }\n    }\n\n    private onCreateProfile(playerData: ILoginData): void {\n        GameDataModel.playerData.name = playerData.playerName.length === 0\n            ? this.choiseName(playerData.playerColor)\n            : this.cutName(playerData.playerName);\n        GameDataModel.playerData.monster = playerData.playerColor;\n\n        this.gameDataModel.saveData();\n\n        this.refreshCells();\n        this.onBack();\n    }\n\n    private onDeleteProfile(): void {\n        this.gameDataModel.deletePlayerData(GameDataModel.playerId);\n\n        this.refreshCells();\n        this.onBack();\n    }\n\n    public onPlayGame(): void {\n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_SEASONS_PANEL, false);\n        this.add.tween({\n            targets: this,\n            alpha: 0,\n            duration: 750,\n            onComplete: () => {\n                this.loadMenu();\n            }\n        });\n    }\n\n    private choiseName(colorChar: string): string {\n        return this.monsterDefaultNames[colorChar];\n    }\n\n    private cutName(playerName: string): string {\n        return playerName.substr(0, 10).toUpperCase();\n    }\n\n    public language(): void {\n        this.signUP.language();\n        this.signIN.language();\n    }\n\n    private loadMenu(): void {\n        // _game.loadGameMenu(this.arrPlayersData[_id][Game.PROFILE_NAME],\n        //     this.arrPlayersData[_id][Game.PROFILE_MONSTER],\n        //     _id);\n        // this.free();\n        this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.menu);\n    }\n}\n","import { MenuConstants } from \"../../menu/constants\";\nimport { MenuEvents } from \"../../menu/events/MenuEvents\";\nimport { ResetMenuManager } from \"../../menu/managers/ResetMenuManager\";\nimport { MainMenu } from \"../../menu/views/MainMenu\";\nimport { OptionsMenu } from \"../../menu/views/OptionsMenu\";\nimport { ScoreMenu } from \"../../menu/views/ScoreMenu\";\nimport { SubMenu } from \"../../menu/views/SubMenu\";\nimport { TitleMenu } from \"../../menu/views/TitleMenu\";\nimport { AmbientSoundPlugin } from \"../../plugins/sounds/AmbientSoundPlugin\";\nimport { ScenesConstants } from \"../constants\";\nimport { UISceneEvents } from \"../events/UISceneEvents\";\nimport { BaseScene } from \"./BaseScene\";\nimport { SceneEvents } from \"../events/SceneEvents\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\n\nexport class MenuScene extends BaseScene {\n\n    private title: TitleMenu;\n\n    private mainMenu: MainMenu;\n    private scoreMenu: ScoreMenu;\n    private optionsMenu: OptionsMenu;\n\n    private resetMenuManager: ResetMenuManager;\n    private gameProcessModel: GameProcessModel;\n    \n    private ambientSoundPlugin: AmbientSoundPlugin;\n\n    constructor() {\n        super(ScenesConstants.names.menu);\n    }\n\n    protected preload(): void {\n        super.preload();\n        this.anims.create({ key: \"isEscape\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"isEscape\", end: 9, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"notEscape\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"notEscape\", end: 3, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"d2\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"d2\", end: 7, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"animMusic\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"animMusic\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"animSounds\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"animSounds\", end: 31, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"langEn\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"langEn\", end: 91, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"langRu\", frames: this.anims.generateFrameNames(\"menu\", { prefix: \"langRu\", end: 91, zeroPad: 4 }), repeat: -1 });\n        \n        this.anims.create({ key: \"activeR1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeR1\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeR2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeR2\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeR3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeR3\", end: 11, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeO1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeO1\", end: 29, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeO2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeO2\", end: 29, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeO3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeO3\", end: 21, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeY1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeY1\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeY2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeY2\", end: 15, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeY3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeY3\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeG1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeG1\", end: 24, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeG2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeG2\", end: 7, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeG3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeG3\", end: 59, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeB1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeB1\", end: 18, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeB2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeB2\", end: 12, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeB3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeB3\", end: 74, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeP1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeP1\", end: 10, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeP2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeP2\", end: 11, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeP3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeP3\", end: 27, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeD1\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeD1\", end: 12, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeD2\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeD2\", end: 15, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"activeD3\", frames: this.anims.generateFrameNames(\"scores\", { prefix: \"activeD3\", end: 13, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"spark\", frames: this.anims.generateFrameNames(\"spark\", { prefix: \"spark\", end: 19, zeroPad: 4 }), repeat: 0 });\n    }\n\n    protected buildScene(): void {\n        this.ambientSoundPlugin = this.plugins.get(\"ambientSoundPlugin\") as AmbientSoundPlugin;\n\n        this.resetMenuManager = new ResetMenuManager(this.game);\n        this.gameProcessModel = new GameProcessModel(this.game);\n\n        this.title = new TitleMenu(this);\n        this.title.x = this.gameWidth / 2;\n        this.title.y = 25;\n        this.resizeContainer.add(this.title);\n\n        this.scoreMenu = new ScoreMenu(this);\n        this.resizeContainer.add(this.scoreMenu);\n\n        this.optionsMenu = new OptionsMenu(this);\n        this.resizeContainer.add(this.optionsMenu);\n\n        this.mainMenu = new MainMenu(this);\n        this.resizeContainer.add(this.mainMenu);\n    }\n\n    // спрятать все меню\n    private hideAllMenus(): void {\n        this.hideSubmenu(MenuConstants.subMenus.MAIN);\n        this.hideSubmenu(MenuConstants.subMenus.SCORES);\n        this.hideSubmenu(MenuConstants.subMenus.OPTIONS);\n    }\n\n    // спрятать любое меню\n    public showSubmenu(menuId: number): void {\n        this.getSubMenuById(menuId).init();\n    }\n\n    // спрятать любое меню\n    public hideSubmenu(menuId: number): void {\n        this.getSubMenuById(menuId).hide();\n    }\n\n    private getSubMenuById(menuId: number): SubMenu {\n        switch (menuId) {\n            case MenuConstants.subMenus.MAIN:\n                return this.mainMenu;\n\n            case MenuConstants.subMenus.OPTIONS:\n                return this.optionsMenu;\n\n            case MenuConstants.subMenus.SCORES:\n                return this.scoreMenu;\n        }\n        return this.mainMenu;\n    }\n\n    // // закрыть меню\n    // public exit(): void {\n    //     hideAllMenus();\n    //     free();\n\n    //     /*if(AdMobExample.isAdAdded)\n    //         Main.admob.destroyAd();*/\n    // }\n\n    // открыть меню\n    public activate(): void {\n        super.activate();\n        this.ambientSoundPlugin.setActive(\"menuMusic\");\n        \n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_PROFILE_BUTTON, true);\n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_SOCIAL_BUTTONS, true);\n\n        this.game.events.addListener(MenuEvents.SHOW_SUBMENU, this.showSubmenu, this);\n        this.game.events.addListener(MenuEvents.HIDE_SUBMENU, this.hideSubmenu, this);\n\n        this.game.events.addListener(GameProcessEvents.START_TUTORIAL, this.startTutorial, this);\n        this.game.events.addListener(GameProcessEvents.STAT_NEW_GAME, this.startNewGame, this);\n        this.game.events.addListener(GameProcessEvents.CONTINUE_GAME, this.continueGame, this);\n\n        this.resetMenuManager.init();\n        this.title.init();\n\n        this.hideAllMenus();\n        // this.createButterfly();\n\n        this.showSubmenu(MenuConstants.subMenus.MAIN);\n\n        /*if(Main.admob != null)\n            Main.admob.showAdTopCenter();\n    \t\n        if(Main.admob == null)\n            Main.free();\n    \t\n        if(AdMob.isSupported)\n            Main.admob.showSmartBanner();*/\n    }\n\n    public deactivate(): void {\n        this.resetMenuManager.free();\n        this.title.free();\n\n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_SOCIAL_BUTTONS, false);\n        this.game.events.removeListener(MenuEvents.SHOW_SUBMENU, this.showSubmenu, this);\n        this.game.events.removeListener(MenuEvents.HIDE_SUBMENU, this.hideSubmenu, this);\n\n        this.game.events.removeListener(GameProcessEvents.START_TUTORIAL, this.startTutorial, this);\n        this.game.events.removeListener(GameProcessEvents.STAT_NEW_GAME, this.startNewGame, this);\n        this.game.events.removeListener(GameProcessEvents.CONTINUE_GAME, this.continueGame, this);\n    }\n\n    public language(): void {\n        this.mainMenu.language();\n        this.scoreMenu.language();\n        this.optionsMenu.language();\n    }\n\n    // /*\n    //  * создаем бабочек в меню\n    //  */\n    // private createButterfly(): void {\n    //     var countFly: number = AMath.random(3, 7);\n    //     var posX: Number;\n    //     var posY: Number;\n\n    //     while (countFly > 0) {\n    //         posX = AMath.random(0, App.SCR_W);\n    //         posY = AMath.random(0, App.SCR_H);\n\n    //         // добавляем бабочку\n    //         var fly: ButterflyBase;\n    //         var strFly: string = ButterflyBase.arrColorFly[AMath.random(0, ButterflyBase.arrColorFly.length - 1)];\n\n    //         //создание бабочки\n    //         switch (strFly) {\n    //             case \"p\":\n    //                 fly = ComponentPool.get(PurpleFly);\n    //                 break;\n    //             case \"f\":\n    //                 fly = ComponentPool.get(FireFly);\n    //                 break;\n    //             case \"s\":\n    //                 fly = ComponentPool.get(SkyFly);\n    //                 break;\n    //             case \"b\":\n    //                 fly = ComponentPool.get(BlueFly);\n    //                 break;\n    //             case \"w\":\n    //                 fly = ComponentPool.get(WhiteFly);\n    //                 break;\n    //         }\n\n    //         fly.init(posX, posY);\n    //         countFly--;\n    //     }\n    // }\n\n    private startTutorial(): void {\n        this.gameProcessModel.isTutorial = true;\n        this.gameProcessModel.isNewGame = false;\n        this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.universe);\n    }\n\n    private startNewGame(): void {\n        this.gameProcessModel.isTutorial = false;\n        this.gameProcessModel.isNewGame = true;\n        this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.universe);\n    }\n\n    private continueGame(): void {\n        this.gameProcessModel.isTutorial = false;\n        this.gameProcessModel.isNewGame = false;\n        this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.universe);\n    }\n}\n","import { PopupConstants } from \"../../popups/constants\";\nimport { PopupEvents } from \"../../popups/events/PopupEvents\";\nimport { IPopupOptions } from \"../../popups/interfaces/IPopupOptions\";\nimport { PopupBase } from \"../../popups/views/PopupBase\";\nimport { PopupYesNo } from \"../../popups/views/PopupYesNo\";\nimport { ScenesConstants } from \"../constants\";\nimport { BaseScene } from \"./BaseScene\";\n\nexport class PopupsScene extends BaseScene {\n\n    private popup: PopupBase;\n\n    constructor() {\n        super(ScenesConstants.names.popups);\n    }\n\n    protected buildScene(): void {\n        this.game.events.addListener(PopupEvents.SHOW_POPUP, this.onShowPopup, this);\n    }\n\n    private onShowPopup(popupOptions: IPopupOptions): void {\n        switch (popupOptions.id) {\n            case PopupConstants.ids.POPUP_APPROVE:\n                this.callApprovePopup(popupOptions);\n                break;\n        }\n\n        this.scene.bringToTop(ScenesConstants.names.popups);\n    }\n\n    private callApprovePopup(popupOptions: IPopupOptions): void {\n        this.popup = new PopupYesNo(this, this.gameWidth * .5, this.gameHeight * .5) as PopupYesNo;\n        this.popup.callPopup(popupOptions);\n        this.resizeContainer.add(this.popup);\n    }\n}\n","import { LoadingAssetsModel } from \"../../data/models/LoadingAssetsModel\";\nimport { BitmapText, Container, File } from \"../../exports\";\nimport { ScenesConstants } from \"../constants\";\nimport { SceneEvents } from \"../events/SceneEvents\";\nimport { BaseScene } from \"./BaseScene\";\n\nexport class PreloaderScene extends BaseScene {\n\n    private percentText: BitmapText;\n\n    protected autoActivated = false;\n\n    constructor() {\n        super(ScenesConstants.names.preloader);\n    }\n\n    protected preload(): void {\n        super.preload();\n\n        this.createLoadingScene();\n\n        this.addListeners();\n        (new LoadingAssetsModel(this)).loadInitialAssets();\n    }\n\n    private setAnims(): void {\n        this.anims.create({ key: \"ingameB\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameB\", end: 38, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"ingameD\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameD\", end: 37, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"ingameG\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameG\", end: 34, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"ingameO\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameO\", end: 21, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"ingameP\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameP\", end: 17, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"ingameR\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameR\", end: 37, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"ingameY\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"ingameY\", end: 27, zeroPad: 4 }), repeat: 0 });\n\n        this.anims.create({ key: \"outgameB\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameB\", end: 23, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outgameD\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameD\", end: 22, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outgameG\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameG\", end: 23, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outgameO\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameO\", end: 23, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outgameP\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameP\", end: 23, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outgameR\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameR\", end: 23, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outgameY\", frames: this.anims.generateFrameNames(\"monstersInit1\", { prefix: \"outgameY\", end: 23, zeroPad: 4 }), repeat: 0 });\n\n        this.anims.create({ key: \"abortB\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortB\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"abortD\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortD\", end: 24, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"abortG\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortG\", end: 24, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"abortO\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortO\", end: 32, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"abortP\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortP\", end: 24, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"abortR\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortR\", end: 12, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"abortY\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"abortY\", end: 23, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"escapeD\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"escapeD\", end: 21, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"escapeStopD\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"escapeStopD\", end: 9, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"insultB\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultB\", end: 26, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"insultD\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultD\", end: 34, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"insultG\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultG\", end: 24, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"insultO\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultO\", end: 57, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"insultP\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultP\", end: 37, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"insultR\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultR\", end: 43, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"insultY\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"insultY\", end: 21, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"sparkBall\", frames: this.anims.generateFrameNames(\"monstersInit2\", { prefix: \"sparkBall\", end: 26, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"clickB\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickB\", end: 7, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickD\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickD\", end: 26, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickG\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickG\", end: 6, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickO\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickO\", end: 4, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickP\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickP\", end: 9, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickR\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickR\", end: 8, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickY\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickY\", end: 6, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"clickStopB\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopB\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickStopD\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopD\", end: 9, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickStopG\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopG\", end: 4, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickStopO\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopO\", end: 21, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickStopP\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopP\", end: 7, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickStopR\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopR\", end: 5, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"clickStopY\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"clickStopY\", end: 39, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"loaderMagic\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"loaderMagic\", end: 15, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"moveD\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"moveD\", end: 13, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"moveG\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"moveG\", end: 13, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"moveO\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"moveO\", end: 13, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"moveP\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"moveP\", end: 13, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"moveR\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"moveR\", end: 13, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"moveY\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"moveY\", end: 13, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"portalB\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"portalB\", end: 13, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"outB\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outB\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outD\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outD\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outG\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outG\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outO\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outO\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outP\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outP\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outR\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outR\", end: 0, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"outY\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"outY\", end: 0, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"overB\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overB\", end: 9, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"overD\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overD\", end: 8, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"overG\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overG\", end: 4, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"overO\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overO\", end: 7, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"overP\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overP\", end: 9, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"overR\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overR\", end: 64, zeroPad: 4 }), repeat: -1 });\n        this.anims.create({ key: \"overY\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overY\", end: 7, zeroPad: 4 }), repeat: -1 });\n        \n        this.anims.create({ key: \"overStopB\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopB\", end: 3, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"overStopD\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopD\", end: 7, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"overStopG\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopG\", end: 7, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"overStopO\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopO\", end: 5, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"overStopP\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopP\", end: 3, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"overStopR\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopR\", end: 9, zeroPad: 4 }), repeat: 0 });\n        this.anims.create({ key: \"overStopY\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"overStopY\", end: 9, zeroPad: 4 }), repeat: 0 });\n        \n        this.anims.create({ key: \"particle\", frames: this.anims.generateFrameNames(\"monstersInit3\", { prefix: \"particle\", end: 2, zeroPad: 4 }), repeat: 0 });\n    }\n\n    protected buildScene(): void {\n        this.scene.start(ScenesConstants.names.ui);\n        this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.login);\n\n        this.scene.remove(ScenesConstants.names.preloader);\n    }\n\n    private createLoadingScene(): void {\n        this.percentText = this.add.bitmapText(0, 0, \"aivaStroke\", \"0%\", 120);\n        this.percentText.setOrigin(.5, .5).setCenterAlign();\n\n        const loadingContainer: Container = this.add.container(0, 0, [\n            this.percentText\n        ]);\n        Phaser.Display.Align.In.Center(loadingContainer, this.add.zone(this.gameWidth / 2, this.gameHeight / 2, this.gameWidth, this.gameHeight));\n\n        this.resizeContainer.add(loadingContainer);\n    }\n\n    private addListeners(): void {\n        this.load.on(\"progress\", this.onProgress, this);\n        this.load.on(\"fileprogress\", this.onFileProgress, this);\n        this.load.on(\"complete\", this.ready, this);\n    }\n\n    private removeListeners(): void {\n        this.load.off(\"progress\", this.onProgress, this);\n        this.load.off(\"fileprogress\", this.onFileProgress, this);\n        this.load.off(\"complete\", this.ready, this);\n    }\n\n    private onProgress(value: number): void {\n        this.percentText.setText(Math.round(value * 100) + \"%\");\n    }\n    \n    private onFileProgress(file: File): void {\n        if (file.percentComplete === 1) {\n            console.log(\"Loaded asset: \" + file.key + \".\" + file.type);\n        }\n    }\n\n    private ready(): void {\n        this.setAnims();\n        this.removeListeners();\n        this.percentText.destroy();\n    }\n}\n","import { Scene } from \"../../exports\";\nimport { ScenesConstants } from \"../constants\";\nimport { SceneEvents } from \"../events/SceneEvents\";\nimport { BaseScene } from \"./BaseScene\";\n\nexport class SceneManager extends Scene {\n\n    private currentSceneId: string;\n\n    constructor() {\n        super(ScenesConstants.names.manager);\n    }\n\n    public init(): void {\n        this.game.events.addListener(SceneEvents.CHANGE_SCENE, this.onChangeScene, this);\n    }\n\n    public onChangeScene(sceneId: string): void {\n        this.stopCurrentScene();\n        this.currentSceneId = sceneId;\n        this.startNewScene();\n    }\n\n    private stopCurrentScene(): void {\n        if (this.currentSceneId) {\n            this.scene.setActive(false, this.currentSceneId);\n            this.scene.setVisible(false, this.currentSceneId);\n\n            const currentScene: BaseScene = this.game.scene.getScene(this.currentSceneId) as BaseScene;\n            currentScene.deactivate();\n        }\n    }\n\n    private startNewScene(): void {\n        const newScene: BaseScene = this.game.scene.getScene(this.currentSceneId) as BaseScene;\n        if (newScene.isCreated) {\n            newScene.activate();\n        } else {\n            newScene.launchInnerScenes();\n            this.scene.launch(this.currentSceneId);\n        }\n        this.scene.setActive(true, this.currentSceneId);\n        this.scene.setVisible(true, this.currentSceneId);\n    }\n}","import { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { Point } from \"../../exports\";\nimport { MapEvents } from \"../../map/events/MapEvents\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { MapView } from \"../../map/views/MapView\";\nimport { MonsterColor, MonsterConstants } from \"../../monsters/constants\";\nimport { TutorialEvents } from \"../../panels/events/TutorialEvents\";\nimport { PanelTutorialBottom } from \"../../panels/views/PanelTutorialBottom\";\nimport { PanelTutorialTop } from \"../../panels/views/PanelTutorialTop\";\nimport { ScenesConstants } from \"../constants\";\nimport { TutorialSceneEvents } from \"../events/TutorialSceneEvents\";\nimport { UISceneEvents } from \"../events/UISceneEvents\";\nimport { BaseScene } from \"./BaseScene\";\n\nexport class TutorialScene extends BaseScene {\n\n    public static readonly TUTORIAL_1: number = 1;\n    public static readonly TUTORIAL_2: number = 2;\n    public static readonly TUTORIAL_3: number = 3;\n    public static readonly TUTORIAL_8: number = 8;\n    public static readonly TUTORIAL_9: number = 9;\n    public static readonly TUTORIAL_10: number = 10;\n    public static readonly TUTORIAL_11: number = 11;\n    public static readonly TUTORIAL_12: number = 12;\n    public static readonly TUTORIAL_13: number = 13;\n    public static readonly TUTORIAL_14: number = 14;\n\n    private panelTutorialTop: PanelTutorialTop;\n    private panelTutorialBottom: PanelTutorialBottom;\n    private mapView: MapView;\n\n    private gameProcessModel: GameProcessModel;\n    private mapModel: MapModel;\n\n    protected autoActivated: boolean = false;\n\n    constructor() {\n        super(ScenesConstants.names.tutorial);\n    }\n\n    protected buildScene(): void {\n        this.gameProcessModel = new GameProcessModel(this.game);\n        this.mapModel = new MapModel();\n\n        this.panelTutorialTop = new PanelTutorialTop(this);\n        this.panelTutorialBottom = new PanelTutorialBottom(this);\n    }\n\n    public setMapView(mapView: MapView): void {\n        this.mapView = mapView;\n    }\n\n    public activate(): void {\n        super.activate();\n        this.resizeContainer.add([\n            this.panelTutorialTop,\n            this.mapView,\n            this.panelTutorialBottom\n        ]);\n\n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_PROFILE_BUTTON, false);\n        this.game.events.emit(MapEvents.CHANGE_VISIBILITY_MAP_CELLS, true);\n\n        this.game.events.addListener(TutorialEvents.CHANGE_TUTORIAL, this.onChangeTutorial, this);\n        this.game.events.addListener(TutorialSceneEvents.AUTO_CHANGE_ADVICE, this.onAutoChangeAdvice, this);\n\n        this.panelTutorialTop.init();\n        this.panelTutorialBottom.init();\n\n        this.getAdvice();\n    }\n\n    public deactivate(): void {\n        this.panelTutorialTop.free();\n        this.panelTutorialBottom.free();\n\n        this.resizeContainer.remove([\n            this.panelTutorialTop,\n            this.mapView,\n            this.panelTutorialBottom\n        ]);\n\n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_MAP_CELLS_TOGGLE, false);\n        this.game.events.emit(UISceneEvents.CHANGE_VISIBILITY_PROFILE_BUTTON, true);\n\n        this.game.events.removeListener(TutorialEvents.CHANGE_TUTORIAL, this.onChangeTutorial, this);\n        this.game.events.removeListener(TutorialSceneEvents.AUTO_CHANGE_ADVICE, this.onAutoChangeAdvice, this);\n    }\n\n    private onChangeTutorial(step: number): void {\n        this.gameProcessModel.advice += step;\n        this.getAdvice();\n    }\n\n    private getAdvice(): void {\n        this.panelTutorialBottom.hideCountMonster();\n        this.game.events.emit(MapEvents.CHOICE_RESET);\n        this.mapModel.createMap();\n        this.mapView.navigator.free();\n\n        this.gameProcessModel.monsterInGame = this.gameProcessModel.monsterInGameTotal;\n\n        this.panelTutorialTop.updatePanel(this.gameProcessModel.advice);\n        this.panelTutorialBottom.updatePanel(this.gameProcessModel.advice);\n\n        this.setConfigAdvice();\n    }\n\n    public setConfigAdvice(): void {\n        this.gameProcessModel.dontMoveInRoom = true;\n        this.gameProcessModel.addingInRoom = true;\n        this.gameProcessModel.countOfTurns = 3;\n        this.gameProcessModel.turns = 0;\n\n        if (this.gameProcessModel.advice > TutorialScene.TUTORIAL_1) {\n            this.gameProcessModel.dontMoveInRoom = false;\n        }\n        if (this.gameProcessModel.advice > TutorialScene.TUTORIAL_2) {\n            this.gameProcessModel.addingInRoom = false;\n        }\n        switch (this.gameProcessModel.advice) {\n            case TutorialScene.TUTORIAL_1:\n            case TutorialScene.TUTORIAL_2:\n                break;\n\n            case TutorialScene.TUTORIAL_3:\n                this.mapModel.mapColor[2][2] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[1][7] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[3][7] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[4][7] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[5][7] = MonsterColor.PURPLE;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 2));\n                break;\n\n            // orange\n            case TutorialScene.TUTORIAL_8:\n                this.mapModel.mapColor[2][2] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[2][3] = MonsterColor.BLUE;\n                this.mapModel.mapColor[1][3] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[0][3] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][5] = MonsterColor.YELLOW;\n                this.mapModel.mapColor[3][5] = MonsterColor.RED;\n                //\n                this.mapModel.mapColor[1][7] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[3][7] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[4][7] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[5][7] = MonsterColor.ORANGE;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 2));\n                this.panelTutorialBottom.showCountMonster(6, MonsterConstants[MonsterColor.ORANGE].countInLineMin);\n                break;\n\n            // red\n            case TutorialScene.TUTORIAL_9:\n                this.mapModel.mapColor[2][2] = MonsterColor.RED;\n                this.mapModel.mapColor[2][3] = MonsterColor.BLUE;\n                this.mapModel.mapColor[1][3] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[0][3] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][5] = MonsterColor.YELLOW;\n                this.mapModel.mapColor[3][5] = MonsterColor.ORANGE;\n                //\n                this.mapModel.mapColor[1][7] = MonsterColor.RED;\n                this.mapModel.mapColor[3][7] = MonsterColor.RED;\n                this.mapModel.mapColor[4][7] = MonsterColor.RED;\n                this.mapModel.mapColor[5][7] = MonsterColor.RED;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 2));\n                this.panelTutorialBottom.showCountMonster(6, MonsterConstants[MonsterColor.RED].countInLineMin);\n                break;\n\n            // blue\n            case TutorialScene.TUTORIAL_10:\n                this.mapModel.mapColor[1][1] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[1][2] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[1][3] = MonsterColor.RED;\n                this.mapModel.mapColor[2][1] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][2] = MonsterColor.BLUE;\n                this.mapModel.mapColor[2][3] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[3][1] = MonsterColor.RED;\n                this.mapModel.mapColor[3][2] = MonsterColor.YELLOW;\n                this.mapModel.mapColor[3][3] = MonsterColor.PURPLE;\n                //\n                this.mapModel.mapColor[1][7] = MonsterColor.BLUE;\n                this.mapModel.mapColor[3][7] = MonsterColor.BLUE;\n                this.mapModel.mapColor[4][7] = MonsterColor.BLUE;\n                this.mapModel.mapColor[5][7] = MonsterColor.BLUE;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 2));\n                this.panelTutorialBottom.showCountMonster(6, MonsterConstants[MonsterColor.BLUE].countInLineMin);\n                break;\n\n            // purple\n            case TutorialScene.TUTORIAL_11:\n                this.mapModel.mapColor[2][2] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[0][3] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][3] = MonsterColor.BLUE;\n                this.mapModel.mapColor[3][2] = MonsterColor.RED;\n                this.mapModel.mapColor[1][3] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[3][4] = MonsterColor.YELLOW;\n                this.mapModel.mapColor[2][5] = MonsterColor.DARK;\n                this.mapModel.mapColor[1][5] = MonsterColor.RED;\n                //\n                this.mapModel.mapColor[1][7] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[3][7] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[4][7] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[5][7] = MonsterColor.PURPLE;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 2));\n                this.panelTutorialBottom.showCountMonster(6, MonsterConstants[MonsterColor.PURPLE].countInLineMin);\n                break;\n\n            // dark\n            case TutorialScene.TUTORIAL_12:\n                this.mapModel.mapColor[1][6] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][6] = MonsterColor.PURPLE;\n                //\n                this.mapModel.mapColor[1][7] = MonsterColor.DARK;\n                this.mapModel.mapColor[3][7] = MonsterColor.DARK;\n                this.mapModel.mapColor[4][7] = MonsterColor.DARK;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[1][6], new Point(7, 2));\n                this.panelTutorialBottom.showCountMonster(5, MonsterConstants[MonsterColor.DARK].countInLineMin);\n                break;\n\n            // green\n            case TutorialScene.TUTORIAL_13:\n                this.mapModel.mapColor[2][2] = MonsterColor.GREEN;\n                this.mapModel.mapColor[2][3] = MonsterColor.BLUE;\n                this.mapModel.mapColor[1][3] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[0][3] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][5] = MonsterColor.YELLOW;\n                this.mapModel.mapColor[3][5] = MonsterColor.RED;\n                //\n                this.mapModel.mapColor[1][7] = MonsterColor.GREEN;\n                this.mapModel.mapColor[2][7] = MonsterColor.ORANGE;\n                this.mapModel.mapColor[3][7] = MonsterColor.GREEN;\n                this.mapModel.mapColor[4][7] = MonsterColor.GREEN;\n                this.mapModel.mapColor[5][7] = MonsterColor.GREEN;\n                this.mapModel.mapColor[6][7] = MonsterColor.GREEN;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 2));\n                this.panelTutorialBottom.showCountMonster(7, MonsterConstants[MonsterColor.GREEN].countInLineMin);\n                break;\n\n            // yellow\n            case TutorialScene.TUTORIAL_14:\n                this.mapModel.mapColor[2][2] = MonsterColor.YELLOW;\n                this.mapModel.mapColor[2][3] = MonsterColor.BLUE;\n                this.mapModel.mapColor[1][3] = MonsterColor.PURPLE;\n                this.mapModel.mapColor[0][3] = MonsterColor.DARK;\n                this.mapModel.mapColor[2][5] = MonsterColor.RED;\n                this.mapModel.mapColor[3][5] = MonsterColor.ORANGE;\n                //\n                this.mapModel.mapColor[2][7] = MonsterColor.BLUE;\n                this.mapModel.mapColor[3][7] = MonsterColor.RED;\n                this.mapModel.mapColor[4][7] = MonsterColor.YELLOW;\n                this.mapView.loadMonsters();\n                this.mapView.navigator.init(this.mapModel.mapMonsters[2][2], new Point(7, 1));\n                this.panelTutorialBottom.showCountMonster(5, MonsterConstants[MonsterColor.YELLOW].countInLineMin);\n                break;\n        }\n        this.gameProcessModel.addingMonsters = this.gameProcessModel.addingInRoom;\n    }\n\n    private onAutoChangeAdvice(): void {\n        switch (this.gameProcessModel.advice) {\n            case TutorialScene.TUTORIAL_3:\n                if (this.mapModel.calcMonstersColor(MonsterColor.PURPLE) === 0) {\n                    this.onChangeTutorial(1);\n                }\n                break;\n\n            case TutorialScene.TUTORIAL_8:\n                if (this.mapModel.calcMonstersColor(MonsterColor.ORANGE) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                setTimeout(() => this.onChangeTutorial(1), 1000);\n                break;\n\n            case TutorialScene.TUTORIAL_9:\n                if (this.mapModel.calcMonstersColor(MonsterColor.RED) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                setTimeout(() => this.onChangeTutorial(1), 1000);\n                break;\n\n            case TutorialScene.TUTORIAL_10:\n                if (this.mapModel.calcMonstersColor(MonsterColor.BLUE) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                setTimeout(() => this.onChangeTutorial(1), 1000);\n                break;\n\n            case TutorialScene.TUTORIAL_11:\n                if (this.mapModel.calcMonstersColor(MonsterColor.PURPLE) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                setTimeout(() => this.onChangeTutorial(1), 1000);\n                break;\n\n            case TutorialScene.TUTORIAL_12:\n                if (this.mapModel.calcMonstersColor(MonsterColor.DARK) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                setTimeout(() => this.onChangeTutorial(1), 1000);\n                break;\n\n            case TutorialScene.TUTORIAL_13:\n                if (this.mapModel.calcMonstersColor(MonsterColor.GREEN) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                setTimeout(() => this.onChangeTutorial(1), 1000);\n                break;\n\n            case TutorialScene.TUTORIAL_14:\n                if (this.mapModel.calcMonstersColor(MonsterColor.YELLOW) === 0) {\n                    this.panelTutorialTop.butPrev.visible = false;\n                }\n                this.panelTutorialTop.butNext.visible = false;\n                this.panelTutorialBottom.hideCountMonster();\n                this.panelTutorialTop.butMenu.deactivate();\n                setTimeout(() => this.panelTutorialTop.exitFromTutorial(), 3000);\n                break;\n        }\n    }\n}\n","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { MapEvents } from \"../../map/events/MapEvents\";\nimport { MenuEvents } from \"../../menu/events/MenuEvents\";\nimport { PanelRowButtons } from \"../../panels/views/PanelRowButtons\";\nimport { PanelSeasons } from \"../../panels/views/PanelSeasons\";\nimport { AmbientSoundPlugin } from \"../../plugins/sounds/AmbientSoundPlugin\";\nimport { ButtonProfile } from \"../../ui/views/ButtonProfile\";\nimport { SoundToggle } from \"../../ui/views/SoundToggle\";\nimport { Toggle } from \"../../ui/views/Toggle\";\nimport { ScenesConstants } from \"../constants\";\nimport { SceneEvents } from \"../events/SceneEvents\";\nimport { UISceneEvents } from \"../events/UISceneEvents\";\nimport { IMuteSound } from \"../interfaces/IMuteSound\";\nimport { BaseScene } from \"./BaseScene\";\n\nexport class UIScene extends BaseScene {\n\n    private ambientSoundPlugin: AmbientSoundPlugin;\n\n    private toggleSounds: Toggle;\n    private toggleMusic: Toggle;\n    private toggleMapCells: Toggle;\n\n    private panelSeasons: PanelSeasons;\n    private buttonProfile: ButtonProfile;\n    private panelRowSocialButtons: PanelRowButtons;\n\n    constructor() {\n        super(ScenesConstants.names.ui);\n    }\n\n    protected buildScene(): void {\n        this.ambientSoundPlugin = this.plugins.get(\"ambientSoundPlugin\") as AmbientSoundPlugin;\n\n        this.panelSeasons = new PanelSeasons(this, 35, 45);\n        this.resizeContainer.add(this.panelSeasons);\n\n        this.toggleSounds = new Toggle(this, \"btnGreenPoint\", Toggle.ICON_SOUND, () => this.muteSounds());\n        this.toggleSounds.x = this.gameWidth - 110;\n        this.toggleSounds.y = 45;\n        this.toggleSounds.activate();\n        GameDataModel.volumeSounds > 0 ? this.toggleSounds.switchOn() : this.toggleSounds.switchOff();\n        this.resizeContainer.add(this.toggleSounds);\n\n        this.toggleMusic = new Toggle(this, \"btnGreenPoint\", Toggle.ICON_MUSIC, () => this.muteMusic());\n        this.toggleMusic.x = this.gameWidth - 35;\n        this.toggleMusic.y = 45;\n        this.toggleMusic.activate();\n        GameDataModel.volumeMusic > 0 ? this.toggleMusic.switchOn() : this.toggleMusic.switchOff();\n        this.resizeContainer.add(this.toggleMusic);\n\n        this.toggleMapCells = new Toggle(this, \"btnGreenPoint\", Toggle.ICON_CELL, () => this.setMapCellsVisibility());\n        this.toggleMapCells.x = 35;\n        this.toggleMapCells.y = -50;\n        this.toggleMapCells.alpha = 0;\n        this.resizeContainer.add(this.toggleMapCells);\n\n        this.buttonProfile = new ButtonProfile(this, () => {\n            this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.login);\n            this.changeVisibilityProfileButton(false);\n        });\n        this.buttonProfile.x = this.gameWidth - this.buttonProfile.getBounds().width / 2 - 10;\n        this.buttonProfile.y = this.gameHeight - this.buttonProfile.getBounds().height / 2;\n        this.resizeContainer.add(this.buttonProfile);\n\n        this.panelRowSocialButtons = new PanelRowButtons(this, 100);\n        this.panelRowSocialButtons.addBtn(\"socialVK\", \"https://vk.com/aivagame\");\n        this.panelRowSocialButtons.addBtn(\"socialOK\", \"https://ok.ru/group/53163777130695\");\n        this.panelRowSocialButtons.addBtn(\"socialFB\", \"https://www.facebook.com/aivaapps/?fref=ts\");\n        this.panelRowSocialButtons.x = this.gameWidth / 2;\n        this.panelRowSocialButtons.y = this.gameHeight + 50;\n        this.resizeContainer.add(this.panelRowSocialButtons);\n    }\n\n    public activate(): void {\n        super.activate();\n        this.game.events.addListener(MenuEvents.MUTE_SOUNDS, this.updateSoundsUI, this);\n\n        this.game.events.addListener(UISceneEvents.CHANGE_VISIBILITY_SEASONS_PANEL, this.changeVisibilitySeasonsPanel, this);\n        this.game.events.addListener(UISceneEvents.CHANGE_VISIBILITY_PROFILE_BUTTON, this.changeVisibilityProfileButton, this);\n        this.game.events.addListener(UISceneEvents.CHANGE_VISIBILITY_SOCIAL_BUTTONS, this.changeVisibilitySocialButtons, this);\n        this.game.events.addListener(UISceneEvents.CHANGE_VISIBILITY_MAP_CELLS_TOGGLE, this.changeVisibilityMapCells, this);\n    }\n\n    public deactivate(): void {\n        this.game.events.removeListener(MenuEvents.MUTE_SOUNDS, this.updateSoundsUI, this);\n\n        this.game.events.removeListener(UISceneEvents.CHANGE_VISIBILITY_SEASONS_PANEL, this.changeVisibilitySeasonsPanel, this);\n        this.game.events.removeListener(UISceneEvents.CHANGE_VISIBILITY_PROFILE_BUTTON, this.changeVisibilityProfileButton, this);\n        this.game.events.removeListener(UISceneEvents.CHANGE_VISIBILITY_SOCIAL_BUTTONS, this.changeVisibilitySocialButtons, this);\n        this.game.events.removeListener(UISceneEvents.CHANGE_VISIBILITY_MAP_CELLS_TOGGLE, this.changeVisibilityMapCells, this);\n    }\n\n    private updateSoundsUI(data: IMuteSound): void {\n        if (data.toggleId === SoundToggle.MUSIC) {\n            data.muted ? this.toggleMusic.switchOff() : this.toggleMusic.switchOn();\n        } else {\n            data.muted ? this.toggleSounds.switchOff() : this.toggleSounds.switchOn();\n        }\n    }\n\n    private changeVisibilitySeasonsPanel(visibility: boolean): void {\n        visibility ? this.panelSeasons.show() : this.panelSeasons.hide();\n    }\n\n    private changeVisibilityProfileButton(visibility: boolean): void {\n        if (visibility) {\n            this.buttonProfile.setProfile(\n                GameDataModel.playerData.name,\n                GameDataModel.playerData.monster\n            );\n            this.buttonProfile.show();\n        } else {\n            this.buttonProfile.hide();\n        }\n    }\n\n    private changeVisibilitySocialButtons(visibility: boolean): void {\n        visibility ? this.panelRowSocialButtons.init() : this.panelRowSocialButtons.free();\n    }\n\n    private changeVisibilityMapCells(visibility: boolean): void {\n        if (visibility) {\n            GameDataModel.playerData.isVisibilityCells\n                ? this.toggleMapCells.switchOn()\n                : this.toggleMapCells.switchOff();\n            this.add.tween({\n                targets: this.toggleMapCells,\n                y: 45,\n                alpha: 1,\n                duration: 500,\n                onComplete: () => this.toggleMapCells.activate()\n            });\n        } else {\n            this.toggleMapCells.deactivate();\n            this.add.tween({\n                targets: this.toggleMapCells,\n                y: -50,\n                alpha: 0,\n                duration: 500\n            });\n        }\n    }\n\n    private muteSounds(): void {\n        const volume: number = this.toggleSounds.switched ? 1 : 0;\n        GameDataModel.volumeSounds = volume;\n        this.gameDataModel.saveData();\n\n        this.game.events.emit(\n            SceneEvents.MUTE_SOUNDS,\n            {\n                toggleId: SoundToggle.SOUNDS,\n                muted: this.toggleSounds.switched\n            } as IMuteSound\n        );\n    }\n\n    private muteMusic(): void {\n        const volume: number = this.toggleMusic.switched ? 1 : 0;\n        GameDataModel.volumeMusic = volume;\n        this.gameDataModel.saveData();\n        this.ambientSoundPlugin.setVolume(GameDataModel.volumeMusic);\n\n        this.game.events.emit(\n            SceneEvents.MUTE_SOUNDS,\n            {\n                toggleId: SoundToggle.MUSIC,\n                muted: this.toggleMusic.switched\n            } as IMuteSound\n        );\n    }\n\n    private setMapCellsVisibility(): void {\n        GameDataModel.playerData.isVisibilityCells = this.toggleMapCells.switched;\n        this.gameDataModel.saveData();\n        this.game.events.emit(MapEvents.CHANGE_VISIBILITY_MAP_CELLS);\n    }\n}","import { CursorEvents } from \"../../cursor/events/CursorEvents\";\nimport { GameProcessEvents } from \"../../data/events/GameProcessEvents\";\nimport { IDeletedLine } from \"../../data/interfaces/IDeletedLine\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { GameProcessModel } from \"../../data/models/GameProcessModel\";\nimport { Point } from \"../../exports\";\nimport { MapEvents } from \"../../map/events/MapEvents\";\nimport { IMapCellData } from \"../../map/interfaces/IMapCellData\";\nimport { MapModel } from \"../../map/models/MapModel\";\nimport { MapView } from \"../../map/views/MapView\";\nimport { Monster } from \"../../monsters/views/Monster\";\nimport { AmbientSoundPlugin } from \"../../plugins/sounds/AmbientSoundPlugin\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\nimport { ComponentPool } from \"../../utils/ComponentPool\";\nimport { ScenesConstants } from \"../constants\";\nimport { SceneEvents } from \"../events/SceneEvents\";\nimport { TutorialSceneEvents } from \"../events/TutorialSceneEvents\";\nimport { BaseScene } from \"./BaseScene\";\nimport { GameScene } from \"./GameScene\";\nimport { TutorialScene } from \"./TutorialScene\";\n\nexport class UniverseScene extends BaseScene {\n\n    public static I_AM_LOOSER: number = 0;\n    public static I_AM_CHAMPION: number = 1;\n\n    private static LIMIT_SCORE_DARK: number = 500;\n\n    // таймеры для блокеров на карте\n    private static TURNS_TO_GROWTH: number = 20; // рост\n    private static TURNS_TO_BLIGHT: number = 15; // упадок\n\n    private ambientSoundPlugin: AmbientSoundPlugin;\n\n    private tutorialScene: TutorialScene;\n    private gameScene: GameScene;\n\n    private gameProcessModel: GameProcessModel;\n    private componentPool: ComponentPool;\n    private mapModel: MapModel;\n\n    private mapView: MapView;\n\n    // configuration\n    public particlesCountMIN: number;\n    public particlesCountMAX: number;\n\n    public particlesScaleMIN: number;\n    public particlesScaleMAX: number;\n\n    public timeMIN: number = 5;\n    public timeMAX: number = 15;\n\n    public vTimers: number[] = [];\n    // end config\n\n    // контроллеры\n    // public monsters: List; // список монстров\n\n    private _arrDarks: Monster[];\n    private _countDarks: number;\n    private _ticket: number;\n\n    private _isDarkEscape: boolean;\n\n    private _timerAdding: number;\n    private _timerAddingTotal: number = 15;\n\n    // private _arrBlackthornes: Array;\n\n\n    public isLoadMonsters: boolean;\n\n    private _phase: number;\n    private _tileX: number;\n    private _tileY: number;\n    private _turnsPlant: number;\n\n    private _color: string;\n\n    constructor() {\n        super(ScenesConstants.names.universe);\n    }\n\n    public launchInnerScenes(): void {\n        if (!this.tutorialScene) {\n            this.scene.launch(ScenesConstants.names.tutorial);\n        }\n        if (!this.gameScene) {\n            this.scene.launch(ScenesConstants.names.game);\n        }\n    }\n\n    protected buildScene(): void {\n        this.ambientSoundPlugin = this.plugins.get(\"ambientSoundPlugin\") as AmbientSoundPlugin;\n\n        this.tutorialScene = this.game.scene.getScene(ScenesConstants.names.tutorial) as TutorialScene;\n        this.gameScene = this.game.scene.getScene(ScenesConstants.names.game) as GameScene;\n\n        this.gameProcessModel = new GameProcessModel(this.game);\n        this.componentPool = new ComponentPool();\n        this.mapModel = new MapModel();\n\n        // this.monsters = new List();\n\n        this.mapView = new MapView(this);\n        this.mapView.y = MapModel.MAP_POS;\n\n        // this.drawMap();\n        // this.drawCell();\n\n        // this._layerBackground.visible = false;\n\n        // configuration\n        this.particlesCountMIN = 8;\n        this.particlesCountMAX = 15;\n\n        this.particlesScaleMIN = .3;\n        this.particlesScaleMAX = 1;\n\n        this.tutorialScene.setMapView(this.mapView);\n        this.gameScene.setMapView(this.mapView);\n    }\n\n    public activate(): void {\n        super.activate();\n\n        this.mapView.drawCell();\n        this.mapView.redrawMap();\n        this.mapView.activate();\n\n        // var read: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // var arrPlayers: Array = read.data.players;\n\n        // try {\n        //     this._isDarkEscape = arrPlayers[Game.id][Game.DARK_ESCAPE];\n        // } catch (e: Error) {\n        //     this._isDarkEscape = true;\n        // }\n\n        this._ticket = 0;\n\n        this.isLoadMonsters = false;\n\n        this.mapModel.isKill = false;\n        this.mapModel.isMagic = false;\n        this.mapModel.isGreen = false;\n        this.game.events.emit(CursorEvents.RESET);\n\n        this.game.events.addListener(GameProcessEvents.DELETE_LINES, this.onDeleteLines, this);\n        this.game.events.addListener(GameProcessEvents.END_TURN, this.onEndTurn, this);\n        this.game.events.addListener(GameProcessEvents.END_GAME, this.endGame, this);\n\n        this.startGame();\n    }\n\n    public deactivate(): void {\n        if (this.gameProcessModel.isTutorial) {\n            this.tutorialScene.deactivate();\n        } else {\n            this.gameScene.deactivate();\n        }\n        this.game.events.emit(MapEvents.CHOICE_RESET);\n\n        this.gameProcessModel.gameOver = true;\n\n        this.mapView.deactivate();\n\n        // this._panel.free();\n        // this._panelQuest.free();\n        // this._panelTutorial.free();\n        // this._layerBackground.visible = false;\n\n        this.removeBlackthorns(true);\n\n        // this._gamePanel.hide();\n\n        this.game.events.removeListener(GameProcessEvents.DELETE_LINES, this.onDeleteLines, this);\n        this.game.events.removeListener(GameProcessEvents.END_TURN, this.onEndTurn, this);\n        this.game.events.removeListener(GameProcessEvents.END_GAME, this.endGame, this);\n    }\n\n    public clearSharedObject(): void {\n        // var read: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // var arrScores: Array = [];\n\n        // if (read.data.arrScores != null) {\n        //     arrScores = read.data.arrScores;\n        //     arrScores.length = 1;\n        //     read.data.arrScores = arrScores;\n        //     read.flush();\n        // }\n    }\n\n    private loadRecord(): void {\n        // var read: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // var arrScores: Array = [];\n\n        // if (read.data.arrScores != null) {\n        //     arrScores = read.data.arrScores;\n        //     if (arrScores[0] != undefined) {\n        //         this._panel.setScoreBest(arrScores[0][0]);\n        //     }\n        // }\n    }\n\n    /**\n     * управление игровым процессом\n     */\n\n    private startGame(): void {\n        this.gameProcessModel.gameOver = false;\n\n        if (this.gameProcessModel.isTutorial) {\n            this.startTutorial();\n        } else if (this.gameProcessModel.isNewGame) {\n            this.newGame();\n        } else {\n            this.continueGame();\n        }\n        this.ambientSoundPlugin.setActive(\"gameMusic\");\n    }\n\n    public startTutorial(): void {\n        // this.choiceFalse();\n\n        this.gameProcessModel.monsterInGame = this.gameProcessModel.monsterInGameTotal;\n        this.gameProcessModel.advice = TutorialScene.TUTORIAL_1;\n\n        // this._phase = 0;\n        // this._isBlackthorn = false;\n        // this._turnsPlant = -1;\n\n        this.mapModel.aimMonsterData.isAimed = false;\n\n        this.mapModel.createMap();\n        this.mapModel.calcMonsters();\n        this.gameProcessModel.createNextMonsters();\n\n        this.tutorialScene.activate();\n    }\n\n    // новая игра\n    private newGame(): void {\n        this.gameScene.activate();\n\n        // this.choiceFalse();\n\n        this.gameProcessModel.addingInRoom = true;\n        this.gameProcessModel.dontMoveInRoom = false;\n\n        this.gameProcessModel.monsterInGame = this.gameProcessModel.monsterInGameTotal;\n        this._timerAdding = this._timerAddingTotal;\n\n        this.gameProcessModel.addingMonsters = this.gameProcessModel.addingInRoom;\n        this.gameProcessModel.dontMove = true;\n        this.gameProcessModel.resetScore();\n\n        // this._game.changeVisibilityPanelSeasons(this._gameOver);\n\n        // this._phase = 0;\n        // this._isBlackthorn = false;\n        // this._turnsPlant = TURNS_TO_GROWTH;\n\n        // this.loadRecord();\n        // this._countMonster = 0;\n        // this._arrAim = [];\n\n        this.mapModel.createMap();\n        this.gameProcessModel.createNextMonsters();\n        // this._panel.init();\n        // this._panelQuest.reset();\n        // this._panelQuest.init();\n        // this._layerBackground.visible = true;\n\n        // this._game.menu.exit();\n        // App.getMusic().stopSounds();\n        // App.getMusic().playSound(\"Game\", 0, true);\n\n        // this.init();\n        // this._gamePanel.show();\n    }\n\n    // продолжение игры\n    private continueGame(): void {\n        this.gameScene.activate();\n\n        // choiceFalse();\n        this.gameProcessModel.addingInRoom = true;\n        this.gameProcessModel.dontMoveInRoom = false;\n\n        // var read: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // var arrPlayers: Array = read.data.players;\n\n        // if (arrPlayers[Game.id][Game.GAME_OVER] != true) {\n        //     //_mapColor = arrPlayers[Game.id][Game.MAP_COLOR];\n        //     score = arrPlayers[Game.id][Game.SCORE];\n        //     _arrNextMonsters = arrPlayers[Game.id][Game.MONSTERS_NEXT];\n\n        //     _countMonster = 0;\n        //     _gameOver = false;\n        //     _dontMove = true;\n        //     _isTutorial = false;\n        //     _arrAim = [];\n\n        //     _game.changeVisibilityPanelSeasons(_gameOver);\n\n        //     _phase = arrPlayers[Game.id][Game.PHASE];\n        //     //Keeper.loadPhase();\n        //     _isBlackthorn = arrPlayers[Game.id][Game.BLACKTHORN];\n        //     _tileX = arrPlayers[Game.id][Game.TILE_X];\n        //     _tileY = arrPlayers[Game.id][Game.TILE_Y];\n        //     _turnsPlant = arrPlayers[Game.id][Game.TURNS];\n        //     //Keeper.loadIsBlackthorn();\n\n        //     _panel.scoreInitialize(score);\n        //     loadRecord();\n\n        //     createMap();\n        //     _mapColor = arrPlayers[Game.id][Game.MAP_COLOR];\n\n        //     if (_isBlackthorn) addBlackthorns(_tileX, _tileY);\n\n        //     loadMonsters();\n        //     _panel.init();\n        //     _panelQuest.init();\n        //     _layerBackground.visible = true;\n\n        //     dispatchEventWith(Events.SET_NEXT_MONSTERS, false, _arrNextMonsters);\n\n        //     _game.menu.exit();\n        //     App.getMusic().stopSounds();\n        //     App.getMusic().playSound(\"Game\", 0, true);\n        // } else {\n        //     newGame();\n        // }\n        // init();\n        // _gamePanel.show();\n    }\n\n    // конец игры\n    private endGame(): void {\n        this.gameProcessModel.gameOver = true;\n        this.autosave();\n\n        // var read: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // var arrScores: Array = read.data.arrScores;\n        // var mess: number = I_AM_LOOSER;\n        // var i: number;\n\n        // if (arrScores != null) {\n        //     for (i = 0; i < ScoreMenu.COUNT_POSITIONS; i++) {\n        //         if (arrScores[i] != undefined) {\n        //             if (score >= arrScores[i][0]) {\n        //                 mess = I_AM_CHAMPION;\n        //                 break;\n        //             }\n        //         }\n        //         else {\n        //             mess = I_AM_CHAMPION;\n        //             break;\n        //         }\n        //     }\n        // }\n        // else {\n        //     mess = I_AM_CHAMPION;\n        // }\n\n        this.game.events.emit(SceneEvents.CHANGE_SCENE, ScenesConstants.names.menu);\n\n        // _message.callMessage(mess, score);\n    }\n\n    public addStars(tileX: number, tileY: number): void {\n        // var star: Star;\n        // var countStars: number = AMath.random(this.particlesCountMIN, this.particlesCountMAX);\n\n        // for (var i: number = 0; i < countStars; i++) {\n        //     star = ComponentPool.get(Star);\n        //     star.init(MapModel.toPix(tileX), MapModel.toPix(tileY), this.particlesScaleMAX * Math.random() + this.particlesScaleMIN);\n        // }\n\n        // if (this._color == this._game.playerColor)\n        //     App.getSounds().playSound(\"Bonus\", 0);\n        // else\n        //     App.getSounds().playSound(\"Bell\", 0);\n    }\n\n    public addStarsOnQuest(posX: number, posY: number, countStars: number = 20): void {\n        // var star: Star;\n\n        // for (var i: number = 0; i < countStars; i++) {\n        //     star = ComponentPool.get(Star);\n        //     star.init(posX, posY, this.particlesScaleMAX * Math.random() + this.particlesScaleMIN);\n        // }\n\n        // App.getSounds().playSound(\"QuestComplete\", 0);\n        // App.getSounds().playSound(\"QuestComplete\", 0);\n    }\n\n    public addBlackthorns(tileX: number = -1, tileY: number = -1): void {\n        // this.removeBlackthorns();\n\n        // if (tileX < 0) {\n        //     this._tileX = AMath.random(0, int(MAP_WIDTH_MAX / 2) - 1);\n        //     this._tileY = AMath.random(0, int(MAP_WIDTH_MAX / 2) - 1);\n        // }\n        // else {\n        //     this._tileX = tileX;\n        //     this._tileY = tileY;\n        // }\n\n        // var b: Blackthorn;\n\n        // for (var i: number = 0; i < 4; i++) {\n        //     switch (i) {\n        //         case 0: tileX = this._tileX; tileY = this._tileY; break;\n        //         case 1: tileX = this._tileX; tileY = MAP_HEIGHT_MAX - this._tileY - 1; break;\n        //         case 2: tileX = MAP_WIDTH_MAX - this._tileX - 1; tileY = this._tileY; break;\n        //         case 3: tileX = MAP_WIDTH_MAX - this._tileX - 1; tileY = MAP_HEIGHT_MAX - this._tileY - 1; break;\n        //     }\n\n        //     if (this._mapMask[tileY][tileX] > 0) {\n        //         this._mapColor[tileY][tileX] = \"\";\n        //         this._mapMonsters[tileY][tileX].outGame();\n        //         this._mapMonsters[tileY][tileX] = null;\n        //     }\n\n        //     b = ComponentPool.get(Blackthorn);\n        //     b.x = MapModel.toPix(tileX);\n        //     b.y = MapModel.toPix(tileY);\n        //     b.init();\n\n        //     this._mapMask[tileY][tileX] = -1;\n        //     this._arrBlackthornes.push(b);\n        //     this._layerMonsters.addChild(b);\n        // }\n    }\n\n    public removeBlackthorns(dispose: boolean = false): void {\n        // var b: Blackthorn;\n        // var tileX: number;\n        // var tileY: number;\n\n        // if (this._arrBlackthornes != null) {\n        //     while (this._arrBlackthornes.length > 0) {\n        //         b = this._arrBlackthornes[0] as Blackthorn;\n        //         this._arrBlackthornes.splice(0, 1);\n        //         tileX = MapModel.toTile(b.x);\n        //         tileY = MapModel.toTile(b.y);\n        //         this._mapMask[tileY][tileX] = 0;\n        //         b.startFree(dispose);\n        //     }\n        // }\n        // this._arrBlackthornes = [];\n    }\n\n    private onDeleteLines(deletedLine: IDeletedLine): void {\n        // this._color = color;\n\n        let str: string;\n        const bonus: number = (deletedLine.color === GameDataModel.playerData.monster) ? 1 : 0;\n\n        // считаем очки\n        const n: number = deletedLine.line.length;\n        const score: number = n * (n - deletedLine.min + deletedLine.cost + bonus);\n\n        this.gameProcessModel.score += score;\n\n        this._countDarks = Math.floor(this.gameProcessModel.score / UniverseScene.LIMIT_SCORE_DARK);\n\n        str = \"+\" + Number(n - deletedLine.min + deletedLine.cost + bonus);\n\n        // const challengeVO: ChallengeVO = ComponentPool.get(ChallengeVO);\n        // challengeVO.init(ColorIDsUtils.getIndexFromColor(color), n);\n        // _panelQuest.dispatchEventWith(Events.DELETE_MONSTERS, false, challengeVO);\n        // this.componentPool.dispose(challengeVO);\n\n        // ... даем команду на удаление...\n        for (let i: number = 0; i < n; i++) {\n            const tileY: number = deletedLine.line[i].y;\n            const tileX: number = deletedLine.line[i].x;\n\n            // !refactor\n            this.mapModel.mapMask[tileY][tileX] = 0;\n            this.mapModel.mapColor[tileY][tileX] = \"\";\n            this.mapModel.mapMonsters[tileY][tileX].outGame();\n            this.mapModel.mapMonsters[tileY][tileX] = null;\n\n            const mapCellData: IMapCellData = {\n                tileX: tileX,\n                tileY: tileY,\n                color: ColorIDsUtils.getCharColorFromColor(deletedLine.color),\n                cost: str,\n            }\n            this.game.events.emit(MapEvents.ADD_COST_MONSTER, mapCellData);\n        }\n        deletedLine.line.forEach((point: Point) => this.componentPool.dispose(point));\n        deletedLine.line.length = 0;\n        this.mapModel.calcMonsters();\n\n        // если монстров на игровом поле больше нет...\n        if (this.mapModel.countMonster === 0 && !this.gameProcessModel.isTutorial) {\n            this.endGame();\n        }\n\n        if (this.gameProcessModel.isTutorial) {\n            this.game.events.emit(TutorialSceneEvents.AUTO_CHANGE_ADVICE);\n        }\n    }\n\n    private onEndTurn(): void {\n        this.mapModel.calcMonsters();\n\n        // если пустых ячеек больше нет...\n        if (this.mapModel.mapIsFull) {\n            this.endGame();\n        }\n        // если удаление было\n        if (this._isDarkEscape && this._countDarks > 0) {\n            if (!this.gameProcessModel.gameOver && this.gameProcessModel.monsterIsDel || !this.gameProcessModel.gameOver && this.gameProcessModel.elvisIsDel) {\n                // и не в фазу добавления новых монстров\n                if (!this.gameProcessModel.addingMonsters) {\n                    this.gameProcessModel.dontMove = true;\n                    this.searchDarkMonsters();\n                }\n            }\n        }\n\n        if (!this.gameProcessModel.addingMonsters) {\n            this.calcPlants();\n        }\n        if (this._ticket <= 0) {\n            // если удаления монстров не было...\n            if (!this.gameProcessModel.gameOver && !this.gameProcessModel.monsterIsDel && !this.gameProcessModel.elvisIsDel) {\n                // ... и они не добавляются\n                if (!this.gameProcessModel.addingMonsters) {\n                    // добавляем следующих 3-х монстров на игровое поле\n                    this.gameProcessModel.addingMonsters = this.gameProcessModel.addingInRoom;\n                    this.gameProcessModel.monsterInGame = this.gameProcessModel.monsterInGameTotal;\n                    if (this.gameProcessModel.addingMonsters) {\n                        this.gameProcessModel.dontMove = true;\n                    }\n                }\n            }\n        } else {\n            this._ticket--;\n        }\n\n        this.gameProcessModel.elvisIsDel = false;\n        this.gameProcessModel.monsterIsDel = false;\n\n        if (!this.gameProcessModel.addingMonsters && !this.gameProcessModel.isTutorial) {\n            this.autosave();\n        }\n    }\n\n    private calcPlants(): void {\n        this._turnsPlant--;\n\n        if (this._turnsPlant === 0 && !this.gameProcessModel.isTutorial) {\n            if (this.gameProcessModel.isBlackthorn) {\n                this.removeBlackthorns();\n                this._turnsPlant = UniverseScene.TURNS_TO_GROWTH;\n            } else {\n                this.addBlackthorns();\n                this._turnsPlant = UniverseScene.TURNS_TO_BLIGHT;\n            }\n            this.gameProcessModel.isBlackthorn = !this.gameProcessModel.isBlackthorn;\n        }\n    }\n\n    /**\n     * игривость серых монстров ++++++++++++++++++++++++++\n     */\n    private searchDarkMonsters(): void {\n        this._arrDarks = [];\n        // const len: number = monsters.length;\n        // for (let i: number = 0; i < len; i++) {\n        //     if (monsters.objects[i].color === MonsterColor.DARK && !monsters.objects[i].isOutGame &&\n        //         movable(MapModel.toTile(monsters.objects[i].x), MapModel.toTile(monsters.objects[i].y))) {\n        //         _arrDarks.push(monsters.objects[i]);\n        //     }\n        // }\n\n        if (this._arrDarks.length > 0) {\n            this.choiseDarkRandom();\n        } else {\n            this.gameProcessModel.dontMove = this.gameProcessModel.dontMoveInRoom;\n        }\n    }\n\n    private choiseDarkRandom(): void {\n        while (this._arrDarks.length > this._countDarks) {\n            this._arrDarks.splice(Phaser.Math.Between(0, this._arrDarks.length - 1), 1);\n        }\n        this._ticket = this._arrDarks.length + 1;\n        this.setDarksPoints();\n    }\n\n    private setDarksPoints(): void {\n        this.mapModel.mapMaskTemp = this.copyArray2D(this.mapModel.mapMask);\n\n        this._arrDarks.forEach((monster: Monster) => {\n            monster.setEscape(this.setEscape(MapModel.toTile(monster.x), MapModel.toTile(monster.y)));\n        });\n    }\n\n    private setEscape(indexJ: number, indexI: number): Point[] {\n        const arr: Point[] = [];\n\n        for (let i: number = -1; i < 2; i++) {\n            for (let j: number = -1; j < 2; j++) {\n                if (i === 0 && j === 0) {\n                    break;\n                } else {\n                    if (MapModel.inMap(indexI + i, indexJ + j)) {\n                        if (this.mapModel.mapMaskTemp[indexI + i][indexJ + j] === 0) {\n                            arr.push(new Point(indexJ + j, indexI + i));\n                            this.mapModel.mapMaskTemp[indexI + i][indexJ + j] = 1;\n                        }\n                    }\n                }\n            }\n        }\n\n        while (arr.length > 1) {\n            const rand: number = Phaser.Math.Between(0, arr.length - 1);\n            this.mapModel.mapMaskTemp[arr[rand].y][arr[rand].x] = 0;\n            arr.splice(rand, 1);\n        }\n\n        arr.push(new Point(indexJ, indexI));\n\n        return arr;\n    }\n\n    private movable(indexJ: number, indexI: number): boolean {\n        for (let i: number = -1; i < 2; i++) {\n            for (let j: number = -1; j < 2; j++) {\n                if (i === 0 && j === 0) {\n                    break;\n                } else {\n                    if (MapModel.inMap(indexI + i, indexJ + j)) {\n                        if (this.mapModel.mapMask[indexI + i][indexJ + j] === 0) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    // автосохранение процесса игры\n    private autosave(): void {\n        // var save: SharedObject = SharedObject.getLocal(\"monsterLines\");\n        // save.data.players[Game.id][Game.GAME_OVER] = _gameOver;\n        // save.data.players[Game.id][Game.MAP_COLOR] = _mapColor;\n        // save.data.players[Game.id][Game.SCORE] = score;\n        // save.data.players[Game.id][Game.MONSTERS_NEXT] = _arrNextMonsters;\n\n        // save.data.players[Game.id][Game.BLACKTHORN] = _isBlackthorn;\n        // save.data.players[Game.id][Game.PHASE] = _phase;\n        // save.data.players[Game.id][Game.TILE_X] = _tileX;\n        // save.data.players[Game.id][Game.TILE_Y] = _tileY;\n        // save.data.players[Game.id][Game.TURNS] = _turnsPlant;\n\n        // save.flush();\n    }\n\n    public update(time: number, deltaTime: number): void {\n        if (!this.gameProcessModel.gameOver && this.gameProcessModel.addingMonsters) {\n            this.timerAdding();\n        }\n\n        // переключение анимаций для монстров по таймеру\n        this.changeAnimationForMonstersWithCheck();\n    }\n\n    private changeAnimationForMonstersWithCheck(): void {\n        const n: number = this.vTimers.length;\n        for (let i: number = 0; i < n; i++) {\n\n            if (this.vTimers[i] > 0) {\n                this.vTimers[i]--;\n            } else {\n                // this.vTimers[i] = AMath.random(this.timeMIN, this.timeMAX) * App.FPS;\n                // const monster: Monster = (monsters.getObj(AMath.random(0, monsters.length - 1)) as Monster);\n                // if (monster) {\n                //     monster.setAnim();\n                // }\n            }\n        }\n    }\n\n    private timerAdding(): void {\n        if (this._timerAdding > 0) {\n            this._timerAdding--;\n        } else {\n            if (this.gameProcessModel.monsterInGame === this.gameProcessModel.monsterInGameTotal) {\n                if (this.game.cache.audio.get(\"Ingame\")) {\n                    this.sound.play(\"Ingame\", { volume: GameDataModel.volumeSounds });\n                }\n            }\n            this.game.events.emit(MapEvents.ADD_MONSTER);\n            this.gameProcessModel.monsterInGame--;\n            if (this.gameProcessModel.monsterInGame <= 0) {\n                this.gameProcessModel.addingMonsters = false;\n                this.gameProcessModel.dontMove = this.gameProcessModel.dontMoveInRoom;\n                this.gameProcessModel.createNextMonsters();\n                if (!this.gameProcessModel.isTutorial) {\n                    this.autosave();\n                    // if (_panelQuest.isAllChallengesCompleted) {\n                    //     _panelQuest.dispatchEventWith(Events.QUESTS_COUNTDOWN);\n                    // }\n                } else {\n                    this.mapModel.calcMonsters();\n                    if (this.mapModel.countMonster > this.gameProcessModel.countOfTurns) {\n                        this.outOfTheGame();\n                    }\n                }\n            }\n            this._timerAdding = this._timerAddingTotal;\n        }\n    }\n\n    private outOfTheGame(): void {\n        while (true) {\n            if (this.mapModel.countMonster > 3) {\n                const m: Monster = this.mapModel.allMonsters[0];\n                m.outGame();\n\n                this.mapModel.mapMask[MapModel.toTile(m.y)][MapModel.toTile(m.x)] = 0;\n                this.mapModel.mapColor[MapModel.toTile(m.y)][MapModel.toTile(m.x)] = \"\";\n                this.mapModel.mapMonsters[MapModel.toTile(m.y)][MapModel.toTile(m.x)] = null;\n\n                this.mapModel.removeMonster(m);\n                this.mapModel.calcMonsters();\n            } else {\n                return;\n            }\n        }\n    }\n\n    // копия массива\n    private copyArray2D(arr: number[][]): number[][] {\n        const a: number[][] = [];\n\n        for (let i: number = 0; i < arr.length; i++) {\n            a[i] = [];\n            for (let j: number = 0; j < arr[i].length; j++) {\n                a[i][j] = arr[i][j];\n            }\n        }\n        return a;\n    }\n}","import { Container, Image, Sprite, BitmapText } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { ButtonIconsUtils } from \"../../utils/ButtonIconsUtils\";\n\nexport class Achievement extends Container {\n\n    private bg: Image;\n    private icon: Sprite;\n    private tfName: BitmapText;\n    private tfScore: BitmapText;\n\n    constructor(scene: BaseScene) {\n        super(scene);\n\n        this.bg = this.scene.add.image(0, 0, \"menu\", \"btnWood\").setOrigin(.5);\n        this.add(this.bg);\n\n        const widthBg: number = this.bg.width;\n        const dX: number = -widthBg / 2;\n\n        this.icon = this.scene.add.sprite(0, 0, \"scores\", \"unknown\").setOrigin(0);\n        this.icon.x = widthBg / 5 + dX;\n        this.icon.y = -15;\n        this.add(this.icon);\n\n        this.tfName = this.scene.add.bitmapText(widthBg / 8 * 5 + dX, -40, \"aivaStroke\", \"\", 30).setOrigin(.5);\n        this.add(this.tfName);\n\n        this.tfScore = this.scene.add.bitmapText(widthBg / 8 * 5 + dX, 0, \"aivaGold\", \"\", 50).setOrigin(.5);\n        this.add(this.tfScore);\n    }\n\n    public init(color: string, name: string, score: string, isActive: boolean = false): void {\n        this.icon.play(ButtonIconsUtils.getIconAnimationName(color));\n\n        const index: number = +color.substr(color.length - 1);\n\n        if (index < 4) {\n            this.icon.setOrigin(1);\n        } else {\n            this.icon.setOrigin(.5);\n        }\n\n        this.tfName.text = name;\n        this.tfScore.text = score;\n\n        // this.tfScore.color = 0xFFFFCC;\n\n        if (isActive) {\n            // this.tfScore.color = 0xFFFF00;\n        }\n    }\n\n    public free(): void {\n        this.icon.anims.stop();\n    }\n\n    // public advanceTime(time: number): void {\n    //     _deltaTime += time;\n    //     x = 10 * Math.sin(_deltaTime * 5);\n    // }\n\n    public get height(): number { return this.bg.height * this.scaleY; }\n}\n","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { Container, Image } from \"../../exports\";\nimport { MenuEvents } from \"../../menu/events/MenuEvents\";\nimport { AmbientSoundPlugin } from \"../../plugins/sounds/AmbientSoundPlugin\";\nimport { IMuteSound } from \"../../scenes/interfaces/IMuteSound\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { AMath } from \"../../utils/AMath\";\nimport { IMove } from \"../interfaces/IMove\";\nimport { SoundToggle } from \"../views/SoundToggle\";\nimport { ScrollMonster } from \"./ScrollMonster\";\n\nexport class MoveH extends Container implements IMove {\n\n    protected scene: BaseScene;\n\n    private toggleId: string;\n\n    private scrollMonster: ScrollMonster;\n\n    private ambientSoundPlugin: AmbientSoundPlugin;\n\n    private _volumeLevel: number;\n    private _percent: number;\n\n    constructor(scene: BaseScene, toggleId: string, color: string) {\n        super(scene);\n\n        this.ambientSoundPlugin = this.scene.plugins.get(\"ambientSoundPlugin\") as AmbientSoundPlugin;\n\n        this.toggleId = toggleId;\n\n        const circleL: Image = this.scene.add.image(-SoundToggle.RANGE / 2, 0, \"menu\", \"soundToggleCircle\");\n        circleL.setOrigin(.5);\n\n        const circleR: Image = this.scene.add.image(SoundToggle.RANGE / 2, 0, \"menu\", \"soundToggleCircle\");\n        circleR.setOrigin(.5);\n\n        this.scrollMonster = new ScrollMonster(scene, color);\n        this.scrollMonster.init();\n        this.add([circleL, circleR, this.scrollMonster]);\n    }\n\n    public startMoveScroll(): void {\n        this.scrollMonster.startMove();\n    }\n\n    public stopMoveScroll(): void {\n        this.scrollMonster.stopMove();\n    }\n\n    public update(x1: number, x2: number): void {\n        const val: number = x2 - x1;\n        this.calc(\n            val > SoundToggle.RANGE\n                ? SoundToggle.RANGE\n                : val < 0\n                    ? 0\n                    : val\n        );\n    }\n\n    public saveVolume(): void {\n        this.toggleId === SoundToggle.SOUNDS\n            ? GameDataModel.volumeSounds = this._volumeLevel\n            : GameDataModel.volumeMusic = this._volumeLevel;\n        this.scene.gameDataModel.saveData();\n    }\n\n    private calc(val: number): void {\n        this.scrollMonster.move(val - SoundToggle.RANGE_HALF);\n\n        this._volumeLevel = AMath.toPercent(val, SoundToggle.RANGE);\n        this._percent = Math.floor(this._volumeLevel * 100);\n\n        if (this.toggleId === SoundToggle.MUSIC) {\n            this.ambientSoundPlugin.setVolume(this._volumeLevel);\n        }\n\n        this.scene.game.events.emit(\n            MenuEvents.MUTE_SOUNDS,\n            {\n                toggleId: this.toggleId,\n                muted: this._volumeLevel <= 0\n            } as IMuteSound\n        );\n    }\n\n    public set volumeLevel(val: number) {\n        this.calc(val * SoundToggle.RANGE);\n    }\n\n    public get volumeLevel(): number { return this._volumeLevel; }\n    public get percent(): number { return this._percent; }\n}","import { Container, Sprite } from \"../../exports\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\n\nexport class ScrollMonster extends Container {\n\n    private sprite: Sprite;\n    private color: string;\n\n    constructor(scene: BaseScene, animName: string) {\n        super(scene);\n\n        this.color = animName.toUpperCase();\n\n        this.sprite = this.scene.add.sprite(0, 0, \"\");\n        this.sprite.y = -40;\n\n        this.add([\n            this.scene.add.image(0, 0, \"menu\", \"soundTogglePoint\"),\n            this.sprite\n        ]);\n    }\n\n    public init(): void {\n        this.sprite.play(this.setAnim(this.color));\n    }\n\n    public free(): void {\n        this.sprite.anims.stop();\n    }\n\n    public setIcon(animName: string): void {\n        this.sprite.play(this.setAnim(animName), true, this.getRandomFrame());\n    }\n\n    private getRandomFrame(): number {\n        return Phaser.Math.Between(0, this.sprite.anims.getTotalFrames() - 1) || 0;\n    }\n\n    public startMove(): void {\n        this.setIcon(\"move\" + this.color);\n        this.sprite.anims.setRepeat(-1);\n    }\n\n    public stopMove(): void {\n        this.setIcon(this.color);\n    }\n\n    public move(posX: number): void {\n        this.x = posX;\n    }\n\n    private setAnim(animName: string): string {\n        let animNameFull: string = animName;\n        switch (animName) {\n            case \"Y\": animNameFull = \"animMusic\"; break;\n            case \"O\": animNameFull = \"animSounds\"; break;\n        }\n        return animNameFull;\n    }\n}","import { Image, Scene, Sprite } from \"../../exports\";\nimport { ButtonIconsUtils } from \"../../utils/ButtonIconsUtils\";\nimport { Button } from \"./Button\";\n\nexport class BtnLarge extends Button {\n\n    protected icon: Sprite;\n\n    constructor(scene: Scene, colorIcon: string, text: string, command?: () => void) {\n        super(scene, \"btnWood\", ButtonIconsUtils.getIconAnimationName(colorIcon), command);\n\n        this.addLabel(text, \"aivaStroke\", 40, this.button.width / 10, -20);\n    }\n\n    protected createIcon(iconName: string): void {\n        this.icon = this.scene.add.sprite(-this.button.width / 3, -20, iconName);\n        this.setIcon(iconName);\n        this.buttonContainer.add(this.icon);\n    }\n\n    public setIcon(anim: string): void {\n        this.icon.play(anim);\n    }\n}","import { BitmapText, Container, Image, Scene, Sprite, Texture } from \"../../exports\";\nimport { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { IInteractiveUI } from \"../interfaces/IInteractiveUI\";\n\nexport class Button extends Container implements IInteractiveUI {\n\n    protected button: Image;\n    protected icon: Image | Sprite;\n    protected hover: Image;\n    protected textLabel: BitmapText;\n\n    protected buttonContainer: Container;\n\n    protected uiTextures: string[] = [\"ui\", \"menu\"];\n\n    private command: () => void;\n\n    constructor(scene: Scene, textureName: string, iconName: string, command?: () => void) {\n        super(scene);\n\n        this.scene = scene;\n        if (command) {\n            this.command = command;\n        }\n\n        this.buttonContainer = this.scene.add.container(0, 0);\n        this.add(this.buttonContainer);\n\n        this.createButton(textureName);\n        this.createHover(textureName);\n        this.createIcon(iconName);\n        \n        this.scene.add.existing(this);\n    }\n\n    protected createHover(textureName: string): void {\n        this.hover = this.getView(textureName);\n        this.hover.blendMode = Phaser.BlendModes.ADD;\n        this.hover.alpha = 0;\n        this.buttonContainer.add(this.hover);\n    }\n\n    protected createIcon(iconName: string): void {\n        if (iconName === \"\") {\n            return;\n        }\n        this.icon = this.getView(iconName);\n        this.buttonContainer.add(this.icon);\n    }\n\n    protected createButton(textureName: string): void {\n        this.button = this.getView(textureName);\n        this.buttonContainer.add(this.button);\n    }\n\n    public activate(): void {\n        this.onOut();\n        this.button.setInteractive();\n        this.addListeners();\n    }\n\n    public deactivate(): void {\n        this.removeListeners();\n        this.button.disableInteractive();\n        this.onOut();\n    }\n\n    public addLabel(text: string, font: string, size: number, offsetX: number = 0, offsetY: number = 0): void {\n        this.textLabel = this.getTextLabel(text, font, size);\n        this.textLabel.setPosition(offsetX, offsetY);\n        this.buttonContainer.add(this.textLabel);\n    }\n\n    public setIcon(frame: string): void {\n        if (this.icon) {\n            const atlasName: string = this.getAtlasName(frame);\n            this.icon.setTexture(atlasName, frame);\n        }\n    }\n\n    protected getView(frame: string): Image {\n        const atlasName: string = this.getAtlasName(frame);\n        return this.scene.add.image(0, 0, atlasName, frame);\n    }\n\n    private getAtlasName(frame: string): string {\n        let atlasName: string = this.uiTextures[0];\n        const countAtlases: number = this.uiTextures.length;\n        for (let indexAtlas: number = 0; indexAtlas < countAtlases; indexAtlas++) {\n            const atlasNameTemp: string = this.uiTextures[indexAtlas];\n            const texture: Texture = this.scene.sys.textures.get(atlasNameTemp);\n            if (texture.getFrameNames().indexOf(frame) >= 0) {\n                atlasName = atlasNameTemp;\n                break;\n            }\n        }\n        return atlasName;\n    }\n\n    protected getTextLabel(text: string, font: string, size: number): BitmapText {\n        return this.scene.add.bitmapText(0, 0, font, text, size).setOrigin(.5);\n    }\n\n    private addListeners(): void {\n        this.button.on(\"pointerover\", this.onOver, this);\n        this.button.on(\"pointerout\", this.onOut, this);\n        this.button.on(\"pointerdown\", this.onDown, this);\n        this.button.on(\"pointerup\", this.onClick, this);\n    }\n\n    private removeListeners(): void {\n        this.button.off(\"pointerover\", this.onOver, this);\n        this.button.off(\"pointerout\", this.onOut, this);\n        this.button.off(\"pointerdown\", this.onDown, this);\n        this.button.off(\"pointerup\", this.onClick, this);\n    }\n\n    protected onOver(): void {\n        this.hover.alpha = .4;\n    }\n\n    protected onOut(): void {\n        this.hover.alpha = 0;\n        this.buttonContainer.scale = 1;\n    }\n    \n    protected onDown(): void {\n        this.buttonContainer.scale = .95;\n    }\n\n    protected onClick(): void {\n        this.buttonContainer.scale = 1;\n        this.scene.sound.play(\"Move\", { volume: GameDataModel.volumeSounds });\n        if (this.guard && this.command) {\n            this.command();\n        } else {\n            console.error(\"Button dosen't have command: \" + this);\n        }\n    }\n\n    protected guard(): boolean {\n        return true;\n    }\n\n    public set text(value: string) {\n        this.textLabel.text = value;\n    }\n\n    public get width(): number {\n        return this.button.width;\n    }\n\n    public get height(): number {\n        return this.button.height;\n    }\n}","import { Scene, Sprite, Image } from \"../../exports\";\nimport { ColorIDsUtils } from \"../../utils/ColorIDsUtils\";\nimport { Button } from \"./Button\";\nimport { ChangeVisibilityUtils } from \"../../utils/ChangeVisibilityUtils\";\n\nexport class ButtonProfile extends Button {\n\n    private arrPos: string[] = [\"Out\", \"Up\"];\n    protected icon: Sprite;\n\n    constructor(scene: Scene, command?: () => void) {\n        super(scene, \"btnWoodSplit\", \"redUp\", command);\n\n        this.addLabel(\"???\", \"aivaStroke\", 40, -54, -20);\n        this.setScale(.6);\n        this.alpha = 0;\n    }\n\n    protected createIcon(iconName: string): void {\n        this.icon = this.scene.add.sprite(138, -20, iconName);\n        this.buttonContainer.add(this.icon);\n    }\n\n    public setProfile(playerName: string, playerColor: string): void {\n        this.text = playerName;\n        const animationNamePrefix: string = ColorIDsUtils.getColorFromID(playerColor);\n        const animationNamePostfix: string = this.arrPos[Phaser.Math.Between(0, this.arrPos.length - 1)];\n        this.icon.play(animationNamePrefix + animationNamePostfix);\n    }\n\n    public show(): void {\n        ChangeVisibilityUtils.show(this.scene, this, 500, () => this.activate());\n    }\n\n    public hide(): void {\n        this.deactivate();\n        ChangeVisibilityUtils.hide(this.scene, this, 500);\n    }\n}","import { GameDataModel } from \"../../data/models/GameDataModel\";\nimport { BitmapText, Container, Image, Pointer } from \"../../exports\";\nimport { SceneEvents } from \"../../scenes/events/SceneEvents\";\nimport { IMuteSound } from \"../../scenes/interfaces/IMuteSound\";\nimport { BaseScene } from \"../../scenes/views/BaseScene\";\nimport { MoveH } from \"../components/MoveH\";\nimport { IInteractiveUI } from \"../interfaces/IInteractiveUI\";\n\nexport class SoundToggle extends Container implements IInteractiveUI {\n\n    public static RANGE: number = 200;\n    public static RANGE_HALF: number = SoundToggle.RANGE / 2;\n\n    public static MUSIC: string = \"music\";\n    public static SOUNDS: string = \"sounds\";\n\n    private sprite: Image;\n    private tfLabel: BitmapText;\n    private tfLabelPercent: BitmapText;\n    private tfValue: BitmapText;\n\n    private move: MoveH;\n\n    private isDown: boolean;\n    private toggleId: string;\n\n    protected scene: BaseScene;\n\n    constructor(scene: BaseScene, toggleId: string, color: string) {\n        super(scene);\n\n        this.toggleId = toggleId;\n\n        this.sprite = this.scene.add.image(0, 0, \"menu\", \"btnWoodSplit\");\n        this.add(this.sprite);\n\n        const wSprite: number = this.sprite.width;\n        const hSprite: number = this.sprite.height;\n\n        const posXCenterLeft: number = wSprite / 48 * 17.5 - wSprite / 2;\n        const posXCenterRight: number = wSprite / 20 * 17 - wSprite / 2;\n        const posYBottom: number = hSprite / 5 * 3 - hSprite / 2;\n        const posYTop: number = hSprite / 7 * 2 - hSprite / 2;\n\n        const fontSizeBottom: number = 25;\n        const fontSizeTop: number = 40;\n\n        this.tfLabel = this.scene.add.bitmapText(posXCenterLeft, posYBottom, \"aivaStroke\", \"MUSIC\", fontSizeBottom).setOrigin(.5);\n        this.tfLabelPercent = this.scene.add.bitmapText(posXCenterRight, posYBottom, \"aivaStroke\", \"%\", fontSizeBottom).setOrigin(.5);\n        this.tfValue = this.scene.add.bitmapText(posXCenterRight, posYTop, \"aivaGold\", \"100\", fontSizeTop).setOrigin(.5);\n        this.add([\n            this.tfLabel,\n            this.tfLabelPercent,\n            this.tfValue\n        ]);\n\n        this.move = new MoveH(this.scene as BaseScene, this.toggleId, color);\n        this.move.x = posXCenterLeft;\n        this.move.y = posYTop + 15;\n        this.add(this.move);\n    }\n\n    public activate(): void {\n        this.sprite.setInteractive();\n\n        this.sprite.on(\"pointerdown\", this.onTouchDown, this);\n        this.sprite.on(\"pointerup\", this.onTouchUp, this);\n        this.scene.input.on(\"pointerup\", this.onTouchUp, this);\n        this.scene.input.on(\"pointermove\", this.onMove, this);\n\n        this.scene.game.events.addListener(SceneEvents.MUTE_SOUNDS, this.updateSoundsUI, this);\n    }\n\n    public deactivate(): void {\n        this.sprite.disableInteractive();\n\n        this.sprite.off(\"pointerdown\", this.onTouchDown, this);\n        this.sprite.off(\"pointerup\", this.onTouchUp, this);\n        this.scene.input.off(\"pointerup\", this.onTouchUp, this);\n        this.scene.input.off(\"pointermove\", this.onMove, this);\n\n        this.scene.game.events.removeListener(SceneEvents.MUTE_SOUNDS, this.updateSoundsUI, this);\n    }\n\n    private updateSoundsUI(data: IMuteSound): void {\n        if (data.toggleId === this.toggleId) {\n            this.loadVolume(+data.muted);\n        }\n    }\n\n    public loadVolume(value: number): void {\n        this.move.volumeLevel = value;\n        this.tfValue.text = this.move.percent.toString();\n    }\n\n    private onTouchDown(pointer: Pointer): void {\n        this.isDown = true;\n        this.move.startMoveScroll();\n        this.updateScroller(pointer.x);\n    }\n\n    private onTouchUp(): void {\n        if (this.isDown) {\n            this.isDown = false;\n            this.move.saveVolume();\n            this.move.stopMoveScroll();\n            this.scene.sound.play(\"Move\", { volume: GameDataModel.volumeSounds });\n        }\n    }\n\n    private onMove(pointer: Pointer): void {\n        if (this.isDown) {\n            this.updateScroller(pointer.x);\n        }\n    }\n\n    private updateScroller(pointerX: number): void {\n        const x1: number = this.move.x;\n        const x2: number = (pointerX - this.scene.x) * this.scene.globalScale - this.x + SoundToggle.RANGE_HALF;\n        this.move.update(x1, x2);\n        this.tfValue.text = this.move.percent.toString();\n    }\n\n    public set text(value: string) {\n        this.tfLabel.text = value;\n    }\n\n    public get width(): number {\n        return this.sprite.width;\n    }\n}","import { Scene } from \"phaser\";\nimport { Button } from \"./Button\";\nimport { Image } from \"../../exports\";\n\nexport class Toggle extends Button {\n\n    public static readonly ICON_MUSIC: string = \"iconMusic\";\n    public static readonly ICON_SOUND: string = \"iconSounds\";\n    public static readonly ICON_CELL: string = \"iconCell\";\n\n    private lineSwitchOff: Image;\n    private isSwitch: boolean = true;\n\n    constructor(scene: Scene, textureName: string, iconName: string, command?: () => void) {\n        super(scene, textureName, iconName, command);\n\n        this.lineSwitchOff = this.getView(\"lineSwitch\");\n        this.lineSwitchOff.rotation = 45;\n        this.lineSwitchOff.visible = false;\n        this.add(this.lineSwitchOff);\n    }\n\n    public switchOn(): void {\n        this.isSwitch = true;\n        this.lineSwitchOff.visible = !this.isSwitch;\n    }\n\n    public switchOff(): void {\n        this.isSwitch = false;\n        this.lineSwitchOff.visible = !this.isSwitch;\n    }\n\n    protected onClick(): void {\n        this.isSwitch = !this.isSwitch;\n        super.onClick();\n\n        this.isSwitch ? this.switchOn() : this.switchOff();\n    }\n\n    public get switched(): boolean { return this.isSwitch; }\n}","import { Button } from \"./Button\";\nimport { Tween, Scene } from \"../../exports\";\n\nexport class URLButton extends Button {\n    \n    private static readonly SHOWING_POSITION: number = -186;\n\n    private url: string;\n    private tween: Tween;\n    private delay: number;\n    \n    constructor(scene: Scene, iconName: string, delay: number) {\n        super(scene, \"btnSocial\", iconName, () => this.execute());\n    \n        this.delay = delay;\n        this.url = \"\";\n        this.alpha = 0;\n    }\n\n    public init(): void {\n        this.removeTweens();\n        this.tween = this.scene.add.tween({\n            targets: this,\n            y: URLButton.SHOWING_POSITION,\n            alpha: 1,\n            duration: 500,\n            delay: this.delay,\n            onComplete: () => this.activate()\n        });\n    }\n\n    public free(): void {\n        this.deactivate();\n        this.removeTweens();\n        this.tween = this.scene.add.tween({\n            targets: this,\n            y: 0,\n            alpha: 0,\n            duration: 500,\n            delay: this.delay\n        });\n    }\n\n    private removeTweens(): void {\n        if (this.tween) {\n            this.tween.remove();\n        }\n    }\n\n    public addURL(url: string): void {\n        this.url = url;\n    }\n\n    private execute(): void {\n        window.open(this.url);\n    }\n\n    protected guard(): boolean {\n        return this.url !== \"\";\n    }\n}","export class AMath {\n\n    public static distance(x1: number, y1: number, x2: number, y2: number): number {\n        const X1X2: number = Math.abs(x1 - x2); // абсолютная дистанция между точками по оси Х\n        const Y1Y2: number = Math.abs(y1 - y2); // абсолютная дистанция между точками по оси Y\n        return Math.sqrt(Math.pow(X1X2, 2) + Math.pow(Y1Y2, 2));\n    }\n\n    public static random(lower: number, upper: number, float = 0): number {\n        const grade: number = Math.pow(10, float);\n        return (Math.floor(((upper - lower) * grade + .99) * Math.random() + (lower * grade))) / grade;\n    }\n\n    public static toDegrees(radians: number): number {\n        return radians * (180 / Math.PI);\n    }\n\n    public static toRadians(degrees: number): number {\n        return degrees * (Math.PI / 180);\n    }\n\n    public static equal(a: number, b: number, diff: number = 0.00001): boolean {\n        return (Math.abs(a - b) <= diff);\n    }\n\n    public static getAngleRad(x1: number, y1: number, x2: number, y2: number, norm: boolean = true): number {\n        const dx: number = x2 - x1;\n        const dy: number = y2 - y1;\n        let angle: number = Math.atan2(dy, dx);\n\n        if (norm) {\n            if (angle < 0) {\n                angle = Math.PI * 2 + angle;\n            } else if (angle >= Math.PI * 2) {\n                angle = angle - Math.PI * 2;\n            }\n        }\n        return angle;\n    }\n\n    public static getAngleDeg(x1: number, y1: number, x2: number, y2: number, norm: boolean = true): number {\n        const dx: number = x2 - x1;\n        const dy: number = y2 - y1;\n        let angle: number = Math.atan2(dy, dx) / Math.PI * 180;\n\n        if (norm) {\n            if (angle < 0) {\n                angle = 360 + angle;\n            } else if (angle >= 360) {\n                angle = angle - 360;\n            }\n        }\n        return angle;\n    }\n\n    public static toPercent(current: number, total: number): number {\n        return current / total;\n    }\n\n    public static fromPercent(percent: number, total: number): number {\n        return total / 100 * percent;\n    }\n\n    public static summ(values: number[]): number {\n        let s: number = 0;\n        const n: number = values.length;\n\n        for (let i: number = 0; i < n; i++) {\n            s += values[i];\n        }\n        return s;\n    }\n\n    public static aver(values: number[], count: number = -1): number {\n        let s: number = 0;\n        const n: number = values.length;\n        let aver: number;\n\n        for (let i: number = 0; i < n; i++) {\n            s += values[i];\n        }\n        aver = s / n;\n\n        if (count === -1) {\n            return aver;\n        }\n        const round: number = Math.pow(10, count);\n\n        return Math.round(aver * round) / round;\n    }\n}","export class ButtonIconsUtils {\n\n    private static iconAnimationNames: { [key: string]: string } = {\n        d: \"darkOut\",\n        r: \"redOut\",\n        o: \"orangeOut\",\n        o2: \"orangeOut\",\n        b: \"blueOut\",\n        g: \"greenOut\",\n        p: \"purpleOut\",\n\n        activeR4: \"redUp\",\n        activeO4: \"orangeUp\",\n        activeY4: \"yellowUp\",\n        activeG4: \"greenUp\",\n        activeB4: \"blueUp\",\n        activeP4: \"purpleUp\",\n        activeD4: \"darkUp\",\n\n        a: \"all\",\n        y: \"y2_\",\n        y2: \"y2_\",\n        d3: \"isEscape\",\n        d4: \"notEscape\",\n        g2: \"langRu\",\n        g3: \"langEn\",\n        u: \"unknown\"\n    };\n\n    public static getIconAnimationName(animationName: string): string {\n        return ButtonIconsUtils.iconAnimationNames[animationName] || animationName;\n    }\n}","import { Container, Scene, Tween } from \"../exports\";\n\nexport class ChangeVisibilityUtils {\n    \n    private static removeTweens(scene: Scene, object: Container): void {\n        scene.tweens.getTweensOf(object).forEach((tween: Tween) => tween.remove());\n    }\n    \n    public static show(scene: Scene, object: Container, time: number, complete?: () => void): void {\n        ChangeVisibilityUtils.removeTweens(scene, object);\n        object.visible = true;\n        scene.add.tween({\n            targets: object,\n            alpha: 1,\n            duration: time,\n            onComplete: () => {\n                if (complete) {\n                    complete();\n                }\n            }\n        });\n    }\n    \n    public static hide(scene: Scene, object: Container, time: number, complete?: () => void): void {\n        ChangeVisibilityUtils.removeTweens(scene, object);\n        object.visible = true;\n        scene.add.tween({\n            targets: object,\n            alpha: 0,\n            duration: time,\n            onComplete: () => {\n                object.visible = false;\n                if (complete) {\n                    complete();\n                }\n            }\n        });\n    }\n}","import { MonsterColor } from \"../monsters/constants\";\n\nexport class ColorIDsUtils {\n\n    private static arrColorMonsters: string[] = [\n        MonsterColor.RED,\n        MonsterColor.ORANGE,\n        MonsterColor.YELLOW,\n        MonsterColor.GREEN,\n        MonsterColor.BLUE,\n        MonsterColor.PURPLE,\n        MonsterColor.DARK\n    ];\n    private static readonly arrColorChars: string[] = [\"r\", \"o\", \"y\", \"g\", \"b\", \"p\", \"d\"];\n    private static readonly arrColorIDs: { [key: string]: string } = {\n        r: \"red\",\n        o: \"orange\",\n        y: \"yellow\",\n        g: \"green\",\n        b: \"blue\",\n        p: \"purple\",\n        d: \"dark\"\n    };\n\n    public static getColorFromID(id: string): string {\n        return this.arrColorIDs[id] ? this.arrColorIDs[id] : \"addUser\";\n    }\n\n    public static getColorFromIndex(index: number): string {\n        return ColorIDsUtils.getColorFromID(ColorIDsUtils.getColorFromChar(index));\n    }\n\n    public static getFullColorFromIndex(index: number): string {\n        return ColorIDsUtils.arrColorMonsters[index];\n    }\n\n    public static getColorFromChar(index: number): string {\n        const colorChar: string = this.arrColorChars[index];\n\n        if (colorChar) {\n            return colorChar;\n        }\n\n        return \"\";\n    }\n\n    public static getIndexFromColor(color: string): number {\n        return this.arrColorMonsters.indexOf(color);\n    }\n\n    public static getCharColorFromColor(color: string): string {\n        return this.arrColorChars[this.getIndexFromColor(color)];\n    }\n\n    public static getRandomColor(): string {\n        return ColorIDsUtils.arrColorMonsters[Phaser.Math.Between(0, ColorIDsUtils.count - 1)];\n    }\n\n    public static get count(): number {\n        return this.arrColorChars.length;\n    }\n}","export class ComponentPool {\n\n    private static instance: ComponentPool;\n\n    private pools: { [key: string]: any[]; } = {};\n\n    constructor() {\n        if (!ComponentPool.instance) {\n            ComponentPool.instance = this;\n        }\n        return ComponentPool.instance;\n    }\n\n    private getPool(key: string): any[] {\n        if (key in this.pools) {\n            return this.pools[key];\n        }\n        return this.pools[key] = [];\n    }\n\n    public get<T>(classType: new(...args: any) => T, ...args: any): T {\n        const poolKey: string = classType.prototype.constructor.name;\n        const pool: T[] = this.getPool(poolKey);\n        return pool.pop() || this.create(classType, ...args);\n    }\n\n    private create<T>(classType: new(...args: any) => T, ...args: any): T {\n        if (args) {\n            return new classType(...args);\n        }\n        return new classType();\n    }\n\n    public dispose(classInstance: any): void {\n        if (classInstance) {\n            const poolKey: string = classInstance.constructor.name;\n            const pool: any[] = this.getPool(poolKey);\n            pool[pool.length] = classInstance;\n        }\n    }\n\n    public empty(): void {\n        this.pools = {};\n    }\n}","import \"fpsmeter\";\n\nexport class FPSMeterApp {\n\n    private readonly fpsmeterOptions: FPSMeterOptions = {\n        theme: \"dark\", // 'dark', 'light', 'transparent', 'colorful'\n        heat: 1,\n        graph: 1,\n        history: 20,\n        zIndex: 100,\n        top: \"auto\",\n        left: \"auto\",\n        right: \"auto\",\n        bottom: \"0\"\n    };\n\n    private readonly fpsmeter: FPSMeter;\n\n    constructor() {\n        const element: HTMLElement = document.getElementById(\"fps-meter\") || document.body;\n        this.fpsmeter = new FPSMeter(element, this.fpsmeterOptions);\n        this.fpsmeter.show();\n    }\n\n    public tick(): void {\n        this.fpsmeter.tick();\n    }\n}\n","import { IGameData } from \"../data/interfaces/IGameData\";\n\nexport class LocalStorageUtils {\n\n    private static readonly KEY_STORAGE: string = \"ag_moli\";\n\n    public static saveData(data: IGameData): void {\n        if (LocalStorageUtils.isLocalStorageAvailable) {\n            localStorage.setItem(\n                LocalStorageUtils.KEY_STORAGE,\n                JSON.stringify(data)\n            );\n        }\n    }\n\n    public static readData(): IGameData | null {\n        if (LocalStorageUtils.isLocalStorageAvailable) {\n            const data: string | null = localStorage.getItem(LocalStorageUtils.KEY_STORAGE);\n            if (data) {\n                return JSON.parse(data);\n            }\n        }\n        return null;\n    }\n\n    public static clearLocalStorage(): void {\n        if (LocalStorageUtils.isLocalStorageAvailable) {\n            localStorage.removeItem(LocalStorageUtils.KEY_STORAGE);\n        }\n    }\n\n    private static get isLocalStorageAvailable(): boolean {\n        return true;\n    }\n}","export class SeasonsUtils {\n\n    public static readonly SEASONS_COUNT: number = 4;\n\n    public static readonly SEASON_SPRING: number = 0;\n    public static readonly SEASON_SUMMER: number = 1;\n    public static readonly SEASON_AUTUMN: number = 2;\n    public static readonly SEASON_WINTER: number = 3;\n\n    public static readonly COLOR_CELL_SPRING: number = 0xDBB862;\n    public static readonly COLOR_CELL_SUMMER: number = 0xC69E42;\n    public static readonly COLOR_CELL_AUTUMN: number = 0x3F3B48;\n    public static readonly COLOR_CELL_WINTER: number = 0xB9DBFC;\n\n    private static readonly seasonsNames: string[] = [\n        \"Spring\",\n        \"Summer\",\n        \"Autumn\",\n        \"Winter\"\n    ];\n\n    private static readonly seasonsColors: number[] = [\n        SeasonsUtils.COLOR_CELL_SPRING,\n        SeasonsUtils.COLOR_CELL_SUMMER,\n        SeasonsUtils.COLOR_CELL_AUTUMN,\n        SeasonsUtils.COLOR_CELL_WINTER\n    ];\n\n    public static getSeasonNameByID(seasonID: number): string {\n        return this.seasonsNames[seasonID];\n    }\n\n    public static getColorSeasonByID(seasonID: number): number {\n        return this.seasonsColors[seasonID];\n    }\n}","import { Container } from \"../exports\";\nimport { IAnimatable } from \"../scenes/interfaces/IAnimatable\";\nimport { EnterFrameManager } from \"../scenes/managers/EnterFrameManager\";\n\nexport class ShakerUtils implements IAnimatable {\n    private static readonly RANGE: number = 15;\n    private static readonly DAMP: number = .9;\n\n    private targetObj: Container;\n    private startPositionX: number;\n\n    private range: number;\n    private coeff: number;\n\n    public start(targetObj: Container): void {\n        this.targetObj = targetObj;\n        this.startPositionX = this.targetObj.x;\n\n        this.coeff = 1;\n        this.range = ShakerUtils.RANGE;\n        \n        EnterFrameManager.add(this);\n    }\n\n    public stop(): void {\n        this.targetObj.x = this.startPositionX;\n        EnterFrameManager.remove(this);\n    }\n\n    public onUpdate(deltaTime: number): void {\n        this.range *= ShakerUtils.DAMP * (this.coeff *= -1);\n        this.targetObj.x = this.startPositionX + this.range;\n\n        if (Phaser.Math.Distance.Between(this.targetObj.x, 0, this.startPositionX, 0) <= .1) {\n            stop();\n        }\n    }\n}"],"sourceRoot":""}